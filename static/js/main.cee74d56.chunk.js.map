{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Dialogs/Dialogs.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Friends/Friends.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Friends/FriendsItem/FriendsItem.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css","components/News/News.module.css","components/Music/Music.module.css","components/Setting/Settings.module.css","components/SiteBar/SiteBar.module.css","components/Profile/Profile.module.css","components/Profile/ProfileInfo/Social/Social.module.css","components/Navbar/Navbar.module.css","components/Login/Login.module.css","components/Users/Users.module.css","reportWebVitals.ts","api/api.ts","redux/profile-reducer.ts","redux/dialogs-reducer.ts","redux/sidebar-reducer.ts","redux/users-reducer.ts","redux/auth-reducer.ts","redux/redux-store.ts","components/News/News.tsx","components/Music/Music.tsx","components/Setting/Settings.tsx","components/Friends/FriendsItem/FriendsItem.tsx","components/Friends/Friends.tsx","components/SiteBar/SiteBarContainer.tsx","components/SiteBar/SiteBar.tsx","components/Navbar/Navbar.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/hoc/WithAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx","assets/images/avatar.png","locale/en_US.tsx","components/Users/Users.tsx","assets/images/spinner.svg","components/common/Preloader/Preloader.tsx","components/Users/UsersContainer.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/ProfileInfo/Social/Social.tsx","assets/images/profile-image.jpg","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","assets/images/logo.svg","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","App.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","response","data","userId","post","delete","authAPI","profileAPI","status","put","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","SET_STATUS","initialState","posts","id","v1","message","likeCount","newPostText","profile","setStatus","type","profileReducer","state","action","newPost","ADD_MESSAGE","UPDATE_NEW_MESSAGE","dialogs","name","messages","user","newMessageText","dialogsReducer","friends","sidebarReducer","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","toggleIsFetching","toggleFollowingInProgress","usersReducer","map","u","userID","followed","filter","SET_USER_DATA","email","login","isAuth","authReducer","reducers","combineReducers","profilePage","dialogsPage","siteBar","usersPage","auth","store","createStore","applyMiddleware","thunkMiddleware","window","News","className","s","news","Music","music","Settings","settings","FriendsItem","props","item","circle","Friends","friendsElements","wrapper","title","friendsList","SiteBarContainer","connect","Navbar","nav","to","activeClassName","activeLink","active","DialogItem","path","dialogItem","link","width","height","src","alt","Message","user1","user2","Dialogs","dialogsElements","d","messagesElements","m","newMessageElement","useRef","dialogsItems","listReset","messenger","textareaWrapper","placeholder","ref","value","onChange","current","text","updateNewMessageText","submitWrapper","onClick","sendMessage","mapStateToPropsForRedirect","withAuthRedirect","Component","restProps","compose","dispatch","updateNewMessageTextCreator","localeInfo","items_per_page","jump_to","jump_to_confirm","page","prev_page","next_page","prev_5","next_5","prev_3","next_3","Users","showTitle","e","onPageChanged","defaultCurrent","defaultPageSize","total","locale","leftContent","avatarBG","avatar","photos","small","avatarDefaultPhoto","buttons","unfollow","follow","disabled","some","rightContent","innerLeft","innerRight","country","city","Preloader","preloader","UsersContainer","this","getUsers","pageNumber","setCurrentPage","bind","React","resultCode","totalCount","items","Post","like","MyPosts","postsElements","p","newPostElement","wrapperMessenger","wrapperContent","wrapperTextarea","updateNewPostText","wrapperButton","addPost","MyPostsContainer","updateNewPostTextCreator","Social","social","facebook","AiOutlineFacebook","vk","FaVk","twitter","FaTwitter","instagram","FaInstagram","youtube","FaYoutubeSquare","github","FaGithub","ProfileStatus","editMode","activateEditMode","setState","deactivateEditMode","updateStatus","onStatusChange","currentTarget","prevProps","prevState","console","log","onDoubleClick","onBlur","autoFocus","ProfileInfo","isEmptySocial","contacts","mainLink","website","preview","bgImage","person","photo","large","PhotoDefault","description","fullName","aboutMe","lookingForAJob","work","MdWork","lookingForAJobDescription","Profile","ProfileContainer","match","params","getUserProfile","getStatus","withRouter","Header","header","logo","loginBlock","HeaderContainer","getAuthUserData","setAuthUserData","Login","App","exact","render","component","DialogsContainer","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cee74d56.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ProfileInfo_wrapper__2TN9j\",\"person\":\"ProfileInfo_person__2W0sc\",\"status\":\"ProfileInfo_status__3wAsk\",\"preview\":\"ProfileInfo_preview__2NOY3\",\"description\":\"ProfileInfo_description__MfRma\",\"work\":\"ProfileInfo_work__KuhDm\",\"photo\":\"ProfileInfo_photo__16Miy\",\"name\":\"ProfileInfo_name__3ORPZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__9d_03\",\"listReset\":\"Dialogs_listReset__2DZjo\",\"dialogsItems\":\"Dialogs_dialogsItems__3xfpV\",\"active\":\"Dialogs_active__R-dH6\",\"messages\":\"Dialogs_messages__32clz\",\"messenger\":\"Dialogs_messenger__3HgeR\",\"textareaWrapper\":\"Dialogs_textareaWrapper__18KeY\",\"submitWrapper\":\"Dialogs_submitWrapper__3N8VE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MyPosts_wrapper__3pZ18\",\"wrapperMessenger\":\"MyPosts_wrapperMessenger__2cJyv\",\"wrapperContent\":\"MyPosts_wrapperContent__3L0-j\",\"wrapperTextarea\":\"MyPosts_wrapperTextarea__2Swqi\",\"wrapperButton\":\"MyPosts_wrapperButton__1QS50\",\"posts\":\"MyPosts_posts__3GeRT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Friends_wrapper__1ATQ7\",\"title\":\"Friends_title__18mMj\",\"friendsList\":\"Friends_friendsList__200-J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"DialogItem_dialogItem__3VzTr\",\"link\":\"DialogItem_link__2xWDI\",\"active\":\"DialogItem_active__bUNsx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1TnnS\",\"user1\":\"Message_user1__S8wZx\",\"user2\":\"Message_user2__2h3_T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendsItem_item__2fAi-\",\"circle\":\"FriendsItem_circle__1Hy3A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2ZpOe\",\"like\":\"Post_like__29_NC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1tXis\",\"loginBlock\":\"Header_loginBlock__Xhj6l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__3q4B5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__14jij\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__1Twb_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"siteBar\":\"SiteBar_siteBar__UVcXu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1U4Qr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"social\":\"Social_social__A0wT0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Navbar_wrapper__3oknN\",\"nav\":\"Navbar_nav__3j_MG\",\"item\":\"Navbar_item__1OyJD\",\"activeLink\":\"Navbar_activeLink__2Ubgr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__20SqU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__ygJzY\",\"leftContent\":\"Users_leftContent__3imbX\",\"buttons\":\"Users_buttons__1TWgR\",\"unfollow\":\"Users_unfollow__3FA7I\",\"follow\":\"Users_follow__2fcw9\",\"avatarBG\":\"Users_avatarBG__1o7T-\",\"avatar\":\"Users_avatar__1n4J8\",\"user\":\"Users_user__3zAP9\",\"rightContent\":\"Users_rightContent__1TefX\",\"innerLeft\":\"Users_innerLeft__38_DD\",\"innerRight\":\"Users_innerRight__1zpr6\",\"name\":\"Users_name__29eea\",\"status\":\"Users_status__3wQOm\",\"city\":\"Users_city__2e9I0\",\"country\":\"Users_country__35-4c\",\"page\":\"Users_page__Pgi1K\",\"current\":\"Users_current__2iicU\"};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import axios from \"axios\";\r\n\r\nconst baseURL = 'https://social-network.samuraijs.com/api/1.0/';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL,\r\n    headers: {\r\n        \"API-KEY\": \"e12dcb15-1200-4ce1-bb28-bb99ac0ccb98\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number = 1, pageSize: number = 5) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n\r\n    follow(userId: string) {\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => response.data);\r\n    },\r\n\r\n    unfollow(userId: string) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(response => response.data);\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    get() {\r\n        return instance.get('auth/me').then(response => response.data);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    get(userId: string) {\r\n        return instance.get(`profile/${userId}`).then(response => response.data);\r\n    },\r\n\r\n    getStatus(userId: string) {\r\n        return instance.get(`profile/status/${userId}`).then(response => response.data);\r\n    },\r\n\r\n    updateStatus(status: string) {\r\n        return instance.put('profile/status', {status}).then(response => response.data);\r\n    },\r\n}\r\n\r\n","import {v1} from \"uuid\";\r\nimport {profileAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\r\nconst SET_USER_PROFILE = \"SET-USER-PROFILE\";\r\nconst SET_STATUS = \"SET-STATUS\";\r\n\r\nexport type ActionsProfileType = AddPostType | UpdatePostType | SetUsersType |  SetStatusType;\r\n\r\ntype AddPostType = {\r\n    type: typeof ADD_POST\r\n}\r\n\r\ntype UpdatePostType = {\r\n    type: typeof UPDATE_NEW_POST_TEXT\r\n    newPostText: string\r\n}\r\n\r\ntype SetUsersType = {\r\n    type: typeof SET_USER_PROFILE\r\n    profile: ProfileType\r\n}\r\n\r\ntype SetStatusType = {\r\n    type: typeof SET_STATUS\r\n    status: string\r\n}\r\n\r\ntype ContactsType = {\r\n    github: string\r\n    vk: string\r\n    facebook: string\r\n    instagram: string\r\n    twitter: string\r\n    website: string\r\n    youtube: string\r\n    mainLink: string\r\n}\r\n\r\ntype PhotosType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\n\r\nexport type ProfileType = {\r\n    \"aboutMe\": string\r\n    \"contacts\": ContactsType\r\n    \"lookingForAJob\": boolean\r\n    \"lookingForAJobDescription\": string\r\n    \"fullName\": string\r\n    \"userId\": number\r\n    \"photos\": PhotosType\r\n}\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: v1(), message: 'Hi, how are you?', likeCount: 3},\r\n        {id: v1(), message: 'How is your it-camasutra?', likeCount: 13},\r\n    ],\r\n    newPostText: '',\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n};\r\n\r\nexport type ProfilePageType = typeof initialState\r\n\r\nconst profileReducer = (state: ProfilePageType = initialState, action: ActionsProfileType): ProfilePageType => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: v1(),\r\n                message: state.newPostText,\r\n                likeCount: 0\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                posts: [newPost, ...state.posts],\r\n                newPostText: ''\r\n            };\r\n        }\r\n\r\n        case UPDATE_NEW_POST_TEXT: {\r\n\r\n            return {\r\n                ...state,\r\n                newPostText: action.newPostText\r\n            };\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n\r\n        case SET_STATUS: {\r\n\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (): AddPostType => ({type: ADD_POST});\r\nexport const setUserProfile = (profile: ProfileType): SetUsersType => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status: string): SetStatusType => ({type: SET_STATUS, status});\r\nexport const getUserProfile = (userID: string) => (dispatch: Dispatch<ActionsProfileType>) => {\r\n    profileAPI.get(userID).then(data => dispatch(setUserProfile(data)))\r\n}\r\nexport const getStatus = (userID: string) => (dispatch: Dispatch<ActionsProfileType>) => {\r\n    profileAPI.getStatus(userID).then(data => dispatch(setStatus(data)));\r\n}\r\nexport const updateStatus = (status: string) => (dispatch: Dispatch<ActionsProfileType>) => {\r\n    profileAPI.updateStatus(status).then(data => {\r\n        if(data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    });\r\n}\r\nexport const updateNewPostTextCreator = (text: string): UpdatePostType => ({\r\n    type: UPDATE_NEW_POST_TEXT,\r\n    newPostText: text\r\n});\r\n\r\nexport default profileReducer;","import {v1} from \"uuid\";\r\n\r\nconst ADD_MESSAGE = \"ADD-MESSAGE\";\r\nconst UPDATE_NEW_MESSAGE = \"UPDATE-NEW-MESSAGE\";\r\n\r\nexport type ActionsDialogsType = ActionAddMessageType | ActionUpdateNewMessageType\r\n\r\ntype ActionAddMessageType = {\r\n    type: typeof ADD_MESSAGE\r\n}\r\n\r\ntype ActionUpdateNewMessageType = {\r\n    type: typeof UPDATE_NEW_MESSAGE\r\n    newMessageText: string\r\n}\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: v1(), name: 'Dimych'},\r\n        {id: v1(), name: 'Andrey'},\r\n        {id: v1(), name: 'Sveta'},\r\n        {id: v1(), name: 'Sasha'},\r\n        {id: v1(), name: 'Viktor'},\r\n        {id: v1(), name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: v1(), message: 'Hi!', user: 1},\r\n        {id: v1(), message: 'Hi!', user: 2},\r\n        {id: v1(), message: 'How is your it-camasutra?', user: 2},\r\n        {id: v1(), message: 'Perfectly', user: 1},\r\n        {id: v1(), message: 'It\\'s amazing', user: 2},\r\n        {id: v1(), message: 'Thanks', user: 1}\r\n    ],\r\n    newMessageText: ''\r\n};\r\n\r\nexport type DialogsPageType = typeof initialState\r\n\r\nconst dialogsReducer = (state : DialogsPageType = initialState, action: ActionsDialogsType): DialogsPageType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {\r\n                    id: v1(),\r\n                    message: state.newMessageText,\r\n                    user: 2\r\n                }],\r\n                newMessageText: ''\r\n            };\r\n\r\n        case UPDATE_NEW_MESSAGE:\r\n\r\n            return {...state, newMessageText: action.newMessageText};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addMessageActionCreator = (): ActionAddMessageType => ({type: ADD_MESSAGE});\r\nexport const updateNewMessageTextCreator = (text: string): ActionUpdateNewMessageType => ({\r\n    type: UPDATE_NEW_MESSAGE,\r\n    newMessageText: text\r\n});\r\n\r\nexport default dialogsReducer;","import {v1} from \"uuid\";\r\n\r\n\r\nlet initialState = {\r\n    friends: [\r\n        {id: v1(), name: 'Andrew'},\r\n        {id: v1(), name: 'Sasha'},\r\n        {id: v1(), name: 'Sveta'},\r\n    ]\r\n};\r\n\r\nexport type SiteBarType = typeof initialState\r\n\r\n\r\nconst sidebarReducer = (state: SiteBarType = initialState, action: {}): SiteBarType => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer","import {usersAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst FOLLOW = \"users/FOLLOW\";\r\nconst UNFOLLOW = \"users/UNFOLLOW\";\r\nconst SET_USERS = \"users/SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"users/SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"users/SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"users/TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"users/TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\n\r\ntype ActionFollowType = {\r\n    type: typeof FOLLOW\r\n    userID: string\r\n}\r\n\r\n\r\ntype ActionUnfollowType = {\r\n    type: typeof UNFOLLOW\r\n    userID: string\r\n}\r\n\r\ntype ActionSetUsersType = {\r\n    type: typeof SET_USERS\r\n    users: UserType[]\r\n}\r\n\r\ntype ActionSetCurrentPageType = {\r\n    type: typeof SET_CURRENT_PAGE\r\n    currentPage: number\r\n}\r\n\r\ntype ActionSetTotalUsersCountType = {\r\n    type: typeof SET_TOTAL_USERS_COUNT\r\n    totalUsersCount: number\r\n}\r\n\r\ntype ActionToggleIsFetchingType = {\r\n    type: typeof TOGGLE_IS_FETCHING\r\n    isFetching: boolean\r\n}\r\n\r\ntype ActionToggleIsFollowingProgressType = {\r\n    type: typeof TOGGLE_IS_FOLLOWING_PROGRESS\r\n    isFetching: boolean\r\n    userId: string\r\n}\r\n\r\ntype ActionsUsersType =\r\n    ActionFollowType\r\n    | ActionUnfollowType\r\n    | ActionSetUsersType\r\n    | ActionSetCurrentPageType\r\n    | ActionSetTotalUsersCountType\r\n    | ActionToggleIsFetchingType\r\n    | ActionToggleIsFollowingProgressType;\r\n\r\ntype LocationType = {\r\n    city: string\r\n    country: string\r\n}\r\n\r\nexport type UserType = {\r\n    id: string\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n    name: string\r\n    status: string\r\n    followed: boolean\r\n    location: LocationType\r\n}\r\n\r\nlet initialState = {\r\n    users: [] as UserType[],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as string[]\r\n}\r\n\r\nexport type UsersPageType = typeof initialState\r\n\r\nconst usersReducer = (state: UsersPageType = initialState, action: ActionsUsersType): UsersPageType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users\r\n                    .map(u => (u.id === action.userID)\r\n                        ? {...u, followed: true} : u)\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users\r\n                    .map(u => (u.id === action.userID)\r\n                        ? {...u, followed: false} : u)\r\n            }\r\n\r\n        case SET_USERS:\r\n            return {\r\n                ...state, users: action.users\r\n            }\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state, totalUsersCount: action.totalUsersCount\r\n            }\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state, followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userID: string): ActionFollowType => ({type: FOLLOW, userID});\r\nexport const unfollowSuccess = (userID: string): ActionUnfollowType => ({type: UNFOLLOW, userID});\r\nexport const setUsers = (users: UserType[]): ActionSetUsersType => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage: number): ActionSetCurrentPageType => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalCount: number): ActionSetTotalUsersCountType => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount: totalCount});\r\nexport const toggleIsFetching = (isFetching: boolean): ActionToggleIsFetchingType => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingInProgress = (isFetching: boolean, userId: string): ActionToggleIsFollowingProgressType => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\n\r\n// ThunkCreators\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number) => {\r\n\r\n    return (dispatch: Dispatch<ActionsUsersType>) => {\r\n        dispatch(toggleIsFetching(true));\r\n\r\n        usersAPI.getUsers(currentPage, pageSize)\r\n            .then((data) => {\r\n                dispatch(toggleIsFetching(false));\r\n                dispatch(setUsers(data.items));\r\n                dispatch(setTotalUsersCount(data.totalCount));\r\n            });\r\n    }\r\n}\r\n\r\nexport const follow = (userId: string) => {\r\n    return (dispatch: Dispatch<ActionsUsersType>) => {\r\n        dispatch(toggleFollowingInProgress(true, userId));\r\n        usersAPI.follow(userId)\r\n            .then((data) => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(followSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingInProgress(false, userId));\r\n            });\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId: string) => {\r\n    return (dispatch: Dispatch<ActionsUsersType>) => {\r\n        dispatch(toggleFollowingInProgress(true, userId));\r\n        usersAPI.unfollow(userId).then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(unfollowSuccess(userId));\r\n            }\r\n            dispatch(toggleFollowingInProgress(false, userId));\r\n        });\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import {authAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst SET_USER_DATA = \"users/SET-USER-DATA\";\r\n\r\ntype ActionSetUserDataType = {\r\n    type: typeof SET_USER_DATA\r\n    data: {\r\n        id: string | null\r\n        email: string | null\r\n        login: string | null\r\n    }\r\n\r\n}\r\n\r\nexport type AuthStateType = {\r\n    id: string | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\n\r\n\r\nlet initialState: AuthStateType = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n    // isFetching: false\r\n};\r\n\r\n\r\nconst authReducer = (state: AuthStateType = initialState, action: ActionSetUserDataType): AuthStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {...state, ...action.data, isAuth: true}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (id: string, email: string, login: string) => ({\r\n    type: SET_USER_DATA,\r\n    data: {\r\n        id, email, login\r\n    }\r\n} as const);\r\n\r\n\r\nexport const getAuthUserData = () => (dispatch: Dispatch<ActionSetUserDataType>) => {\r\n    authAPI.get().then(response => {\r\n        if (response.resultCode === 0) {\r\n            let {id, login, email} = response.data;\r\n            dispatch(setAuthUserData(id, email, login));\r\n        }\r\n    });\r\n};\r\n\r\n\r\nexport default authReducer;","import {combineReducers, createStore, applyMiddleware} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    siteBar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer\r\n});\r\n\r\nexport type StateType = ReturnType<typeof reducers>\r\n\r\n\r\n\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\n// @ts-ignore\r\nwindow.store = store\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div className={s.news}>\r\n            <h1>News</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;\r\n","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div className={s.music}>\r\n            <h1>Music</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;\r\n","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div className={s.settings}>\r\n            <h1>Settings</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\nimport s from './FriendsItem.module.css';\r\n\r\nexport type FriendType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nconst FriendsItem: React.FC<FriendType> = (props) => {\r\n\r\n\r\n    return (\r\n        <li className={s.item}>\r\n            <div className={s.circle}></div>\r\n            {props.name}\r\n        </li>\r\n    )\r\n};\r\n\r\nexport {FriendsItem};","import React from 'react';\r\nimport s from './Friends.module.css';\r\nimport {FriendsItem} from \"./FriendsItem/FriendsItem\";\r\nimport {SiteBarType} from \"../../redux/sidebar-reducer\";\r\n\r\nconst Friends: React.FC<SiteBarType> = (props) => {\r\n    const friendsElements = props.friends.map(item => <FriendsItem key={item.id} id={item.id} name={item.name}/>)\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <h2 className={s.title}>Friends</h2>\r\n\r\n            <ul className={s.friendsList}>\r\n                {friendsElements}\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport {Friends};","import {SiteBar} from \"./SiteBar\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\nimport {FriendType} from \"../Friends/FriendsItem/FriendsItem\";\r\n\r\ntype MapStateToPropsType = {\r\n    friends: FriendType[]\r\n}\r\n\r\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\r\n    return {\r\n        friends: state.siteBar.friends\r\n    };\r\n};\r\n\r\n\r\nconst SiteBarContainer = connect(mapStateToProps, {})(SiteBar);\r\n\r\n\r\nexport default SiteBarContainer;\r\n","import React from 'react';\r\nimport s from './SiteBar.module.css';\r\nimport {Friends} from \"../Friends/Friends\";\r\nimport {FriendType} from \"../Friends/FriendsItem/FriendsItem\";\r\n\r\n\r\ntype PropsType = {\r\n    friends: FriendType[]\r\n}\r\nconst SiteBar: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div className={s.siteBar}>\r\n            <Friends friends={props.friends}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport {SiteBar};","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport SiteBarContainer from \"../SiteBar/SiteBarContainer\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <nav className={s.nav}>\r\n                <div className={s.item}>\r\n                    <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n                </div>\r\n\r\n                <div className={`${s.item} ${s.active}`}>\r\n                    <NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to='/login' activeClassName={s.activeLink}>Login</NavLink>\r\n                </div>\r\n            </nav>\r\n\r\n            <SiteBarContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './DialogItem.module.css';\r\n\r\nexport type DialogItemType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nconst DialogItem: React.FC<DialogItemType> = (props) => {\r\n\r\n    const path = `/dialogs/${props.id}`;\r\n\r\n    return (\r\n        <li className={s.dialogItem}>\r\n            <NavLink className={s.link} activeClassName={s.active} to={path}>\r\n                <img width=\"30px\" height=\"30px\"\r\n                     src=\"https://cva.ukzn.ac.za/wp-content/uploads/2019/07/profile-placeholder.png\"\r\n                     alt=\"avatar\"/>\r\n                {props.name}\r\n            </NavLink>\r\n        </li>\r\n    )\r\n};\r\n\r\n\r\nexport\r\n{\r\n    DialogItem\r\n}\r\n    ;\r\n","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\nexport type MessageType = {\r\n    id: string\r\n    message: string | undefined\r\n    user: number\r\n}\r\n\r\nconst Message: React.FC<MessageType> = (props) => {\r\n    let user = props.user === 1 ? s.user1 : s.user2;\r\n\r\n    return (\r\n        <li className={s.message + ' ' + user}>{props.message}</li>\r\n    )\r\n};\r\n\r\nexport {Message};\r\n","import React, {useRef} from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {DialogsType} from \"./DialogsContainer\";\r\n\r\nconst Dialogs: React.FC<DialogsType> = (props) => {\r\n    const dialogsPage = props.dialogsPage;\r\n\r\n    const dialogsElements = dialogsPage.dialogs.map(d => <DialogItem key={d.id} id={d.id} name={d.name}/>);\r\n    const messagesElements = dialogsPage.messages.map(m => <Message key={m.id} id={m.id} user={m.user}\r\n                                                                    message={m.message}/>);\r\n    let newMessageElement = useRef<HTMLTextAreaElement>(null);\r\n\r\n    let addMessage = () => {\r\n        props.sendMessage();\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        if (newMessageElement.current) {\r\n            let text = newMessageElement.current?.value;\r\n            props.updateNewMessageText(text)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className={s.dialogs}>\r\n                <ul className={s.dialogsItems + ' ' + s.listReset}>\r\n                    {dialogsElements}\r\n                </ul>\r\n\r\n                <ul className={s.messages + ' ' + s.listReset}>\r\n                    {messagesElements}\r\n                </ul>\r\n            </div>\r\n\r\n            <div className={s.messenger}>\r\n                <div className={s.textareaWrapper}>\r\n                    <textarea\r\n                        placeholder={'...Enter your message'}\r\n                        ref={newMessageElement}\r\n                        value={dialogsPage.newMessageText}\r\n                        onChange={onPostChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.submitWrapper}>\r\n                    <button onClick={addMessage}>Send</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\n\r\nlet mapStateToPropsForRedirect = (state: StateType) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\ntype mapStateToPropsForRedirectType = ReturnType<typeof mapStateToPropsForRedirect>;\r\n\r\nexport function withAuthRedirect<T>(Component: React.ComponentType<T>) {\r\n\r\n    function RedirectComponent(props: mapStateToPropsForRedirectType) {\r\n        const {isAuth, ...restProps} = props\r\n\r\n        if (!isAuth) return <Redirect to={\"/login\"}/>\r\n\r\n        return <Component {...restProps as T} />\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}","import {addMessageActionCreator, DialogsPageType, updateNewMessageTextCreator} from \"../../redux/dialogs-reducer\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {withAuthRedirect} from \"../hoc/WithAuthRedirect\";\r\nimport React from \"react\";\r\n\r\ntype MapStateToPropsType = {\r\n    dialogsPage: DialogsPageType\r\n    isAuth: boolean\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    updateNewMessageText: (text: string) => void\r\n    sendMessage: () => void\r\n}\r\n\r\nexport type DialogsType = MapStateToPropsType & mapDispatchToPropsType;\r\n\r\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n    return {\r\n        updateNewMessageText : (text: string) => {\r\n            dispatch(updateNewMessageTextCreator(text));\r\n        },\r\n        sendMessage : () => {\r\n            dispatch(addMessageActionCreator())\r\n        },\r\n    };\r\n};\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect)(Dialogs)\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/avatar.2479805a.png\";","type localeInfoType = {\r\n    // Options.jsx\r\n    items_per_page: string\r\n    jump_to: string\r\n    jump_to_confirm: string\r\n    page: string\r\n\r\n    // Pagination.jsx\r\n    prev_page: string\r\n    next_page: string\r\n    prev_5: string\r\n    next_5: string\r\n    prev_3: string\r\n    next_3: string\r\n}\r\n\r\n\r\nconst localeInfo: localeInfoType = {\r\n    // Options.jsx\r\n    items_per_page: '/ page',\r\n    jump_to: 'Go to',\r\n    jump_to_confirm: 'confirm',\r\n    page: '',\r\n\r\n    // Pagination.jsx\r\n    prev_page: 'Previous Page',\r\n    next_page: 'Next Page',\r\n    prev_5: 'Previous 5 Pages',\r\n    next_5: 'Next 5 Pages',\r\n    prev_3: 'Previous 3 Pages',\r\n    next_3: 'Next 3 Pages',\r\n};\r\n\r\n\r\nexport default localeInfo;","import React from 'react';\r\nimport s from './Users.module.css'\r\nimport avatarDefaultPhoto from \"../../assets/images/avatar.png\";\r\nimport Pagination from 'rc-pagination';\r\nimport localeInfo from '../../locale/en_US'; // need to create in src folder\r\nimport { NavLink } from 'react-router-dom';\r\nimport {UserType} from \"../../redux/users-reducer\";\r\n\r\ntype PropsType = {\r\n    follow: (userID: string) => void\r\n    unfollow: (userID: string) => void\r\n    users: UserType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    followingInProgress: string[]\r\n}\r\n\r\nconst Users = (props: PropsType) => {\r\n    // let pageCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    // let pages = [];\r\n    // for (let i = 1; i <= pageCount; i++) {\r\n    //     pages.push(i);\r\n    // }\r\n\r\n    return (\r\n        <div className={s.users}>\r\n            <div className=\"pagination\">\r\n\r\n                {/*{pages.map((p, index) =>*/}\r\n                {/*    <span*/}\r\n                {/*        key={index}*/}\r\n                {/*        className={(props.currentPage === p) ? `${s.current} ${s.page}` : s.page}*/}\r\n                {/*        onClick={() => {props.onPageChanged(p)}}*/}\r\n                {/*    >*/}\r\n                {/*            {p}*/}\r\n                {/*        </span>)}*/}\r\n\r\n                {/* plugin rc-pagination */}\r\n                <Pagination\r\n                    showTitle={true}\r\n                    current={props.currentPage}\r\n                    className=\"ant-pagination\"\r\n                    onChange={(e) => {\r\n                        props.onPageChanged(e)\r\n                    }}\r\n                    defaultCurrent={props.currentPage}\r\n                    defaultPageSize={props.pageSize}\r\n                    total={props.totalUsersCount}\r\n                    locale={localeInfo}\r\n                />\r\n\r\n            </div>\r\n            {\r\n                props.users.map(u => {\r\n                    return (\r\n                        <div className={s.user} key={u.id}>\r\n                            <div className={s.leftContent}>\r\n                                <div className={s.avatarBG}>\r\n                                    <NavLink to={`./profile/${u.id}`}>\r\n                                        <img className={s.avatar}\r\n                                             src={u.photos.small !== null ? u.photos.small : avatarDefaultPhoto}\r\n                                             alt=\"avatar\"/>\r\n                                    </NavLink>\r\n                                </div>\r\n                                <div className={s.buttons}>\r\n                                    {\r\n                                        u.followed\r\n                                            ?\r\n                                            <button className={u.followed ? s.unfollow : s.follow}\r\n                                                    disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                                    onClick={() => {props.unfollow(u.id)}}\r\n                                            >Unfollow</button>\r\n                                            :\r\n                                            <button className={u.followed ? s.unfollow : s.follow}\r\n                                                    disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                                    onClick={() => {props.follow(u.id)}}\r\n                                            >Follow</button>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className={s.rightContent}>\r\n                                <div className={s.innerLeft}>\r\n                                    <div className={s.name}>{u.name}</div>\r\n                                    <div className={s.status}>{u.status}</div>\r\n                                </div>\r\n                                <div className={s.innerRight}>\r\n                                    <div className={s.country}>{'u.location.country'}</div>\r\n                                    <div className={s.city}>{'u.location.city'}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Users;","export default __webpack_public_path__ + \"static/media/spinner.6f870003.svg\";","import React from 'react';\r\nimport preloader from \"../../../assets/images/spinner.svg\";\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className=\"preloader\">\r\n            <img src={preloader} alt=\"preloader\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","import {connect} from \"react-redux\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\nimport {\r\n    setCurrentPage, UserType, follow, unfollow,\r\n    toggleFollowingInProgress, getUsers\r\n} from \"../../redux/users-reducer\";\r\n\r\nimport React from \"react\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../hoc/WithAuthRedirect\";\r\n\r\ntype UsersContainerPropsType = MapStateToPropsType & MapDispatchToProps\r\n\r\n\r\nclass UsersContainer extends React.Component<UsersContainerPropsType> {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged(pageNumber: number) {\r\n        this.props.setCurrentPage(pageNumber)\r\n\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> :\r\n                <Users\r\n                    users={this.props.users}\r\n                    follow={this.props.follow}\r\n                    unfollow={this.props.unfollow}\r\n                    pageSize={this.props.pageSize}\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged.bind(this)}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                    // toggleFollowingInProgress={this.props.toggleFollowingInProgress}\r\n\r\n                />}\r\n        </>\r\n    }\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n    users: UserType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: string[]\r\n}\r\n\r\ntype MapDispatchToProps = {\r\n    follow: (userID: string) => void\r\n    unfollow: (userID: string) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    toggleFollowingInProgress: (isFetching: boolean, userId: string) => void\r\n}\r\n\r\nconst mapStateToProps = (state: StateType) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n//     return {\r\n//         follow: (userID: string) => {\r\n//             dispatch(followAC(userID))\r\n//         },\r\n//\r\n//         unfollow: (userID: string) => {\r\n//             dispatch(unfollowAC(userID))\r\n//         },\r\n//\r\n//         setUsers: (users: UserType[]) => {\r\n//             dispatch(setUsersAC(users))\r\n//         },\r\n//\r\n//         setCurrentPage: (pageNumber: number) => {\r\n//             dispatch(setCurrentPageAC(pageNumber))\r\n//         },\r\n//\r\n//         setTotalUsersCount: (totalCount: number) => {\r\n//             dispatch(setTotalUsersCountAC(totalCount))\r\n//         },\r\n//\r\n//         toggleIsFetching: (isFetching: boolean) => {\r\n//             dispatch(setToggleFetchingAC(isFetching))\r\n//         },\r\n//     }\r\n// }\r\n\r\n\r\n//  connect<MapStateToPropsType, MapDispatchToProps, {}, StateType>(\r\n//     mapStateToProps, {follow, unfollow, setCurrentPage, getUsers, toggleFollowingInProgress}\r\n// )(UsersContainer);\r\n\r\nexport default compose<React.ComponentType>(\r\n    withAuthRedirect,\r\n    connect<MapStateToPropsType, MapDispatchToProps, {}, StateType>(\r\n        mapStateToProps, {follow, unfollow, setCurrentPage, getUsers, toggleFollowingInProgress})\r\n)(UsersContainer);","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nexport type PostType = {\r\n    id: string\r\n    message: string | undefined\r\n    likeCount: number\r\n}\r\n\r\nconst Post: React.FC<PostType> = (props) => {\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://cva.ukzn.ac.za/wp-content/uploads/2019/07/profile-placeholder.png' alt={'avatar'}/>\r\n            <p>{props.message}</p>\r\n            <div>\r\n                <span className={s.like}>&#x2665;</span> {props.likeCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;\r\n","import React, {useRef} from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post, {PostType} from './Post/Post';\r\n\r\ntype MyPostsPropsType = {\r\n    updateNewPostText: (text: string) => void\r\n    addPost: () => void\r\n    posts: PostType[]\r\n    newPostText: string | undefined\r\n}\r\n\r\nconst MyPosts: React.FC<MyPostsPropsType> = (props) => {\r\n    const postsElements = props.posts.map(p => <Post key={p.id} id={p.id} message={p.message}\r\n                                                     likeCount={p.likeCount}/>);\r\n    const newPostElement: React.RefObject<HTMLTextAreaElement> = useRef<HTMLTextAreaElement>(null);\r\n\r\n    let onAddPost = () => {\r\n        props.addPost();\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        if (newPostElement.current) {\r\n            let text = newPostElement.current?.value;\r\n            props.updateNewPostText(text)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.wrapperMessenger}>\r\n                <h3>My posts</h3>\r\n\r\n            <div className={s.wrapperContent}>\r\n                <div className={s.wrapperTextarea}>\r\n                    <textarea\r\n                        ref={newPostElement}\r\n                        onChange={onPostChange}\r\n                        value={props.newPostText}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.wrapperButton}>\r\n                    <button onClick={onAddPost}>Add post</button>\r\n                </div>\r\n            </div>\r\n            </div>\r\n\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MyPosts;\r\n","import {addPostActionCreator, updateNewPostTextCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {StateType} from \"../../../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport {PostType} from \"./Post/Post\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype MapStateToPropsType = {\r\n    posts: PostType[]\r\n    newPostText: string | undefined\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    updateNewPostText: (text: string) => void\r\n    addPost: () => void\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n    return {\r\n        updateNewPostText : (text: string) => {\r\n            dispatch(updateNewPostTextCreator(text));\r\n        },\r\n        addPost : () => {\r\n            dispatch(addPostActionCreator());\r\n        },\r\n    };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n\r\n","import React from 'react';\r\nimport {AiOutlineFacebook} from \"@react-icons/all-files/ai/AiOutlineFacebook\";\r\nimport {FaVk} from \"@react-icons/all-files/fa/FaVk\";\r\nimport {FaTwitter} from \"@react-icons/all-files/fa/FaTwitter\";\r\nimport {FaInstagram} from \"@react-icons/all-files/fa/FaInstagram\";\r\nimport {FaYoutubeSquare} from \"@react-icons/all-files/fa/FaYoutubeSquare\";\r\nimport {FaGithub} from \"@react-icons/all-files/fa/FaGithub\";\r\nimport s from './Social.module.css'\r\n\r\ntype PropsType = {\r\n    facebook: string\r\n    vk: string\r\n    twitter: string\r\n    instagram: string\r\n    youtube: string\r\n    github: string\r\n}\r\n\r\nconst Social = (props: PropsType) => {\r\n\r\n    return (\r\n        <ul className={s.social}>\r\n            {props.facebook ? <li><AiOutlineFacebook/>{props.facebook}</li> : null}\r\n            {props.vk ? <li><FaVk/>{props.vk}</li> : null}\r\n            {props.twitter ? <li><FaTwitter/>{props.twitter}</li> : null}\r\n            {props.instagram ? <li><FaInstagram/>{props.instagram}</li> : null}\r\n            {props.youtube ? <li><FaYoutubeSquare/>{props.youtube}</li> : null}\r\n            {props.github ? <li><FaGithub/>{props.github}</li> : null}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Social;\r\n","export default __webpack_public_path__ + \"static/media/profile-image.ed4049d6.jpg\";","import React, {ChangeEvent, Component} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\ntype PropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nclass ProfileStatus extends Component<PropsType> {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status,\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true,\r\n        })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false,\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({\r\n            status: e.currentTarget.value,\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<PropsType>, prevState: Readonly<{}>) {\r\n        if(prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status,\r\n            })\r\n        }\r\n        console.log('componentDidUpdate')\r\n    }\r\n\r\n    render() {\r\n        console.log('render')\r\n        return (\r\n            <div className={s.status}>\r\n                {!this.state.editMode &&\r\n                <div onDoubleClick={this.activateEditMode}>\r\n                    <b>status: </b><span>{this.props.status || ' -empty-'}</span>\r\n                </div>\r\n                }\r\n\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input\r\n                        onChange={this.onStatusChange}\r\n                        onBlur={this.deactivateEditMode}\r\n                        autoFocus\r\n                        value={this.state.status}\r\n                    />\r\n                </div>\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport PhotoDefault from \"../../../assets/images/avatar.png\";\r\nimport {MdWork} from \"@react-icons/all-files/md/MdWork\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport Social from \"./Social/Social\";\r\nimport bgImage from \"../../../assets/images/profile-image.jpg\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport {MapPropsType} from \"../ProfileContainer\";\r\n\r\ntype PropsType = MapPropsType & {\r\n    updateStatus: (status: string) => void\r\n};\r\n\r\nconst ProfileInfo = (props: PropsType) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    let isEmptySocial = (!props.profile.contacts.facebook\r\n        && !props.profile.contacts.vk\r\n        && !props.profile.contacts.mainLink\r\n        && !props.profile.contacts.github\r\n        && !props.profile.contacts.twitter\r\n        && !props.profile.contacts.instagram\r\n        && !props.profile.contacts.website)\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.preview}>\r\n                <img src={bgImage} alt={'background'}/>\r\n            </div>\r\n\r\n            <div className={s.wrapper}>\r\n                <div className={s.person}>\r\n                    <img className={s.photo} src={props.profile.photos.large || PhotoDefault} width=\"300\" alt=\"ava\"/>\r\n                    <div className={s.description}>\r\n                        {<h3>About me:</h3>}\r\n                        <b className={s.name}>{props.profile.fullName}</b>\r\n                        <p>{!props.profile.aboutMe ? '- No description -' : props.profile.aboutMe}</p>\r\n                        {isEmptySocial ? null : <h3>Contacts:</h3>}\r\n\r\n                        <Social\r\n                            facebook={props.profile.contacts.facebook}\r\n                            vk={props.profile.contacts.vk}\r\n                            twitter={props.profile.contacts.twitter}\r\n                            instagram={props.profile.contacts.instagram}\r\n                            youtube={props.profile.contacts.youtube}\r\n                            github={props.profile.contacts.github}\r\n                        />\r\n\r\n                        {props.profile.contacts.mainLink ? <p><b>mainLink - </b> {props.profile.contacts.mainLink}</p> : null}\r\n                        {props.profile.contacts.website ? <p><b>website - </b> {props.profile.contacts.website}</p> : null}\r\n                        {props.profile.lookingForAJob ? <p className={s.work}><MdWork/>{props.profile.lookingForAJobDescription}</p> : null}\r\n                    </div>\r\n                </div>\r\n\r\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileStateType} from \"./ProfileContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props: ProfileStateType) => {\r\n    return (\r\n        <div className={s.profile}>\r\n\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nexport type ProfileStateType = MapPropsType & mapDispatchToPropsType\r\n\r\n\r\ntype PathParamsType = {\r\n    userId: string,\r\n}\r\n\r\ntype PropsType = RouteComponentProps<PathParamsType> & ProfileStateType\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n    componentDidMount() {\r\n\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = '18407';\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile\r\n                {...this.props}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    getUserProfile: (userID: string) => void\r\n    getStatus: (userID: string) => void\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nlet mapStateToProps = (state: StateType) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n});\r\n\r\nexport type MapPropsType = ReturnType<typeof mapStateToProps>\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n","export default __webpack_public_path__ + \"static/media/logo.d941bb34.svg\";","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Header.module.css';\r\nimport {HeaderContainerPropsType} from \"./HeaderContainer\";\r\nimport logo from \"../../assets/images/logo.svg\";\r\n\r\n\r\nconst Header = (props: HeaderContainerPropsType) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src={logo} alt={'logo'}/>\r\n            <div className={s.loginBlock}>\r\n                {\r\n                    props.isAuth ?\r\n                        props.login\r\n                        : <NavLink to={'/login'}>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUserData} from \"../../redux/auth-reducer\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\n\r\nexport type HeaderContainerPropsType = mapStateType & mapDispatchType\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerPropsType> {\r\n    componentDidMount() {\r\n        this.props.getAuthUserData();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\ntype mapStateType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\n\r\ntype mapDispatchType = {\r\n    getAuthUserData: () => void\r\n}\r\n\r\nconst mapStateToProps = (state: StateType): mapStateType => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {getAuthUserData})(HeaderContainer);\r\n","import React from 'react';\r\nimport s from './Login.module.css';\r\n\r\nconst Login = () => {\r\n    return (\r\n        <div className={s.login}>\r\n            <h1>Login</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {Redirect, Route} from \"react-router-dom\";\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Setting/Settings\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\n\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <div className='app-wrapper'>\r\n            <HeaderContainer/>\r\n            <Navbar />\r\n\r\n            <div className=\"app-wrapper-content\">\r\n                <Route path={'/'} exact render={() => <Redirect to={'/profile'}/>}/>\r\n                <Route path={'/dialogs'} component={DialogsContainer} render={() => <DialogsContainer />}\r\n                />\r\n                <Route path={'/profile/:userId?'} component={ProfileContainer} render={() => <ProfileContainer/>}/>\r\n                <Route path={'/news'} component={News} render={() => <News/>}/>\r\n                <Route path={'/music'} component={Music} render={() => <Music/>}/>\r\n                <Route path={'/settings'} component={Settings} render={() => <Settings/>}/>\r\n                <Route path={'/users'} component={UsersContainer} render={() => <UsersContainer/>}/>\r\n                <Route path={'/login'} component={Login} render={() => <Login/>}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './redux/redux-store';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App/>\r\n            </HashRouter>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}