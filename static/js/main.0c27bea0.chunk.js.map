{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Friends/Friends.module.css","components/Friends/FriendsItem/FriendsItem.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css","components/News/News.module.css","components/Users/Users.module.css","components/Music/Music.module.css","components/Setting/Settings.module.css","components/SiteBar/SiteBar.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/Social/Social.module.css","components/Navbar/Navbar.module.css","reportWebVitals.ts","api/api.ts","redux/profile-reducer.ts","redux/dialogs-reducer.ts","redux/sidebar-reducer.ts","redux/users-reducer.ts","redux/auth-reducer.ts","redux/redux-store.ts","components/News/News.tsx","components/Music/Music.tsx","components/Setting/Settings.tsx","components/Friends/FriendsItem/FriendsItem.tsx","components/Friends/Friends.tsx","components/SiteBar/SiteBarContainer.tsx","components/SiteBar/SiteBar.tsx","components/Navbar/Navbar.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","assets/images/avatar.png","locale/en_US.tsx","components/Users/Users.tsx","assets/images/spinner.svg","components/common/Preloader/Preloader.tsx","components/Users/UsersContainer.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/ProfileInfo/Social/Social.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","App.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","baseURL","instance","axios","create","withCredentials","headers","usersAPI","currentPage","pageSize","get","response","data","userId","post","delete","authAPI","profileAPI","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","initialState","posts","id","v1","message","likeCount","newPostText","profile","profileReducer","state","action","type","newPost","ADD_MESSAGE","UPDATE_NEW_MESSAGE","dialogs","name","messages","user","newMessageText","dialogsReducer","friends","sidebarReducer","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","toggleIsFetching","toggleFollowingInProgress","usersReducer","map","u","userID","followed","filter","SET_USER_DATA","email","login","isAuth","authReducer","reducers","combineReducers","profilePage","dialogsPage","siteBar","usersPage","auth","store","createStore","applyMiddleware","thunkMiddleware","window","News","className","s","news","Music","music","Settings","settings","FriendsItem","props","item","circle","Friends","friendsElements","title","friendsList","SiteBarContainer","connect","Navbar","wrapper","nav","to","activeClassName","activeLink","active","DialogItem","path","dialogItem","link","width","height","src","alt","Message","user1","user2","Dialogs","dialogsElements","d","messagesElements","m","newMessageElement","useRef","dialogsItems","listReset","messenger","textareaWrapper","placeholder","ref","value","onChange","current","text","updateNewMessageText","submitWrapper","onClick","sendMessage","DialogsContainer","dispatch","updateNewMessageTextCreator","localeInfo","items_per_page","jump_to","jump_to_confirm","page","prev_page","next_page","prev_5","next_5","prev_3","next_3","Users","showTitle","e","onPageChanged","defaultCurrent","defaultPageSize","total","locale","leftContent","avatarBG","avatar","photos","small","avatarDefaultPhoto","buttons","unfollow","follow","disabled","some","rightContent","innerLeft","status","innerRight","country","city","Preloader","preloader","UsersContainer","this","getUsers","pageNumber","setCurrentPage","bind","React","Component","resultCode","totalCount","items","Post","MyPosts","postsElements","p","newPostElement","updateNewPostText","addPost","MyPostsContainer","updateNewPostTextCreator","Social","social","facebook","AiOutlineFacebook","vk","FaVk","twitter","FaTwitter","instagram","FaInstagram","youtube","FaYoutubeSquare","github","FaGithub","ProfileInfo","isEmptySocial","contacts","mainLink","website","preview","photo","large","PhotoDefault","description","fullName","aboutMe","lookingForAJob","work","MdWork","lookingForAJobDescription","Profile","ProfileContainer","match","params","getUserProfile","WithUrlDataContainerComponent","withRouter","Header","header","loginBlock","HeaderContainer","getAuthUserData","setAuthUserData","App","component","render","ReactDOM","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.0c27bea0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__9d_03\",\"listReset\":\"Dialogs_listReset__2DZjo\",\"dialogsItems\":\"Dialogs_dialogsItems__3xfpV\",\"active\":\"Dialogs_active__R-dH6\",\"messages\":\"Dialogs_messages__32clz\",\"messenger\":\"Dialogs_messenger__3HgeR\",\"textareaWrapper\":\"Dialogs_textareaWrapper__18KeY\",\"submitWrapper\":\"Dialogs_submitWrapper__3N8VE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ProfileInfo_wrapper__2TN9j\",\"preview\":\"ProfileInfo_preview__2NOY3\",\"description\":\"ProfileInfo_description__MfRma\",\"work\":\"ProfileInfo_work__KuhDm\",\"photo\":\"ProfileInfo_photo__16Miy\",\"name\":\"ProfileInfo_name__3ORPZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"DialogItem_dialogItem__3VzTr\",\"link\":\"DialogItem_link__2xWDI\",\"active\":\"DialogItem_active__bUNsx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1TnnS\",\"user1\":\"Message_user1__S8wZx\",\"user2\":\"Message_user2__2h3_T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Friends_title__18mMj\",\"friendsList\":\"Friends_friendsList__200-J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendsItem_item__2fAi-\",\"circle\":\"FriendsItem_circle__1Hy3A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MyPosts_wrapper__3pZ18\",\"posts\":\"MyPosts_posts__3GeRT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1tXis\",\"loginBlock\":\"Header_loginBlock__Xhj6l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__3q4B5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__ygJzY\",\"leftContent\":\"Users_leftContent__3imbX\",\"buttons\":\"Users_buttons__1TWgR\",\"unfollow\":\"Users_unfollow__3FA7I\",\"follow\":\"Users_follow__2fcw9\",\"avatarBG\":\"Users_avatarBG__1o7T-\",\"avatar\":\"Users_avatar__1n4J8\",\"user\":\"Users_user__3zAP9\",\"rightContent\":\"Users_rightContent__1TefX\",\"innerLeft\":\"Users_innerLeft__38_DD\",\"innerRight\":\"Users_innerRight__1zpr6\",\"name\":\"Users_name__29eea\",\"status\":\"Users_status__3wQOm\",\"city\":\"Users_city__2e9I0\",\"country\":\"Users_country__35-4c\",\"page\":\"Users_page__Pgi1K\",\"current\":\"Users_current__2iicU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__14jij\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__1Twb_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"siteBar\":\"SiteBar_siteBar__UVcXu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1U4Qr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2ZpOe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"social\":\"Social_social__A0wT0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Navbar_wrapper__3oknN\",\"nav\":\"Navbar_nav__3j_MG\",\"item\":\"Navbar_item__1OyJD\",\"activeLink\":\"Navbar_activeLink__2Ubgr\"};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import axios from \"axios\";\r\n\r\nconst baseURL = 'https://social-network.samuraijs.com/api/1.0/';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL,\r\n    headers: {\r\n        \"API-KEY\": \"e12dcb15-1200-4ce1-bb28-bb99ac0ccb98\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number = 1, pageSize: number = 5) {\r\n        return instance.get(baseURL + `users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n\r\n    follow(userId: string) {\r\n        return instance.post(baseURL + `follow/${userId}`)\r\n            .then(response => response.data);\r\n    },\r\n\r\n    unfollow(userId: string) {\r\n        return instance.delete(baseURL + `follow/${userId}`)\r\n            .then(response => response.data);\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    get() {\r\n        return instance.get(baseURL + `auth/me`).then(response => response.data);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    get(userId: string) {\r\n        return instance.get(baseURL + `profile/${userId}`).then(response => response.data);\r\n    }\r\n}\r\n\r\n","import {v1} from \"uuid\";\r\nimport {profileAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\r\nconst SET_USER_PROFILE = \"SET-USER-PROFILE\";\r\n\r\nexport type ActionsProfileType = AddPostType | UpdatePostType | SetUsersType\r\n\r\ntype AddPostType = {\r\n    type: typeof ADD_POST\r\n}\r\n\r\ntype UpdatePostType = {\r\n    type: typeof UPDATE_NEW_POST_TEXT\r\n    newPostText: string\r\n}\r\n\r\ntype SetUsersType = {\r\n    type: typeof SET_USER_PROFILE\r\n    profile: ProfileType\r\n}\r\n\r\ntype ContactsType = {\r\n    github: string\r\n    vk: string\r\n    facebook: string\r\n    instagram: string\r\n    twitter: string\r\n    website: string\r\n    youtube: string\r\n    mainLink: string\r\n}\r\n\r\ntype PhotosType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\n\r\nexport type ProfileType = {\r\n    \"aboutMe\": string\r\n    \"contacts\": ContactsType\r\n    \"lookingForAJob\": boolean\r\n    \"lookingForAJobDescription\": string\r\n    \"fullName\": string\r\n    \"userId\": number\r\n    \"photos\": PhotosType\r\n}\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: v1(), message: 'Hi, how are you?', likeCount: 3},\r\n        {id: v1(), message: 'How is your it-camasutra?', likeCount: 13},\r\n    ],\r\n    newPostText: '',\r\n    profile: null as ProfileType | null\r\n};\r\n\r\nexport type ProfilePageType = typeof initialState\r\n\r\nconst profileReducer = (state: ProfilePageType = initialState, action: ActionsProfileType): ProfilePageType => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: v1(),\r\n                message: state.newPostText,\r\n                likeCount: 0\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                posts: [newPost, ...state.posts],\r\n                newPostText: ''\r\n            };\r\n        }\r\n\r\n        case UPDATE_NEW_POST_TEXT: {\r\n\r\n            return {\r\n                ...state,\r\n                newPostText: action.newPostText\r\n            };\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (): AddPostType => ({type: ADD_POST});\r\nexport const setUserProfile = (profile: ProfileType): SetUsersType => ({type: SET_USER_PROFILE, profile});\r\nexport const getUserProfile = (userID: string) => (dispatch: Dispatch<ActionsProfileType>) => {\r\n    profileAPI.get(userID).then(data => dispatch(setUserProfile(data)))\r\n}\r\nexport const updateNewPostTextCreator = (text: string): UpdatePostType => ({\r\n    type: UPDATE_NEW_POST_TEXT,\r\n    newPostText: text\r\n});\r\n\r\nexport default profileReducer;","import {v1} from \"uuid\";\r\n\r\nconst ADD_MESSAGE = \"ADD-MESSAGE\";\r\nconst UPDATE_NEW_MESSAGE = \"UPDATE-NEW-MESSAGE\";\r\n\r\nexport type ActionsDialogsType = ActionAddMessageType | ActionUpdateNewMessageType\r\n\r\ntype ActionAddMessageType = {\r\n    type: typeof ADD_MESSAGE\r\n}\r\n\r\ntype ActionUpdateNewMessageType = {\r\n    type: typeof UPDATE_NEW_MESSAGE\r\n    newMessageText: string\r\n}\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: v1(), name: 'Dimych'},\r\n        {id: v1(), name: 'Andrey'},\r\n        {id: v1(), name: 'Sveta'},\r\n        {id: v1(), name: 'Sasha'},\r\n        {id: v1(), name: 'Viktor'},\r\n        {id: v1(), name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: v1(), message: 'Hi!', user: 1},\r\n        {id: v1(), message: 'Hi!', user: 2},\r\n        {id: v1(), message: 'How is your it-camasutra?', user: 2},\r\n        {id: v1(), message: 'Perfectly', user: 1},\r\n        {id: v1(), message: 'It\\'s amazing', user: 2},\r\n        {id: v1(), message: 'Thanks', user: 1}\r\n    ],\r\n    newMessageText: ''\r\n};\r\n\r\nexport type DialogsPageType = typeof initialState\r\n\r\nconst dialogsReducer = (state : DialogsPageType = initialState, action: ActionsDialogsType): DialogsPageType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {\r\n                    id: v1(),\r\n                    message: state.newMessageText,\r\n                    user: 2\r\n                }],\r\n                newMessageText: ''\r\n            };\r\n\r\n        case UPDATE_NEW_MESSAGE:\r\n\r\n            return {...state, newMessageText: action.newMessageText};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addMessageActionCreator = (): ActionAddMessageType => ({type: ADD_MESSAGE});\r\nexport const updateNewMessageTextCreator = (text: string): ActionUpdateNewMessageType => ({\r\n    type: UPDATE_NEW_MESSAGE,\r\n    newMessageText: text\r\n});\r\n\r\nexport default dialogsReducer;","import {v1} from \"uuid\";\r\n\r\n\r\nlet initialState = {\r\n    friends: [\r\n        {id: v1(), name: 'Andrew'},\r\n        {id: v1(), name: 'Sasha'},\r\n        {id: v1(), name: 'Sveta'},\r\n    ]\r\n};\r\n\r\nexport type SiteBarType = typeof initialState\r\n\r\n\r\nconst sidebarReducer = (state: SiteBarType = initialState, action: {}): SiteBarType => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer","import {usersAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst FOLLOW = \"users/FOLLOW\";\r\nconst UNFOLLOW = \"users/UNFOLLOW\";\r\nconst SET_USERS = \"users/SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"users/SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"users/SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"users/TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"users/TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\n\r\ntype ActionFollowType = {\r\n    type: typeof FOLLOW\r\n    userID: string\r\n}\r\n\r\n\r\ntype ActionUnfollowType = {\r\n    type: typeof UNFOLLOW\r\n    userID: string\r\n}\r\n\r\ntype ActionSetUsersType = {\r\n    type: typeof SET_USERS\r\n    users: UserType[]\r\n}\r\n\r\ntype ActionSetCurrentPageType = {\r\n    type: typeof SET_CURRENT_PAGE\r\n    currentPage: number\r\n}\r\n\r\ntype ActionSetTotalUsersCountType = {\r\n    type: typeof SET_TOTAL_USERS_COUNT\r\n    totalUsersCount: number\r\n}\r\n\r\ntype ActionToggleIsFetchingType = {\r\n    type: typeof TOGGLE_IS_FETCHING\r\n    isFetching: boolean\r\n}\r\n\r\ntype ActionToggleIsFollowingProgressType = {\r\n    type: typeof TOGGLE_IS_FOLLOWING_PROGRESS\r\n    isFetching: boolean\r\n    userId: string\r\n}\r\n\r\ntype ActionsUsersType =\r\n    ActionFollowType\r\n    | ActionUnfollowType\r\n    | ActionSetUsersType\r\n    | ActionSetCurrentPageType\r\n    | ActionSetTotalUsersCountType\r\n    | ActionToggleIsFetchingType\r\n    | ActionToggleIsFollowingProgressType;\r\n\r\ntype LocationType = {\r\n    city: string\r\n    country: string\r\n}\r\n\r\nexport type UserType = {\r\n    id: string\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n    name: string\r\n    status: string\r\n    followed: boolean\r\n    location: LocationType\r\n}\r\n\r\nlet initialState = {\r\n    users: [] as UserType[],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as string[]\r\n}\r\n\r\nexport type UsersPageType = typeof initialState\r\n\r\nconst usersReducer = (state: UsersPageType = initialState, action: ActionsUsersType): UsersPageType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users\r\n                    .map(u => (u.id === action.userID)\r\n                        ? {...u, followed: true} : u)\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users\r\n                    .map(u => (u.id === action.userID)\r\n                        ? {...u, followed: false} : u)\r\n            }\r\n\r\n        case SET_USERS:\r\n            return {\r\n                ...state, users: action.users\r\n            }\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state, totalUsersCount: action.totalUsersCount\r\n            }\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state, followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userID: string): ActionFollowType => ({type: FOLLOW, userID});\r\nexport const unfollowSuccess = (userID: string): ActionUnfollowType => ({type: UNFOLLOW, userID});\r\nexport const setUsers = (users: UserType[]): ActionSetUsersType => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage: number): ActionSetCurrentPageType => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalCount: number): ActionSetTotalUsersCountType => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount: totalCount});\r\nexport const toggleIsFetching = (isFetching: boolean): ActionToggleIsFetchingType => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingInProgress = (isFetching: boolean, userId: string): ActionToggleIsFollowingProgressType => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\n\r\n// ThunkCreators\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number) => {\r\n\r\n    return (dispatch: Dispatch<ActionsUsersType>) => {\r\n        dispatch(toggleIsFetching(true));\r\n\r\n        usersAPI.getUsers(currentPage, pageSize)\r\n            .then((data) => {\r\n                dispatch(toggleIsFetching(false));\r\n                dispatch(setUsers(data.items));\r\n                dispatch(setTotalUsersCount(data.totalCount));\r\n            });\r\n    }\r\n}\r\n\r\nexport const follow = (userId: string) => {\r\n    return (dispatch: Dispatch<ActionsUsersType>) => {\r\n        dispatch(toggleFollowingInProgress(true, userId));\r\n        usersAPI.follow(userId)\r\n            .then((data) => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(followSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingInProgress(false, userId));\r\n            });\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId: string) => {\r\n    return (dispatch: Dispatch<ActionsUsersType>) => {\r\n        dispatch(toggleFollowingInProgress(true, userId));\r\n        usersAPI.unfollow(userId).then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(unfollowSuccess(userId));\r\n            }\r\n            dispatch(toggleFollowingInProgress(false, userId));\r\n        });\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import {authAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst SET_USER_DATA = \"users/SET-USER-DATA\";\r\n\r\ntype ActionSetUserDataType = {\r\n    type: typeof SET_USER_DATA\r\n    data: {\r\n        id: string | null\r\n        email: string | null\r\n        login: string | null\r\n    }\r\n\r\n}\r\n\r\nexport type AuthStateType = {\r\n    id: string | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\n\r\n\r\nlet initialState: AuthStateType = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n    // isFetching: false\r\n};\r\n\r\n\r\nconst authReducer = (state: AuthStateType = initialState, action: ActionSetUserDataType): AuthStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {...state, ...action.data, isAuth: true}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (id: string, email: string, login: string) => ({\r\n    type: SET_USER_DATA,\r\n    data: {\r\n        id, email, login\r\n    }\r\n} as const);\r\n\r\n\r\nexport const getAuthUserData = () => (dispatch: Dispatch<ActionSetUserDataType>) => {\r\n    authAPI.get().then(response => {\r\n        if (response.resultCode === 0) {\r\n            let {id, login, email} = response.data;\r\n            dispatch(setAuthUserData(id, email, login));\r\n        }\r\n    });\r\n};\r\n\r\n\r\nexport default authReducer;","import {combineReducers, createStore, applyMiddleware} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    siteBar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer\r\n});\r\n\r\nexport type StateType = ReturnType<typeof reducers>\r\n\r\n\r\n\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\n// @ts-ignore\r\nwindow.store = store\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div className={s.news}>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;\r\n","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div className={s.music}>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;\r\n","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div className={s.settings}>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\nimport s from './FriendsItem.module.css';\r\n\r\nexport type FriendType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nconst FriendsItem: React.FC<FriendType> = (props) => {\r\n\r\n\r\n    return (\r\n        <li className={s.item}>\r\n            <div className={s.circle}></div>\r\n            {props.name}\r\n        </li>\r\n    )\r\n};\r\n\r\nexport {FriendsItem};","import React from 'react';\r\nimport s from './Friends.module.css';\r\nimport {FriendsItem} from \"./FriendsItem/FriendsItem\";\r\nimport {SiteBarType} from \"../../redux/sidebar-reducer\";\r\n\r\nconst Friends: React.FC<SiteBarType> = (props) => {\r\n    const friendsElements = props.friends.map(item => <FriendsItem key={item.id} id={item.id} name={item.name}/>)\r\n\r\n    return (\r\n        <>\r\n            <h2 className={s.title}>Friends</h2>\r\n\r\n            <ul className={s.friendsList}>\r\n                {friendsElements}\r\n            </ul>\r\n        </>\r\n    )\r\n};\r\n\r\nexport {Friends};","import {SiteBar} from \"./SiteBar\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\nimport {FriendType} from \"../Friends/FriendsItem/FriendsItem\";\r\n\r\ntype MapStateToPropsType = {\r\n    friends: FriendType[]\r\n}\r\n\r\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\r\n    return {\r\n        friends: state.siteBar.friends\r\n    };\r\n};\r\n\r\n\r\nconst SiteBarContainer = connect(mapStateToProps, {})(SiteBar);\r\n\r\n\r\nexport default SiteBarContainer;\r\n","import React from 'react';\r\nimport s from './SiteBar.module.css';\r\nimport {Friends} from \"../Friends/Friends\";\r\nimport {FriendType} from \"../Friends/FriendsItem/FriendsItem\";\r\n\r\n\r\ntype PropsType = {\r\n    friends: FriendType[]\r\n}\r\nconst SiteBar: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div className={s.siteBar}>\r\n            <Friends friends={props.friends}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport {SiteBar};","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport SiteBarContainer from \"../SiteBar/SiteBarContainer\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <nav className={s.nav}>\r\n                <div className={s.item}>\r\n                    <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n                </div>\r\n\r\n                <div className={`${s.item} ${s.active}`}>\r\n                    <NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink>\r\n                </div>\r\n            </nav>\r\n\r\n            <SiteBarContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './DialogItem.module.css';\r\n\r\nexport type DialogItemType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nconst DialogItem: React.FC<DialogItemType> = (props) => {\r\n\r\n    const path = `/dialogs/${props.id}`;\r\n\r\n    return (\r\n        <li className={s.dialogItem}>\r\n            <NavLink className={s.link} activeClassName={s.active} to={path}>\r\n                <img width=\"30px\" height=\"30px\"\r\n                     src=\"https://cva.ukzn.ac.za/wp-content/uploads/2019/07/profile-placeholder.png\"\r\n                     alt=\"avatar\"/>\r\n                {props.name}\r\n            </NavLink>\r\n        </li>\r\n    )\r\n};\r\n\r\n\r\nexport\r\n{\r\n    DialogItem\r\n}\r\n    ;\r\n","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\nexport type MessageType = {\r\n    id: string\r\n    message: string | undefined\r\n    user: number\r\n}\r\n\r\nconst Message: React.FC<MessageType> = (props) => {\r\n    let user = props.user === 1 ? s.user1 : s.user2;\r\n\r\n    return (\r\n        <li className={s.message + ' ' + user}>{props.message}</li>\r\n    )\r\n};\r\n\r\nexport {Message};\r\n","import React, {useRef} from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {DialogsPageType} from \"../../redux/dialogs-reducer\";\r\n\r\n\r\nexport type DialogsType = {\r\n    updateNewMessageText: (text: string) => void\r\n    sendMessage: () => void\r\n    dialogsPage: DialogsPageType\r\n\r\n}\r\n\r\nconst Dialogs: React.FC<DialogsType> = (props) => {\r\n    const dialogsPage = props.dialogsPage;\r\n\r\n    const dialogsElements = dialogsPage.dialogs.map(d => <DialogItem key={d.id} id={d.id} name={d.name}/>);\r\n    const messagesElements = dialogsPage.messages.map(m => <Message key={m.id} id={m.id} user={m.user}\r\n                                                                    message={m.message}/>);\r\n    let newMessageElement = useRef<HTMLTextAreaElement>(null);\r\n\r\n    let addMessage = () => {\r\n        props.sendMessage();\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        if (newMessageElement.current) {\r\n            let text = newMessageElement.current?.value;\r\n            props.updateNewMessageText(text)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className={s.dialogs}>\r\n                <ul className={s.dialogsItems + ' ' + s.listReset}>\r\n                    {dialogsElements}\r\n                </ul>\r\n\r\n                <ul className={s.messages + ' ' + s.listReset}>\r\n                    {messagesElements}\r\n                </ul>\r\n            </div>\r\n\r\n            <div className={s.messenger}>\r\n                <div className={s.textareaWrapper}>\r\n                    <textarea\r\n                        placeholder={'...Enter your message'}\r\n                        ref={newMessageElement}\r\n                        value={dialogsPage.newMessageText}\r\n                        onChange={onPostChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.submitWrapper}>\r\n                    <button onClick={addMessage}>Send</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Dialogs;\r\n","import {addMessageActionCreator, DialogsPageType, updateNewMessageTextCreator} from \"../../redux/dialogs-reducer\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype MapStateToPropsType = {\r\n    dialogsPage: DialogsPageType\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    updateNewMessageText: (text: string) => void\r\n    sendMessage: () => void\r\n}\r\n\r\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n    return {\r\n        updateNewMessageText : (text: string) => {\r\n            dispatch(updateNewMessageTextCreator(text));\r\n        },\r\n        sendMessage : () => {\r\n            dispatch(addMessageActionCreator())\r\n        },\r\n    };\r\n};\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer;\r\n","export default __webpack_public_path__ + \"static/media/avatar.2479805a.png\";","type localeInfoType = {\r\n    // Options.jsx\r\n    items_per_page: string\r\n    jump_to: string\r\n    jump_to_confirm: string\r\n    page: string\r\n\r\n    // Pagination.jsx\r\n    prev_page: string\r\n    next_page: string\r\n    prev_5: string\r\n    next_5: string\r\n    prev_3: string\r\n    next_3: string\r\n}\r\n\r\n\r\nconst localeInfo: localeInfoType = {\r\n    // Options.jsx\r\n    items_per_page: '/ page',\r\n    jump_to: 'Go to',\r\n    jump_to_confirm: 'confirm',\r\n    page: '',\r\n\r\n    // Pagination.jsx\r\n    prev_page: 'Previous Page',\r\n    next_page: 'Next Page',\r\n    prev_5: 'Previous 5 Pages',\r\n    next_5: 'Next 5 Pages',\r\n    prev_3: 'Previous 3 Pages',\r\n    next_3: 'Next 3 Pages',\r\n};\r\n\r\n\r\nexport default localeInfo;","import React from 'react';\r\nimport s from './Users.module.css'\r\nimport avatarDefaultPhoto from \"../../assets/images/avatar.png\";\r\nimport Pagination from 'rc-pagination';\r\nimport localeInfo from '../../locale/en_US'; // need to create in src folder\r\nimport { NavLink } from 'react-router-dom';\r\nimport {UserType} from \"../../redux/users-reducer\";\r\n\r\ntype PropsType = {\r\n    follow: (userID: string) => void\r\n    unfollow: (userID: string) => void\r\n    users: UserType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    followingInProgress: string[]\r\n}\r\n\r\nconst Users = (props: PropsType) => {\r\n    // let pageCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    // let pages = [];\r\n    // for (let i = 1; i <= pageCount; i++) {\r\n    //     pages.push(i);\r\n    // }\r\n\r\n    return (\r\n        <div className={s.users}>\r\n            <div className=\"pagination\">\r\n\r\n                {/*{pages.map((p, index) =>*/}\r\n                {/*    <span*/}\r\n                {/*        key={index}*/}\r\n                {/*        className={(props.currentPage === p) ? `${s.current} ${s.page}` : s.page}*/}\r\n                {/*        onClick={() => {props.onPageChanged(p)}}*/}\r\n                {/*    >*/}\r\n                {/*            {p}*/}\r\n                {/*        </span>)}*/}\r\n\r\n                {/* plugin rc-pagination */}\r\n                <Pagination\r\n                    showTitle={true}\r\n                    current={props.currentPage}\r\n                    className=\"ant-pagination\"\r\n                    onChange={(e) => {\r\n                        props.onPageChanged(e)\r\n                    }}\r\n                    defaultCurrent={props.currentPage}\r\n                    defaultPageSize={props.pageSize}\r\n                    total={props.totalUsersCount}\r\n                    locale={localeInfo}\r\n                />\r\n\r\n            </div>\r\n            {\r\n                props.users.map(u => {\r\n                    return (\r\n                        <div className={s.user} key={u.id}>\r\n                            <div className={s.leftContent}>\r\n                                <div className={s.avatarBG}>\r\n                                    <NavLink to={`./profile/${u.id}`}>\r\n                                        <img className={s.avatar}\r\n                                             src={u.photos.small !== null ? u.photos.small : avatarDefaultPhoto}\r\n                                             alt=\"avatar\"/>\r\n                                    </NavLink>\r\n                                </div>\r\n                                <div className={s.buttons}>\r\n                                    {\r\n                                        u.followed\r\n                                            ?\r\n                                            <button className={u.followed ? s.unfollow : s.follow}\r\n                                                    disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                                    onClick={() => {props.unfollow(u.id)}}\r\n                                            >Unfollow</button>\r\n                                            :\r\n                                            <button className={u.followed ? s.unfollow : s.follow}\r\n                                                    disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                                    onClick={() => {props.follow(u.id)}}\r\n                                            >Follow</button>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className={s.rightContent}>\r\n                                <div className={s.innerLeft}>\r\n                                    <div className={s.name}>{u.name}</div>\r\n                                    <div className={s.status}>{u.status}</div>\r\n                                </div>\r\n                                <div className={s.innerRight}>\r\n                                    <div className={s.country}>{'u.location.country'}</div>\r\n                                    <div className={s.city}>{'u.location.city'}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Users;","export default __webpack_public_path__ + \"static/media/spinner.244c74af.svg\";","import React from 'react';\r\nimport preloader from \"../../../assets/images/spinner.svg\";\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className=\"preloader\">\r\n            <img src={preloader} alt=\"preloader\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","import {connect} from \"react-redux\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\nimport {\r\n    setCurrentPage, UserType, follow, unfollow,\r\n    toggleFollowingInProgress, getUsers\r\n} from \"../../redux/users-reducer\";\r\n\r\nimport React from \"react\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\ntype UsersContainerPropsType = MapStateToPropsType & MapDispatchToProps\r\n\r\n\r\nclass UsersContainer extends React.Component<UsersContainerPropsType> {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged(pageNumber: number) {\r\n        this.props.setCurrentPage(pageNumber)\r\n\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> :\r\n                <Users\r\n                    users={this.props.users}\r\n                    follow={this.props.follow}\r\n                    unfollow={this.props.unfollow}\r\n                    pageSize={this.props.pageSize}\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged.bind(this)}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                    // toggleFollowingInProgress={this.props.toggleFollowingInProgress}\r\n\r\n                />}\r\n        </>\r\n    }\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n    users: UserType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: string[]\r\n}\r\n\r\ntype MapDispatchToProps = {\r\n    follow: (userID: string) => void\r\n    unfollow: (userID: string) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    toggleFollowingInProgress: (isFetching: boolean, userId: string) => void\r\n}\r\n\r\nconst mapStateToProps = (state: StateType) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n//     return {\r\n//         follow: (userID: string) => {\r\n//             dispatch(followAC(userID))\r\n//         },\r\n//\r\n//         unfollow: (userID: string) => {\r\n//             dispatch(unfollowAC(userID))\r\n//         },\r\n//\r\n//         setUsers: (users: UserType[]) => {\r\n//             dispatch(setUsersAC(users))\r\n//         },\r\n//\r\n//         setCurrentPage: (pageNumber: number) => {\r\n//             dispatch(setCurrentPageAC(pageNumber))\r\n//         },\r\n//\r\n//         setTotalUsersCount: (totalCount: number) => {\r\n//             dispatch(setTotalUsersCountAC(totalCount))\r\n//         },\r\n//\r\n//         toggleIsFetching: (isFetching: boolean) => {\r\n//             dispatch(setToggleFetchingAC(isFetching))\r\n//         },\r\n//     }\r\n// }\r\n\r\n\r\nexport default connect<MapStateToPropsType, MapDispatchToProps, {}, StateType>(\r\n    mapStateToProps, {follow, unfollow, setCurrentPage, getUsers, toggleFollowingInProgress}\r\n)(UsersContainer);","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nexport type PostType = {\r\n    id: string\r\n    message: string | undefined\r\n    likeCount: number\r\n}\r\n\r\nconst Post: React.FC<PostType> = (props) => {\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://cva.ukzn.ac.za/wp-content/uploads/2019/07/profile-placeholder.png' alt={'avatar'}/>\r\n            {props.message}\r\n            <div>\r\n                <span>&#x2665;</span> {props.likeCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;\r\n","import React, {useRef} from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post, {PostType} from './Post/Post';\r\n\r\ntype MyPostsPropsType = {\r\n    updateNewPostText: (text: string) => void\r\n    addPost: () => void\r\n    posts: PostType[]\r\n    newPostText: string | undefined\r\n}\r\n\r\nconst MyPosts: React.FC<MyPostsPropsType> = (props) => {\r\n    const postsElements = props.posts.map(p => <Post key={p.id} id={p.id} message={p.message}\r\n                                                     likeCount={p.likeCount}/>);\r\n    const newPostElement: React.RefObject<HTMLTextAreaElement> = useRef<HTMLTextAreaElement>(null);\r\n\r\n    let onAddPost = () => {\r\n        props.addPost();\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        if (newPostElement.current) {\r\n            let text = newPostElement.current?.value;\r\n            props.updateNewPostText(text)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea\r\n                        ref={newPostElement}\r\n                        onChange={onPostChange}\r\n                        value={props.newPostText}\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    <button onClick={onAddPost}>Add post</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MyPosts;\r\n","import {addPostActionCreator, updateNewPostTextCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {StateType} from \"../../../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport {PostType} from \"./Post/Post\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype MapStateToPropsType = {\r\n    posts: PostType[]\r\n    newPostText: string | undefined\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    updateNewPostText: (text: string) => void\r\n    addPost: () => void\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n    return {\r\n        updateNewPostText : (text: string) => {\r\n            dispatch(updateNewPostTextCreator(text));\r\n        },\r\n        addPost : () => {\r\n            dispatch(addPostActionCreator());\r\n        },\r\n    };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n\r\n","import React from 'react';\r\nimport {AiOutlineFacebook} from \"@react-icons/all-files/ai/AiOutlineFacebook\";\r\nimport {FaVk} from \"@react-icons/all-files/fa/FaVk\";\r\nimport {FaTwitter} from \"@react-icons/all-files/fa/FaTwitter\";\r\nimport {FaInstagram} from \"@react-icons/all-files/fa/FaInstagram\";\r\nimport {FaYoutubeSquare} from \"@react-icons/all-files/fa/FaYoutubeSquare\";\r\nimport {FaGithub} from \"@react-icons/all-files/fa/FaGithub\";\r\nimport s from './Social.module.css'\r\n\r\ntype PropsType = {\r\n    facebook: string\r\n    vk: string\r\n    twitter: string\r\n    instagram: string\r\n    youtube: string\r\n    github: string\r\n}\r\n\r\nconst Social = (props: PropsType) => {\r\n\r\n    return (\r\n        <ul className={s.social}>\r\n            {props.facebook ? <li><AiOutlineFacebook/>{props.facebook}</li> : null}\r\n            {props.vk ? <li><FaVk/>{props.vk}</li> : null}\r\n            {props.twitter ? <li><FaTwitter/>{props.twitter}</li> : null}\r\n            {props.instagram ? <li><FaInstagram/>{props.instagram}</li> : null}\r\n            {props.youtube ? <li><FaYoutubeSquare/>{props.youtube}</li> : null}\r\n            {props.github ? <li><FaGithub/>{props.github}</li> : null}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Social;\r\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport PhotoDefault from \"../../../assets/images/avatar.png\";\r\nimport {MdWork} from \"@react-icons/all-files/md/MdWork\";\r\nimport {ProfileInfoType} from \"../ProfileContainer\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport Social from \"./Social/Social\";\r\n\r\n\r\nconst ProfileInfo = (props: ProfileInfoType) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    let isEmptySocial = (!props.profile.contacts.facebook\r\n        && !props.profile.contacts.vk\r\n        && !props.profile.contacts.mainLink\r\n        && !props.profile.contacts.github\r\n        && !props.profile.contacts.twitter\r\n        && !props.profile.contacts.instagram\r\n        && !props.profile.contacts.website)\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.preview}>\r\n                <img src='https://playprint.ru/images/catalog/categories/category-marvel-bg.jpg' alt={'background'}/>\r\n            </div>\r\n\r\n            <div className={s.wrapper}>\r\n                <img className={s.photo} src={props.profile.photos.large || PhotoDefault} width=\"300\" alt=\"ava\"/>\r\n                <div className={s.description}>\r\n                    {<h3>About me:</h3>}\r\n                    <b className={s.name}>{props.profile.fullName}</b>\r\n                    <p>{!props.profile.aboutMe ? '- No description -' : props.profile.aboutMe}</p>\r\n                    {isEmptySocial ? null : <h3>Contacts:</h3>}\r\n\r\n                    <Social\r\n                        facebook={props.profile.contacts.facebook}\r\n                        vk={props.profile.contacts.vk}\r\n                        twitter={props.profile.contacts.twitter}\r\n                        instagram={props.profile.contacts.instagram}\r\n                        youtube={props.profile.contacts.youtube}\r\n                        github={props.profile.contacts.github}\r\n                    />\r\n\r\n                    {props.profile.contacts.mainLink ? <p><b>mainLink - </b> {props.profile.contacts.mainLink}</p> : null}\r\n                    {props.profile.contacts.website ? <p><b>website - </b> {props.profile.contacts.website}</p> : null}\r\n                    {props.profile.lookingForAJob ? <p className={s.work}><MdWork/>{props.profile.lookingForAJobDescription}</p> : null}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileStateType} from \"./ProfileContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props: ProfileStateType) => {\r\n    return (\r\n        <div className={s.profile}>\r\n            <ProfileInfo profile={props.profile}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile} from \"../../redux/profile-reducer\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\n\r\nexport type ProfileStateType = MapPropsType & mapDispatchToPropsType\r\nexport type ProfileInfoType = MapPropsType\r\n\r\n\r\ntype PathParamsType = {\r\n    userId: string,\r\n}\r\n\r\ntype PropsType = RouteComponentProps<PathParamsType> & ProfileStateType\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n    componentDidMount() {\r\n\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId) {\r\n            userId = '18407';\r\n        }\r\n        this.props.getUserProfile(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} />\r\n        )\r\n    }\r\n\r\n}\r\n\r\ntype MapPropsType = ReturnType<typeof mapStateToProps>\r\n\r\ntype mapDispatchToPropsType = {\r\n    getUserProfile: (userID: string) => void\r\n}\r\n\r\nlet mapStateToProps = (state: StateType) => ({\r\n    profile: state.profilePage.profile\r\n});\r\n\r\n\r\nlet WithUrlDataContainerComponent = withRouter(ProfileContainer);\r\nexport default connect(mapStateToProps, {getUserProfile})(WithUrlDataContainerComponent);\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Header.module.css';\r\nimport {HeaderContainerPropsType} from \"./HeaderContainer\";\r\n\r\n\r\nconst Header = (props: HeaderContainerPropsType) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src='https://www.meme-arsenal.com/memes/e207dd3d241976dcbca5fefcd1bfdc70.jpg' alt={'logo'}/>\r\n            <div className={s.loginBlock}>\r\n                {\r\n                    props.isAuth ?\r\n                        props.login\r\n                        : <NavLink to={'/login'}>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUserData} from \"../../redux/auth-reducer\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\n\r\nexport type HeaderContainerPropsType = mapStateType & mapDispatchType\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerPropsType> {\r\n    componentDidMount() {\r\n        this.props.getAuthUserData();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\ntype mapStateType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\n\r\ntype mapDispatchType = {\r\n    getAuthUserData: () => void\r\n}\r\n\r\nconst mapStateToProps = (state: StateType): mapStateType => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {getAuthUserData})(HeaderContainer);\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {Route} from \"react-router-dom\";\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Setting/Settings\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\n\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <div className='app-wrapper'>\r\n            <HeaderContainer/>\r\n            <Navbar />\r\n\r\n            <div className=\"app-wrapper-content\">\r\n                <Route path={'/dialogs'} component={DialogsContainer} render={() => <DialogsContainer />}\r\n                />\r\n                <Route path={'/profile/:userId?'} component={ProfileContainer} render={() => <ProfileContainer/>}/>\r\n                <Route path={'/news'} component={News} render={() => <News/>}/>\r\n                <Route path={'/music'} component={Music} render={() => <Music/>}/>\r\n                <Route path={'/settings'} component={Settings} render={() => <Settings/>}/>\r\n\r\n                <Route path={'/users'} component={UsersContainer} render={() => <UsersContainer/>}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './redux/redux-store';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <BrowserRouter basename={\"/social-network/\"}>\r\n                <App/>\r\n            </BrowserRouter>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}