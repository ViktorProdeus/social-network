{"version":3,"sources":["components/Navbar/Navbar.module.css","components/News/News.module.css","components/Music/Music.module.css","components/Setting/Settings.module.css","components/SiteBar/SiteBar.module.css","components/Profile/Profile.module.css","components/Profile/ProfileInfo/Social/Social.module.css","components/Users/Users.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Dialogs/Dialogs.module.css","reportWebVitals.ts","api/api.ts","redux/profile-reducer.ts","redux/dialogs-reducer.ts","redux/sidebar-reducer.ts","redux/users-reducer.ts","redux/auth-reducer.ts","redux/app-reducer.ts","redux/redux-store.ts","components/News/News.tsx","components/Music/Music.tsx","components/Setting/Settings.tsx","components/Friends/FriendsItem/FriendsItem.tsx","components/Friends/Friends.tsx","components/SiteBar/SiteBarContainer.tsx","components/SiteBar/SiteBar.tsx","components/Navbar/Navbar.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","utils/validators/validator.ts","components/common/FormsControls/FormsControls.tsx","components/Dialogs/AddMessageForm/AddMessageForm.tsx","components/Dialogs/Dialogs.tsx","components/hoc/WithAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx","assets/images/avatar.png","locale/en_US.tsx","components/Users/Users.tsx","assets/images/spinner.svg","components/common/Preloader/Preloader.tsx","components/Users/UsersContainer.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPostsForm/MyPostsForm.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/ProfileInfo/Social/Social.tsx","assets/images/profile-image.jpg","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","assets/images/logo.svg","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","App.tsx","index.tsx","components/Login/Login.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Friends/Friends.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/common/FormsControls/FormsControls.module.css","components/Header/Header.module.css","components/Friends/FriendsItem/FriendsItem.module.css","components/Profile/MyPosts/Post/Post.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","response","data","userId","post","delete","authAPI","email","password","rememberMe","profileAPI","status","put","ADD_POST","SET_USER_PROFILE","SET_STATUS","initialState","posts","id","v1","message","likeCount","profile","setStatus","type","profileReducer","state","action","newPost","newPostText","ADD_MESSAGE","dialogs","name","messages","user","dialogsReducer","newMessageBody","friends","sidebarReducer","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","toggleIsFetching","toggleFollowingInProgress","usersReducer","map","u","userID","followed","filter","SET_USER_DATA","login","isAuth","setAuthUserData","payload","getAuthUserData","dispatch","resultCode","authReducer","SET_INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","siteBar","usersPage","auth","app","form","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","News","className","s","news","Music","music","Settings","settings","FriendsItem","props","item","circle","Friends","friendsElements","wrapper","title","friendsList","SiteBarContainer","connect","Navbar","nav","to","activeClassName","activeLink","active","DialogItem","path","dialogItem","link","width","height","src","alt","Message","user1","user2","requiredField","value","maxLengthCreator","maxLength","length","FormControl","input","meta","hasError","touched","error","styles","formControl","children","Textarea","restProps","Input","text","maxLength100","AddMessageFormRedux","reduxForm","onSubmit","handleSubmit","messenger","Field","component","placeholder","validate","submitWrapper","Dialogs","dialogsElements","d","messagesElements","m","dialogsItems","listReset","values","sendMessage","mapStateToPropsForRedirect","compose","addMessageActionCreator","Component","localeInfo","items_per_page","jump_to","jump_to_confirm","page","prev_page","next_page","prev_5","next_5","prev_3","next_3","Users","showTitle","current","onChange","e","onPageChanged","defaultCurrent","defaultPageSize","total","locale","leftContent","avatarBG","avatar","photos","small","avatarDefaultPhoto","buttons","unfollow","follow","disabled","some","onClick","rightContent","innerLeft","innerRight","country","city","Preloader","preloader","UsersContainer","this","getUsers","pageNumber","setCurrentPage","bind","React","totalCount","items","Post","like","maxLengthCreator10","AddPostFormRedux","wrapperContent","wrapperButton","MyPosts","postsElements","p","wrapperMessenger","addPost","MyPostsContainer","Social","social","facebook","AiOutlineFacebook","vk","FaVk","twitter","FaTwitter","instagram","FaInstagram","youtube","FaYoutubeSquare","github","FaGithub","ProfileStatus","editMode","activateEditMode","setState","deactivateEditMode","updateStatus","onStatusChange","currentTarget","prevProps","prevState","console","log","onDoubleClick","onBlur","autoFocus","ProfileInfo","isEmptySocial","contacts","mainLink","website","preview","bgImage","person","photo","large","PhotoDefault","description","fullName","aboutMe","lookingForAJob","work","MdWork","lookingForAJobDescription","Profile","authorizedUserId","ProfileContainer","match","params","history","push","getUserProfile","getStatus","withRouter","Header","header","logo","loginBlock","FiLogOut","logout","HeaderContainer","LoginReduxForm","formGroup","formGroup_checkbox","checkboxText","formSummaryError","stopSubmit","_error","inner","formData","App","initializeApp","exact","render","DialogsContainer","Login","promise","Promise","all","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.48cbf3fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Navbar_wrapper__3oknN\",\"nav\":\"Navbar_nav__3j_MG\",\"item\":\"Navbar_item__1OyJD\",\"activeLink\":\"Navbar_activeLink__2Ubgr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__3q4B5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__14jij\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__1Twb_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"siteBar\":\"SiteBar_siteBar__UVcXu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1U4Qr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"social\":\"Social_social__A0wT0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__ygJzY\",\"leftContent\":\"Users_leftContent__3imbX\",\"buttons\":\"Users_buttons__1TWgR\",\"unfollow\":\"Users_unfollow__3FA7I\",\"follow\":\"Users_follow__2fcw9\",\"avatarBG\":\"Users_avatarBG__1o7T-\",\"avatar\":\"Users_avatar__1n4J8\",\"user\":\"Users_user__3zAP9\",\"rightContent\":\"Users_rightContent__1TefX\",\"innerLeft\":\"Users_innerLeft__38_DD\",\"innerRight\":\"Users_innerRight__1zpr6\",\"name\":\"Users_name__29eea\",\"status\":\"Users_status__3wQOm\",\"city\":\"Users_city__2e9I0\",\"country\":\"Users_country__35-4c\",\"page\":\"Users_page__Pgi1K\",\"current\":\"Users_current__2iicU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ProfileInfo_wrapper__2TN9j\",\"person\":\"ProfileInfo_person__2W0sc\",\"status\":\"ProfileInfo_status__3wAsk\",\"preview\":\"ProfileInfo_preview__2NOY3\",\"description\":\"ProfileInfo_description__MfRma\",\"work\":\"ProfileInfo_work__KuhDm\",\"photo\":\"ProfileInfo_photo__16Miy\",\"name\":\"ProfileInfo_name__3ORPZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__9d_03\",\"listReset\":\"Dialogs_listReset__2DZjo\",\"dialogsItems\":\"Dialogs_dialogsItems__3xfpV\",\"active\":\"Dialogs_active__R-dH6\",\"messages\":\"Dialogs_messages__32clz\",\"messenger\":\"Dialogs_messenger__3HgeR\",\"submitWrapper\":\"Dialogs_submitWrapper__3N8VE\"};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import axios from \"axios\";\r\n\r\nconst baseURL = 'https://social-network.samuraijs.com/api/1.0/';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL,\r\n    headers: {\r\n        \"API-KEY\": \"e12dcb15-1200-4ce1-bb28-bb99ac0ccb98\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number = 1, pageSize: number = 5) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n\r\n    follow(userId: string) {\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => response.data);\r\n    },\r\n\r\n    unfollow(userId: string) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(response => response.data);\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    get() {\r\n        return instance.get<GetResponse>('auth/me').then(response => response.data);\r\n    },\r\n\r\n    login(email: string, password: string, rememberMe: boolean = false) {\r\n        return instance.post('auth/login', {email, password, rememberMe,})\r\n            .then(response => response.data);\r\n    },\r\n\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n            .then(response => response.data);\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    get(userId: string) {\r\n        return instance.get(`profile/${userId}`).then(response => response.data);\r\n    },\r\n\r\n    getStatus(userId: string) {\r\n        return instance.get(`profile/status/${userId}`).then(response => response.data);\r\n    },\r\n\r\n    updateStatus(status: string) {\r\n        return instance.put('profile/status', {status}).then(response => response.data);\r\n    },\r\n}\r\n\r\ntype GetResponse = {\r\n    data: {\r\n        email: string\r\n        id: string\r\n        login: string\r\n    }\r\n    fieldsErrors: string[]\r\n    messages: string[]\r\n    resultCode: number\r\n}\r\n\r\n","import {v1} from \"uuid\";\r\nimport {profileAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\r\nconst SET_USER_PROFILE = \"SET-USER-PROFILE\";\r\nconst SET_STATUS = \"SET-STATUS\";\r\n\r\nexport type ActionsProfileType = AddPostType | UpdatePostType | SetUsersType |  SetStatusType;\r\n\r\ntype AddPostType = {\r\n    type: typeof ADD_POST\r\n    newPostText: string\r\n}\r\n\r\ntype UpdatePostType = {\r\n    type: typeof UPDATE_NEW_POST_TEXT\r\n    newPostText: string\r\n}\r\n\r\ntype SetUsersType = {\r\n    type: typeof SET_USER_PROFILE\r\n    profile: ProfileType\r\n}\r\n\r\ntype SetStatusType = {\r\n    type: typeof SET_STATUS\r\n    status: string\r\n}\r\n\r\ntype ContactsType = {\r\n    github: string\r\n    vk: string\r\n    facebook: string\r\n    instagram: string\r\n    twitter: string\r\n    website: string\r\n    youtube: string\r\n    mainLink: string\r\n}\r\n\r\ntype PhotosType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\n\r\nexport type ProfileType = {\r\n    \"aboutMe\": string\r\n    \"contacts\": ContactsType\r\n    \"lookingForAJob\": boolean\r\n    \"lookingForAJobDescription\": string\r\n    \"fullName\": string\r\n    \"userId\": number\r\n    \"photos\": PhotosType\r\n}\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: v1(), message: 'Hi, how are you?', likeCount: 3},\r\n        {id: v1(), message: 'How is your it-camasutra?', likeCount: 13},\r\n    ],\r\n\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n};\r\n\r\nexport type ProfilePageType = typeof initialState\r\n\r\nconst profileReducer = (state: ProfilePageType = initialState, action: ActionsProfileType): ProfilePageType => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: v1(),\r\n                message: action.newPostText,\r\n                likeCount: 0\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                posts: [newPost, ...state.posts],\r\n            };\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n\r\n        case SET_STATUS: {\r\n\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (newPostText: string): AddPostType => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (profile: ProfileType): SetUsersType => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status: string): SetStatusType => ({type: SET_STATUS, status});\r\nexport const getUserProfile = (userID: string) => (dispatch: Dispatch<ActionsProfileType>) => {\r\n    profileAPI.get(userID).then(data => dispatch(setUserProfile(data)))\r\n}\r\nexport const getStatus = (userID: string) => (dispatch: Dispatch<ActionsProfileType>) => {\r\n    profileAPI.getStatus(userID).then(data => dispatch(setStatus(data)));\r\n}\r\nexport const updateStatus = (status: string) => (dispatch: Dispatch<ActionsProfileType>) => {\r\n    profileAPI.updateStatus(status).then(data => {\r\n        if(data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    });\r\n}\r\n\r\nexport default profileReducer;","import {v1} from \"uuid\";\r\n\r\nconst ADD_MESSAGE = \"ADD-MESSAGE\";\r\n\r\nexport type ActionsDialogsType = ActionAddMessageType;\r\n\r\n\r\ntype ActionAddMessageType = {\r\n    type: typeof ADD_MESSAGE\r\n    newMessageBody: string\r\n}\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: v1(), name: 'Dimych'},\r\n        {id: v1(), name: 'Andrey'},\r\n        {id: v1(), name: 'Sveta'},\r\n        {id: v1(), name: 'Sasha'},\r\n        {id: v1(), name: 'Viktor'},\r\n        {id: v1(), name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: v1(), message: 'Hi!', user: 1},\r\n        {id: v1(), message: 'Hi!', user: 2},\r\n        {id: v1(), message: 'How is your it-camasutra?', user: 2},\r\n        {id: v1(), message: 'Perfectly', user: 1},\r\n        {id: v1(), message: 'It\\'s amazing', user: 2},\r\n        {id: v1(), message: 'Thanks', user: 1}\r\n    ],\r\n};\r\n\r\nexport type DialogsPageType = typeof initialState\r\n\r\nconst dialogsReducer = (state : DialogsPageType = initialState, action: ActionsDialogsType): DialogsPageType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {\r\n                    id: v1(),\r\n                    message: action.newMessageBody,\r\n                    user: 2\r\n                }],\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addMessageActionCreator = (newMessageBody: string): ActionAddMessageType => ({type: ADD_MESSAGE, newMessageBody});\r\n\r\nexport default dialogsReducer;","import {v1} from \"uuid\";\r\n\r\n\r\nlet initialState = {\r\n    friends: [\r\n        {id: v1(), name: 'Andrew'},\r\n        {id: v1(), name: 'Sasha'},\r\n        {id: v1(), name: 'Sveta'},\r\n    ]\r\n};\r\n\r\nexport type SiteBarType = typeof initialState\r\n\r\n\r\nconst sidebarReducer = (state: SiteBarType = initialState, action: {}): SiteBarType => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer","import {usersAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst FOLLOW = \"users/FOLLOW\";\r\nconst UNFOLLOW = \"users/UNFOLLOW\";\r\nconst SET_USERS = \"users/SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"users/SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"users/SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"users/TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"users/TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\n\r\ntype ActionFollowType = {\r\n    type: typeof FOLLOW\r\n    userID: string\r\n}\r\n\r\n\r\ntype ActionUnfollowType = {\r\n    type: typeof UNFOLLOW\r\n    userID: string\r\n}\r\n\r\ntype ActionSetUsersType = {\r\n    type: typeof SET_USERS\r\n    users: UserType[]\r\n}\r\n\r\ntype ActionSetCurrentPageType = {\r\n    type: typeof SET_CURRENT_PAGE\r\n    currentPage: number\r\n}\r\n\r\ntype ActionSetTotalUsersCountType = {\r\n    type: typeof SET_TOTAL_USERS_COUNT\r\n    totalUsersCount: number\r\n}\r\n\r\ntype ActionToggleIsFetchingType = {\r\n    type: typeof TOGGLE_IS_FETCHING\r\n    isFetching: boolean\r\n}\r\n\r\ntype ActionToggleIsFollowingProgressType = {\r\n    type: typeof TOGGLE_IS_FOLLOWING_PROGRESS\r\n    isFetching: boolean\r\n    userId: string\r\n}\r\n\r\ntype ActionsUsersType =\r\n    ActionFollowType\r\n    | ActionUnfollowType\r\n    | ActionSetUsersType\r\n    | ActionSetCurrentPageType\r\n    | ActionSetTotalUsersCountType\r\n    | ActionToggleIsFetchingType\r\n    | ActionToggleIsFollowingProgressType;\r\n\r\ntype LocationType = {\r\n    city: string\r\n    country: string\r\n}\r\n\r\nexport type UserType = {\r\n    id: string\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n    name: string\r\n    status: string\r\n    followed: boolean\r\n    location: LocationType\r\n}\r\n\r\nlet initialState = {\r\n    users: [] as UserType[],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as string[]\r\n}\r\n\r\nexport type UsersPageType = typeof initialState\r\n\r\nconst usersReducer = (state: UsersPageType = initialState, action: ActionsUsersType): UsersPageType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users\r\n                    .map(u => (u.id === action.userID)\r\n                        ? {...u, followed: true} : u)\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users\r\n                    .map(u => (u.id === action.userID)\r\n                        ? {...u, followed: false} : u)\r\n            }\r\n\r\n        case SET_USERS:\r\n            return {\r\n                ...state, users: action.users\r\n            }\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state, totalUsersCount: action.totalUsersCount\r\n            }\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state, followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userID: string): ActionFollowType => ({type: FOLLOW, userID});\r\nexport const unfollowSuccess = (userID: string): ActionUnfollowType => ({type: UNFOLLOW, userID});\r\nexport const setUsers = (users: UserType[]): ActionSetUsersType => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage: number): ActionSetCurrentPageType => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalCount: number): ActionSetTotalUsersCountType => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount: totalCount});\r\nexport const toggleIsFetching = (isFetching: boolean): ActionToggleIsFetchingType => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingInProgress = (isFetching: boolean, userId: string): ActionToggleIsFollowingProgressType => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\n\r\n// ThunkCreators\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number) => {\r\n\r\n    return (dispatch: Dispatch<ActionsUsersType>) => {\r\n        dispatch(toggleIsFetching(true));\r\n\r\n        usersAPI.getUsers(currentPage, pageSize)\r\n            .then((data) => {\r\n                dispatch(toggleIsFetching(false));\r\n                dispatch(setUsers(data.items));\r\n                dispatch(setTotalUsersCount(data.totalCount));\r\n            });\r\n    }\r\n}\r\n\r\nexport const follow = (userId: string) => {\r\n    return (dispatch: Dispatch<ActionsUsersType>) => {\r\n        dispatch(toggleFollowingInProgress(true, userId));\r\n        usersAPI.follow(userId)\r\n            .then((data) => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(followSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingInProgress(false, userId));\r\n            });\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId: string) => {\r\n    return (dispatch: Dispatch<ActionsUsersType>) => {\r\n        dispatch(toggleFollowingInProgress(true, userId));\r\n        usersAPI.unfollow(userId).then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(unfollowSuccess(userId));\r\n            }\r\n            dispatch(toggleFollowingInProgress(false, userId));\r\n        });\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import { authAPI } from \"../api/api\";\r\nimport { Dispatch } from \"redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { StateType } from \"./redux-store\";\r\nimport { stopSubmit } from \"redux-form\";\r\nimport { FormAction} from \"redux-form/lib/actions\";\r\n\r\nconst SET_USER_DATA = \"users/SET-USER-DATA\";\r\n\r\nexport type AuthStateType = {\r\n    id: string | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\n\r\n\r\nlet initialState: AuthStateType = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n    // isFetching: false\r\n};\r\n\r\n\r\nconst authReducer = (state: AuthStateType = initialState, action: ActionType): AuthStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (id: string | null, email: string | null, login: string | null, isAuth: boolean) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {\r\n        id, email, login, isAuth\r\n    }\r\n} as const);\r\n\r\ntype ActionSetUserDataType = ReturnType<typeof setAuthUserData>\r\n\r\nexport const getAuthUserData = () => (dispatch: Dispatch<ActionType>) => {\r\n    return authAPI.get().then(response => {\r\n        if (response.resultCode === 0) {\r\n            let {id, login, email} = response.data;\r\n            dispatch(setAuthUserData(id, email, login, true));\r\n        }\r\n    });\r\n};\r\n\r\ntype GetAuthUserDataThunkType = ThunkDispatch<StateType, unknown, ActionType | FormAction>\r\n\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean) => (dispatch: GetAuthUserDataThunkType) => {\r\n\r\n\r\n    authAPI.login(email, password, rememberMe).then(response => {\r\n\r\n        if (response.resultCode === 0) {\r\n            dispatch(getAuthUserData());\r\n        }\r\n        else {\r\n                let message = response.messages.length > 0 ? response.messages[0] : \"Some error\";\r\n                dispatch(stopSubmit(\"Login\", {_error: message}));\r\n            }\r\n\r\n    });\r\n};\r\n\r\nexport type LoginType = ReturnType<typeof login>\r\n\r\nexport const logout = () => (dispatch: Dispatch<ActionType>) => {\r\n    authAPI.logout().then(response => {\r\n\r\n        if (response.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        }\r\n    });\r\n};\r\n\r\nexport type ActionType = ActionSetUserDataType\r\n\r\n\r\nexport default authReducer;","import { ThunkDispatch } from \"redux-thunk\";\r\nimport { StateType } from \"./redux-store\";\r\nimport { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst SET_INITIALIZED_SUCCESS = \"app/SET-INITIALIZED-SUCCESS\";\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n};\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\nconst appReducer = (state: initialStateType = initialState, action: ActionsType): initialStateType => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializesSuccess = () => ({\r\n    type: SET_INITIALIZED_SUCCESS,\r\n} as const);\r\n\r\ntype InitializesSuccessType = ReturnType<typeof initializesSuccess>\r\n\r\ntype InitializeAppThunkType = ThunkDispatch<StateType, unknown, ActionsType>\r\n\r\nexport const initializeApp = () => (dispatch: InitializeAppThunkType) => {\r\n    const promise = dispatch(getAuthUserData());\r\n\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializesSuccess());\r\n        });\r\n};\r\n\r\n\r\nexport type ActionsType = InitializesSuccessType\r\n\r\n\r\nexport default appReducer;","import {combineReducers, createStore, applyMiddleware} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport appReducer from \"./app-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    siteBar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer,\r\n});\r\n\r\nexport type StateType = ReturnType<typeof reducers>\r\n\r\n\r\n\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\n// @ts-ignore\r\nwindow.store = store\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div className={s.news}>\r\n            <h1>News</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;\r\n","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div className={s.music}>\r\n            <h1>Music</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;\r\n","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div className={s.settings}>\r\n            <h1>Settings</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\nimport s from './FriendsItem.module.css';\r\n\r\nexport type FriendType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nconst FriendsItem: React.FC<FriendType> = (props) => {\r\n\r\n\r\n    return (\r\n        <li className={s.item}>\r\n            <div className={s.circle}></div>\r\n            {props.name}\r\n        </li>\r\n    )\r\n};\r\n\r\nexport {FriendsItem};","import React from 'react';\r\nimport s from './Friends.module.css';\r\nimport {FriendsItem} from \"./FriendsItem/FriendsItem\";\r\nimport {SiteBarType} from \"../../redux/sidebar-reducer\";\r\n\r\nconst Friends: React.FC<SiteBarType> = (props) => {\r\n    const friendsElements = props.friends.map(item => <FriendsItem key={item.id} id={item.id} name={item.name}/>)\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <h2 className={s.title}>Friends</h2>\r\n\r\n            <ul className={s.friendsList}>\r\n                {friendsElements}\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport {Friends};","import {SiteBar} from \"./SiteBar\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\nimport {FriendType} from \"../Friends/FriendsItem/FriendsItem\";\r\n\r\ntype MapStateToPropsType = {\r\n    friends: FriendType[]\r\n}\r\n\r\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\r\n    return {\r\n        friends: state.siteBar.friends\r\n    };\r\n};\r\n\r\n\r\nconst SiteBarContainer = connect(mapStateToProps, {})(SiteBar);\r\n\r\n\r\nexport default SiteBarContainer;\r\n","import React from 'react';\r\nimport s from './SiteBar.module.css';\r\nimport {Friends} from \"../Friends/Friends\";\r\nimport {FriendType} from \"../Friends/FriendsItem/FriendsItem\";\r\n\r\n\r\ntype PropsType = {\r\n    friends: FriendType[]\r\n}\r\nconst SiteBar: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div className={s.siteBar}>\r\n            <Friends friends={props.friends}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport {SiteBar};","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport SiteBarContainer from \"../SiteBar/SiteBarContainer\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <nav className={s.nav}>\r\n                <div className={s.item}>\r\n                    <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n                </div>\r\n\r\n                <div className={`${s.item} ${s.active}`}>\r\n                    <NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to='/login' activeClassName={s.activeLink}>Login</NavLink>\r\n                </div>\r\n            </nav>\r\n\r\n            <SiteBarContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './DialogItem.module.css';\r\n\r\nexport type DialogItemType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nconst DialogItem: React.FC<DialogItemType> = (props) => {\r\n\r\n    const path = `/dialogs/${props.id}`;\r\n\r\n    return (\r\n        <li className={s.dialogItem}>\r\n            <NavLink className={s.link} activeClassName={s.active} to={path}>\r\n                <img width=\"30px\" height=\"30px\"\r\n                     src=\"https://cva.ukzn.ac.za/wp-content/uploads/2019/07/profile-placeholder.png\"\r\n                     alt=\"avatar\"/>\r\n                {props.name}\r\n            </NavLink>\r\n        </li>\r\n    )\r\n};\r\n\r\n\r\nexport\r\n{\r\n    DialogItem\r\n}\r\n    ;\r\n","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\nexport type MessageType = {\r\n    id: string\r\n    message: string | undefined\r\n    user: number\r\n}\r\n\r\nconst Message: React.FC<MessageType> = (props) => {\r\n    let user = props.user === 1 ? s.user1 : s.user2;\r\n\r\n    return (\r\n        <li className={s.message + ' ' + user}>{props.message}</li>\r\n    )\r\n};\r\n\r\nexport {Message};\r\n","export const requiredField = (value: string) => {\r\n    if(value) return undefined;\r\n    return  \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n    if(value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return  undefined;\r\n}","import React from 'react';\r\nimport styles from './FormsControls.module.css';\r\nimport { WrappedFieldProps } from \"redux-form\";\r\n\r\nexport const FormControl: React.FC<WrappedFieldProps> = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={hasError ? `${styles.formControl} ${styles.error}` : styles.formControl}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Textarea = (props: WrappedFieldProps) => {\r\n    const {input, meta, ...restProps} = props;\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...input} {...restProps} />\r\n            <span>{hasError && meta.error}</span>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\ntype OwnPropsType = {\r\n    text: string\r\n}\r\n\r\nexport const Input = (props: WrappedFieldProps & OwnPropsType) => {\r\n    const {input, meta, ...restProps} = props;\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <FormControl {...props}>\r\n            <label>\r\n                <span>{props.text}</span>\r\n                <br />\r\n                <input {...input} {...restProps} />\r\n                <br />\r\n                <span>{hasError && meta.error}</span>\r\n            </label>\r\n        </FormControl>\r\n    )\r\n}\r\n","import { Field, InjectedFormProps, reduxForm } from \"redux-form\";\r\nimport React from \"react\";\r\nimport s from \"../Dialogs.module.css\";\r\nimport { maxLengthCreator, requiredField } from \"../../../utils/validators/validator\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nexport type FormDataType = {\r\n    newMessageBody: string\r\n}\r\n\r\nconst maxLength100 = maxLengthCreator(50)\r\nexport const AddMessageForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.messenger}>\r\n            <Field component={Textarea}\r\n                   placeholder={\"...Enter your message\"}\r\n                   name={\"newMessageBody\"}\r\n                   validate={[requiredField, maxLength100]}\r\n            />\r\n\r\n            <div className={s.submitWrapper}>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\nexport const AddMessageFormRedux = reduxForm<FormDataType>({form: \"dialogAddMessageForm\"})(AddMessageForm);","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport { DialogItem } from \"./DialogItem/DialogItem\";\r\nimport { Message } from \"./Message/Message\";\r\nimport { DialogsType } from \"./DialogsContainer\";\r\nimport { AddMessageFormRedux } from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs: React.FC<DialogsType> = (props) => {\r\n    const dialogsPage = props.dialogsPage;\r\n\r\n    const dialogsElements = dialogsPage.dialogs.map(d => <DialogItem key={d.id} id={d.id} name={d.name} />);\r\n    const messagesElements = dialogsPage.messages.map(m => <Message key={m.id} id={m.id} user={m.user}\r\n                                                                    message={m.message} />);\r\n\r\n    let addNewMessage = (values: { newMessageBody: string }) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={s.dialogs}>\r\n                <ul className={s.dialogsItems + ' ' + s.listReset}>\r\n                    {dialogsElements}\r\n                </ul>\r\n\r\n                <ul className={s.messages + ' ' + s.listReset}>\r\n                    {messagesElements}\r\n                </ul>\r\n            </div>\r\n\r\n            <AddMessageFormRedux onSubmit={addNewMessage} />\r\n        </>\r\n    )\r\n};\r\n\r\n\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\n\r\nlet mapStateToPropsForRedirect = (state: StateType) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\ntype mapStateToPropsForRedirectType = ReturnType<typeof mapStateToPropsForRedirect>;\r\n\r\nexport function withAuthRedirect<T>(Component: React.ComponentType<T>) {\r\n\r\n    function RedirectComponent(props: mapStateToPropsForRedirectType) {\r\n        const {isAuth, ...restProps} = props\r\n\r\n        if (!isAuth) return <Redirect to={\"/login\"}/>\r\n\r\n        return <Component {...restProps as T} />\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}","import { addMessageActionCreator, DialogsPageType } from \"../../redux/dialogs-reducer\";\r\nimport { StateType } from \"../../redux/redux-store\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose, Dispatch } from \"redux\";\r\nimport { withAuthRedirect } from \"../hoc/WithAuthRedirect\";\r\nimport React from \"react\";\r\n\r\ntype MapStateToPropsType = {\r\n    dialogsPage: DialogsPageType\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    // updateNewMessageText: (text: string) => void\r\n    sendMessage: (newMessageBody: string) => void\r\n}\r\n\r\nexport type DialogsType = MapStateToPropsType & mapDispatchToPropsType;\r\n\r\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n    return {\r\n        sendMessage : (newMessageBody) => {\r\n            dispatch(addMessageActionCreator(newMessageBody))\r\n        },\r\n    };\r\n};\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect)(Dialogs)\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/avatar.2479805a.png\";","type localeInfoType = {\r\n    // Options.jsx\r\n    items_per_page: string\r\n    jump_to: string\r\n    jump_to_confirm: string\r\n    page: string\r\n\r\n    // Pagination.jsx\r\n    prev_page: string\r\n    next_page: string\r\n    prev_5: string\r\n    next_5: string\r\n    prev_3: string\r\n    next_3: string\r\n}\r\n\r\n\r\nconst localeInfo: localeInfoType = {\r\n    // Options.jsx\r\n    items_per_page: '/ page',\r\n    jump_to: 'Go to',\r\n    jump_to_confirm: 'confirm',\r\n    page: '',\r\n\r\n    // Pagination.jsx\r\n    prev_page: 'Previous Page',\r\n    next_page: 'Next Page',\r\n    prev_5: 'Previous 5 Pages',\r\n    next_5: 'Next 5 Pages',\r\n    prev_3: 'Previous 3 Pages',\r\n    next_3: 'Next 3 Pages',\r\n};\r\n\r\n\r\nexport default localeInfo;","import React from 'react';\r\nimport s from './Users.module.css'\r\nimport avatarDefaultPhoto from \"../../assets/images/avatar.png\";\r\nimport Pagination from 'rc-pagination';\r\nimport localeInfo from '../../locale/en_US'; // need to create in src folder\r\nimport { NavLink } from 'react-router-dom';\r\nimport {UserType} from \"../../redux/users-reducer\";\r\n\r\ntype PropsType = {\r\n    follow: (userID: string) => void\r\n    unfollow: (userID: string) => void\r\n    users: UserType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    followingInProgress: string[]\r\n}\r\n\r\nconst Users = (props: PropsType) => {\r\n    // let pageCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    // let pages = [];\r\n    // for (let i = 1; i <= pageCount; i++) {\r\n    //     pages.push(i);\r\n    // }\r\n\r\n    return (\r\n        <div className={s.users}>\r\n            <div className=\"pagination\">\r\n\r\n                {/*{pages.map((p, index) =>*/}\r\n                {/*    <span*/}\r\n                {/*        key={index}*/}\r\n                {/*        className={(props.currentPage === p) ? `${s.current} ${s.page}` : s.page}*/}\r\n                {/*        onClick={() => {props.onPageChanged(p)}}*/}\r\n                {/*    >*/}\r\n                {/*            {p}*/}\r\n                {/*        </span>)}*/}\r\n\r\n                {/* plugin rc-pagination */}\r\n                <Pagination\r\n                    showTitle={true}\r\n                    current={props.currentPage}\r\n                    className=\"ant-pagination\"\r\n                    onChange={(e) => {\r\n                        props.onPageChanged(e)\r\n                    }}\r\n                    defaultCurrent={props.currentPage}\r\n                    defaultPageSize={props.pageSize}\r\n                    total={props.totalUsersCount}\r\n                    locale={localeInfo}\r\n                />\r\n\r\n            </div>\r\n            {\r\n                props.users.map(u => {\r\n                    return (\r\n                        <div className={s.user} key={u.id}>\r\n                            <div className={s.leftContent}>\r\n                                <div className={s.avatarBG}>\r\n                                    <NavLink to={`./profile/${u.id}`}>\r\n                                        <img className={s.avatar}\r\n                                             src={u.photos.small !== null ? u.photos.small : avatarDefaultPhoto}\r\n                                             alt=\"avatar\"/>\r\n                                    </NavLink>\r\n                                </div>\r\n                                <div className={s.buttons}>\r\n                                    {\r\n                                        u.followed\r\n                                            ?\r\n                                            <button className={u.followed ? s.unfollow : s.follow}\r\n                                                    disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                                    onClick={() => {props.unfollow(u.id)}}\r\n                                            >Unfollow</button>\r\n                                            :\r\n                                            <button className={u.followed ? s.unfollow : s.follow}\r\n                                                    disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                                    onClick={() => {props.follow(u.id)}}\r\n                                            >Follow</button>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className={s.rightContent}>\r\n                                <div className={s.innerLeft}>\r\n                                    <div className={s.name}>{u.name}</div>\r\n                                    <div className={s.status}>{u.status}</div>\r\n                                </div>\r\n                                <div className={s.innerRight}>\r\n                                    <div className={s.country}>{'u.location.country'}</div>\r\n                                    <div className={s.city}>{'u.location.city'}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Users;","export default __webpack_public_path__ + \"static/media/spinner.6f870003.svg\";","import React from 'react';\r\nimport preloader from \"../../../assets/images/spinner.svg\";\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className=\"preloader\">\r\n            <img src={preloader} alt=\"preloader\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","import {connect} from \"react-redux\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\nimport {\r\n    follow,\r\n    getUsers,\r\n    setCurrentPage,\r\n    toggleFollowingInProgress,\r\n    unfollow,\r\n    UserType\r\n} from \"../../redux/users-reducer\";\r\n\r\nimport React from \"react\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\n\r\ntype UsersContainerPropsType = MapStateToPropsType & MapDispatchToProps\r\n\r\n\r\nclass UsersContainer extends React.Component<UsersContainerPropsType> {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged(pageNumber: number) {\r\n        this.props.setCurrentPage(pageNumber)\r\n\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> :\r\n                <Users\r\n                    users={this.props.users}\r\n                    follow={this.props.follow}\r\n                    unfollow={this.props.unfollow}\r\n                    pageSize={this.props.pageSize}\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged.bind(this)}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                    // toggleFollowingInProgress={this.props.toggleFollowingInProgress}\r\n\r\n                />}\r\n        </>\r\n    }\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n    users: UserType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: string[]\r\n}\r\n\r\ntype MapDispatchToProps = {\r\n    follow: (userID: string) => void\r\n    unfollow: (userID: string) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    toggleFollowingInProgress: (isFetching: boolean, userId: string) => void\r\n}\r\n\r\nconst mapStateToProps = (state: StateType) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n//     return {\r\n//         follow: (userID: string) => {\r\n//             dispatch(followAC(userID))\r\n//         },\r\n//\r\n//         unfollow: (userID: string) => {\r\n//             dispatch(unfollowAC(userID))\r\n//         },\r\n//\r\n//         setUsers: (users: UserType[]) => {\r\n//             dispatch(setUsersAC(users))\r\n//         },\r\n//\r\n//         setCurrentPage: (pageNumber: number) => {\r\n//             dispatch(setCurrentPageAC(pageNumber))\r\n//         },\r\n//\r\n//         setTotalUsersCount: (totalCount: number) => {\r\n//             dispatch(setTotalUsersCountAC(totalCount))\r\n//         },\r\n//\r\n//         toggleIsFetching: (isFetching: boolean) => {\r\n//             dispatch(setToggleFetchingAC(isFetching))\r\n//         },\r\n//     }\r\n// }\r\n\r\n\r\n//  connect<MapStateToPropsType, MapDispatchToProps, {}, StateType>(\r\n//     mapStateToProps, {follow, unfollow, setCurrentPage, getUsers, toggleFollowingInProgress}\r\n// )(UsersContainer);\r\n\r\nexport default compose<React.ComponentType>(\r\n    // withAuthRedirect,\r\n    connect<MapStateToPropsType, MapDispatchToProps, {}, StateType>(\r\n        mapStateToProps, {follow, unfollow, setCurrentPage, getUsers, toggleFollowingInProgress})\r\n)(UsersContainer);","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nexport type PostType = {\r\n    id: string\r\n    message: string | undefined\r\n    likeCount: number\r\n}\r\n\r\nconst Post: React.FC<PostType> = (props) => {\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://cva.ukzn.ac.za/wp-content/uploads/2019/07/profile-placeholder.png' alt={'avatar'}/>\r\n            <p>{props.message}</p>\r\n            <div>\r\n                <span className={s.like}>&#x2665;</span> {props.likeCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Field, InjectedFormProps, reduxForm } from \"redux-form\";\r\nimport s from \"../MyPosts.module.css\";\r\nimport { maxLengthCreator, requiredField } from \"../../../../utils/validators/validator\";\r\nimport { Textarea } from \"../../../common/FormsControls/FormsControls\";\r\n\r\nexport type PostFormDataType = {\r\n    newPostText: string\r\n}\r\nconst maxLengthCreator10 = maxLengthCreator(10);\r\n\r\nexport const MyPostsForm: React.FC<InjectedFormProps<PostFormDataType>> = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.wrapperContent}>\r\n            <Field component={Textarea}\r\n                   placeholder={\"...Enter your message\"}\r\n                   name={\"newPostText\"}\r\n                   validate={[requiredField, maxLengthCreator10]}\r\n            />\r\n\r\n            <div className={s.wrapperButton}>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport const AddPostFormRedux = reduxForm<PostFormDataType>({form: \"PostForm\"})(MyPostsForm)","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post, { PostType } from './Post/Post';\r\nimport { AddPostFormRedux } from \"./MyPostsForm/MyPostsForm\";\r\n\r\ntype MyPostsPropsType = {\r\n    addPost: (newPostText: string) => void\r\n    posts: PostType[]\r\n}\r\n\r\nconst MyPosts: React.FC<MyPostsPropsType> = (props) => {\r\n    const postsElements = props.posts.map(p => <Post key={p.id} id={p.id} message={p.message}\r\n                                                     likeCount={p.likeCount} />)\r\n\r\n\r\n    let addPostText = (values: { newPostText: string }) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.wrapperMessenger}>\r\n                <h3>My posts</h3>\r\n\r\n                <AddPostFormRedux onSubmit={addPostText} />\r\n            </div>\r\n\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MyPosts;\r\n","import { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { StateType } from \"../../../redux/redux-store\";\r\nimport { connect } from \"react-redux\";\r\nimport { PostType } from \"./Post/Post\";\r\nimport { Dispatch } from \"redux\";\r\n\r\ntype MapStateToPropsType = {\r\n    posts: PostType[]\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    addPost: (text: string) => void\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n    return {\r\n        addPost : (text: string) => {\r\n            dispatch(addPostActionCreator(text));\r\n        },\r\n    };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n\r\n","import React from 'react';\r\nimport {AiOutlineFacebook} from \"@react-icons/all-files/ai/AiOutlineFacebook\";\r\nimport {FaVk} from \"@react-icons/all-files/fa/FaVk\";\r\nimport {FaTwitter} from \"@react-icons/all-files/fa/FaTwitter\";\r\nimport {FaInstagram} from \"@react-icons/all-files/fa/FaInstagram\";\r\nimport {FaYoutubeSquare} from \"@react-icons/all-files/fa/FaYoutubeSquare\";\r\nimport {FaGithub} from \"@react-icons/all-files/fa/FaGithub\";\r\nimport s from './Social.module.css'\r\n\r\ntype PropsType = {\r\n    facebook: string\r\n    vk: string\r\n    twitter: string\r\n    instagram: string\r\n    youtube: string\r\n    github: string\r\n}\r\n\r\nconst Social = (props: PropsType) => {\r\n\r\n    return (\r\n        <ul className={s.social}>\r\n            {props.facebook ? <li><AiOutlineFacebook/>{props.facebook}</li> : null}\r\n            {props.vk ? <li><FaVk/>{props.vk}</li> : null}\r\n            {props.twitter ? <li><FaTwitter/>{props.twitter}</li> : null}\r\n            {props.instagram ? <li><FaInstagram/>{props.instagram}</li> : null}\r\n            {props.youtube ? <li><FaYoutubeSquare/>{props.youtube}</li> : null}\r\n            {props.github ? <li><FaGithub/>{props.github}</li> : null}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Social;\r\n","export default __webpack_public_path__ + \"static/media/profile-image.ed4049d6.jpg\";","import React, {ChangeEvent, Component} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\ntype PropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nclass ProfileStatus extends Component<PropsType> {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status,\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true,\r\n        })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false,\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({\r\n            status: e.currentTarget.value,\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<PropsType>, prevState: Readonly<{}>) {\r\n        if(prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status,\r\n            })\r\n        }\r\n        console.log('componentDidUpdate')\r\n    }\r\n\r\n    render() {\r\n        console.log('render')\r\n        return (\r\n            <div className={s.status}>\r\n                {!this.state.editMode &&\r\n                <div onDoubleClick={this.activateEditMode}>\r\n                    <b>status: </b><span>{this.props.status || ' -empty-'}</span>\r\n                </div>\r\n                }\r\n\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input\r\n                        onChange={this.onStatusChange}\r\n                        onBlur={this.deactivateEditMode}\r\n                        autoFocus\r\n                        value={this.state.status}\r\n                    />\r\n                </div>\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport PhotoDefault from \"../../../assets/images/avatar.png\";\r\nimport { MdWork } from \"@react-icons/all-files/md/MdWork\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport Social from \"./Social/Social\";\r\nimport bgImage from \"../../../assets/images/profile-image.jpg\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport { MapPropsType } from \"../ProfileContainer\";\r\n\r\n\r\ntype PropsType = MapPropsType & {\r\n    updateStatus: (status: string) => void\r\n};\r\n\r\nconst ProfileInfo = (props: PropsType) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    let isEmptySocial = (!props.profile.contacts.facebook\r\n        && !props.profile.contacts.vk\r\n        && !props.profile.contacts.mainLink\r\n        && !props.profile.contacts.github\r\n        && !props.profile.contacts.twitter\r\n        && !props.profile.contacts.instagram\r\n        && !props.profile.contacts.website);\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.preview}>\r\n                <img src={bgImage} alt={'background'}/>\r\n            </div>\r\n\r\n            <div className={s.wrapper}>\r\n                <div className={s.person}>\r\n                    <img className={s.photo} src={props.profile.photos.large || PhotoDefault} width=\"300\" alt=\"ava\"/>\r\n                    <div className={s.description}>\r\n                        {<h3>About me:</h3>}\r\n                        <b className={s.name}>{props.profile.fullName}</b>\r\n                        <p>{!props.profile.aboutMe ? '- No description -' : props.profile.aboutMe}</p>\r\n                        {isEmptySocial ? null : <h3>Contacts:</h3>}\r\n\r\n                        <Social\r\n                            facebook={props.profile.contacts.facebook}\r\n                            vk={props.profile.contacts.vk}\r\n                            twitter={props.profile.contacts.twitter}\r\n                            instagram={props.profile.contacts.instagram}\r\n                            youtube={props.profile.contacts.youtube}\r\n                            github={props.profile.contacts.github}\r\n                        />\r\n\r\n                        {props.profile.contacts.mainLink ? <p><b>mainLink - </b> {props.profile.contacts.mainLink}</p> : null}\r\n                        {props.profile.contacts.website ? <p><b>website - </b> {props.profile.contacts.website}</p> : null}\r\n                        {props.profile.lookingForAJob ? <p className={s.work}><MdWork/>{props.profile.lookingForAJobDescription}</p> : null}\r\n                    </div>\r\n                </div>\r\n\r\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileStateType} from \"./ProfileContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Profile = (props: ProfileStateType) => {\r\n    if(!props.isAuth) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n    return (\r\n        <div className={s.profile}>\r\n\r\n            <ProfileInfo\r\n                isAuth={props.isAuth}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n                authorizedUserId={props.authorizedUserId}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nexport type ProfileStateType = MapPropsType & mapDispatchToPropsType\r\n\r\n\r\ntype PathParamsType = {\r\n    userId: string,\r\n}\r\n\r\ntype PropsType = RouteComponentProps<PathParamsType> & ProfileStateType\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n    componentDidMount() {\r\n\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId as string;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile\r\n                {...this.props}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    getUserProfile: (userID: string) => void\r\n    getStatus: (userID: string) => void\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nlet mapStateToProps = (state: StateType) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport type MapPropsType = ReturnType<typeof mapStateToProps>\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n","export default __webpack_public_path__ + \"static/media/logo.d941bb34.svg\";","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Header.module.css';\r\nimport {HeaderContainerPropsType} from \"./HeaderContainer\";\r\nimport logo from \"../../assets/images/logo.svg\";\r\nimport { FiLogOut } from \"@react-icons/all-files/fi/FiLogOut\";\r\n\r\n\r\nconst Header = (props: HeaderContainerPropsType) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src={logo} alt={'logo'}/>\r\n            <div className={s.loginBlock}>\r\n                {\r\n                    props.isAuth\r\n                        ?\r\n                        <div className={s.login}>{props.login} <FiLogOut onClick={props.logout}/></div>\r\n                        : <NavLink to={'/login'}>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../redux/auth-reducer\";\r\nimport { StateType } from \"../../redux/redux-store\";\r\n\r\nexport type HeaderContainerPropsType = mapStateType & mapDispatchType\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerPropsType> {\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\ntype mapStateType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\n\r\ntype mapDispatchType = {\r\n    logout:  () => void\r\n}\r\n\r\nconst mapStateToProps = (state: StateType): mapStateType => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);\r\n","import React from 'react';\r\nimport s from './Login.module.css';\r\nimport { Field, InjectedFormProps, reduxForm } from \"redux-form\";\r\nimport { requiredField } from \"../../utils/validators/validator\";\r\nimport { Input } from \"../common/FormsControls/FormsControls\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../redux/auth-reducer\";\r\nimport { StateType } from \"../../redux/redux-store\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\ntype FormDataType = {\r\n    rememberMe: boolean\r\n    password: string\r\n    email: string\r\n}\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field\r\n                text={'Email'}\r\n                name={'email'}\r\n                component={Input}\r\n                validate={[requiredField]}\r\n            />\r\n\r\n            <Field\r\n                type={'password'}\r\n                text={'Password'}\r\n                name={'password'}\r\n                component={Input}\r\n                validate={[requiredField]}\r\n            />\r\n\r\n            <div className={`${s.formGroup} ${s.formGroup_checkbox}`}>\r\n                <label>\r\n                    <Field name={'rememberMe'} component={'input'} type='checkbox' />\r\n                    <span className={s.checkboxText}>remember me</span>\r\n                </label>\r\n            </div>\r\n\r\n            <div className={s.formSummaryError}>\r\n                {props.error}\r\n            </div>\r\n\r\n            <div className={s.formGroup}>\r\n                <button type=\"submit\">submit</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType>({form: 'Login'})(LoginForm);\r\n\r\nconst Login = (props: mapDispatchToPropsType & mapStateToPropsType) => {\r\n    const onSubmit = (formData: FormDataType) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if(props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return (\r\n        <div className={s.login}>\r\n            <h1>Login</h1>\r\n            <div className={s.inner}>\r\n                <LoginReduxForm onSubmit={onSubmit} />\r\n                <div>\r\n                    <p>To login, enter test e-mails and password:</p>\r\n                    <p>Email: <span>free@samuraijs.com</span></p>\r\n                    <p>Password: <span>free</span></p>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: StateType) => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\ntype mapStateToPropsType = ReturnType<typeof mapStateToProps>\r\n\r\ntype mapDispatchToPropsType = {\r\n    login: (email: string, password: string, rememberMe: boolean) => void\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {login}) (Login);\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Redirect, Route, withRouter } from \"react-router-dom\";\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Setting/Settings\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { initializeApp } from \"./redux/app-reducer\";\r\nimport { StateType } from \"./redux/redux-store\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\n\r\n\r\nclass App extends React.Component<MapStateToPropsType & mapDispatchToPropsType> {\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        if(!this.props.initialized) {\r\n            return <Preloader />\r\n        }\r\n\r\n        return (\r\n            <div className='app-wrapper'>\r\n\r\n                <HeaderContainer />\r\n                <Navbar />\r\n\r\n                <div className=\"app-wrapper-content\">\r\n                    <Route path={'/'} exact render={() => <Redirect to={'/profile'} />} />\r\n                    <Route path={'/dialogs'} component={DialogsContainer} render={() => <DialogsContainer />}\r\n                    />\r\n                    <Route path={'/profile/:userId?'} component={ProfileContainer}\r\n                           render={() => <ProfileContainer />} />\r\n                    <Route path={'/news'} component={News} render={() => <News />} />\r\n                    <Route path={'/music'} component={Music} render={() => <Music />} />\r\n                    <Route path={'/settings'} component={Settings} render={() => <Settings />} />\r\n                    <Route path={'/users'} component={UsersContainer} render={() => <UsersContainer />} />\r\n                    <Route path={'/login'} component={Login} render={() => <Login />} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: StateType) => ({\r\n    initialized: state.app.initialized,\r\n})\r\n\r\ntype MapStateToPropsType = ReturnType<typeof mapStateToProps>\r\n\r\ntype mapDispatchToPropsType = {\r\n    initializeApp: () => void\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n","import './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './redux/redux-store';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </HashRouter>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__20SqU\",\"inner\":\"Login_inner__eyIyF\",\"formGroup\":\"Login_formGroup__3GsaD\",\"formGroup_checkbox\":\"Login_formGroup_checkbox__2OoCz\",\"errorInput\":\"Login_errorInput__14XaB\",\"formSummaryError\":\"Login_formSummaryError__1ac4r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MyPosts_wrapper__3pZ18\",\"wrapperMessenger\":\"MyPosts_wrapperMessenger__2cJyv\",\"wrapperContent\":\"MyPosts_wrapperContent__3L0-j\",\"wrapperButton\":\"MyPosts_wrapperButton__1QS50\",\"posts\":\"MyPosts_posts__3GeRT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Friends_wrapper__1ATQ7\",\"title\":\"Friends_title__18mMj\",\"friendsList\":\"Friends_friendsList__200-J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"DialogItem_dialogItem__3VzTr\",\"link\":\"DialogItem_link__2xWDI\",\"active\":\"DialogItem_active__bUNsx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1TnnS\",\"user1\":\"Message_user1__S8wZx\",\"user2\":\"Message_user2__2h3_T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl___Itib\",\"error\":\"FormsControls_error__13d8D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1tXis\",\"loginBlock\":\"Header_loginBlock__Xhj6l\",\"login\":\"Header_login__3uVYG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendsItem_item__2fAi-\",\"circle\":\"FriendsItem_circle__1Hy3A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2ZpOe\",\"like\":\"Post_like__29_NC\"};"],"sourceRoot":""}