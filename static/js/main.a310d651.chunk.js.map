{"version":3,"sources":["components/Navbar/Navbar.module.css","components/News/News.module.css","components/Music/Music.module.css","components/Setting/Settings.module.css","components/SiteBar/SiteBar.module.css","components/Profile/Profile.module.css","components/Profile/ProfileInfo/Social/Social.module.css","components/Users/Users.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Dialogs/Dialogs.module.css","reportWebVitals.ts","api/api.ts","redux/profile-reducer.ts","redux/dialogs-reducer.ts","redux/sidebar-reducer.ts","redux/users-reducer.ts","redux/auth-reducer.ts","redux/redux-store.ts","components/News/News.tsx","components/Music/Music.tsx","components/Setting/Settings.tsx","components/Friends/FriendsItem/FriendsItem.tsx","components/Friends/Friends.tsx","components/SiteBar/SiteBarContainer.tsx","components/SiteBar/SiteBar.tsx","components/Navbar/Navbar.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","utils/validators/validator.ts","components/common/FormsControls/FormsControls.tsx","components/Dialogs/AddMessageForm/AddMessageForm.tsx","components/Dialogs/Dialogs.tsx","components/hoc/WithAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx","assets/images/avatar.png","locale/en_US.tsx","components/Users/Users.tsx","assets/images/spinner.svg","components/common/Preloader/Preloader.tsx","components/Users/UsersContainer.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPostsForm/MyPostsForm.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/ProfileInfo/Social/Social.tsx","assets/images/profile-image.jpg","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","assets/images/logo.svg","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","App.tsx","index.tsx","components/Profile/MyPosts/MyPosts.module.css","components/Login/Login.module.css","components/Friends/Friends.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/common/FormsControls/FormsControls.module.css","components/Friends/FriendsItem/FriendsItem.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","response","data","userId","post","delete","authAPI","profileAPI","status","put","ADD_POST","SET_USER_PROFILE","SET_STATUS","initialState","posts","id","v1","message","likeCount","profile","setStatus","type","profileReducer","state","action","newPost","newPostText","ADD_MESSAGE","dialogs","name","messages","user","dialogsReducer","newMessageBody","friends","sidebarReducer","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","toggleIsFetching","toggleFollowingInProgress","usersReducer","map","u","userID","followed","filter","SET_USER_DATA","email","login","isAuth","authReducer","reducers","combineReducers","profilePage","dialogsPage","siteBar","usersPage","auth","form","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","News","className","s","news","Music","music","Settings","settings","FriendsItem","props","item","circle","Friends","friendsElements","wrapper","title","friendsList","SiteBarContainer","connect","Navbar","nav","to","activeClassName","activeLink","active","DialogItem","path","dialogItem","link","width","height","src","alt","Message","user1","user2","requiredField","value","maxLengthCreator","maxLength","length","FormControl","input","meta","hasError","touched","error","styles","formControl","children","Textarea","restProps","Input","text","maxLength100","AddMessageFormRedux","reduxForm","onSubmit","handleSubmit","messenger","Field","component","placeholder","validate","submitWrapper","Dialogs","dialogsElements","d","messagesElements","m","dialogsItems","listReset","values","sendMessage","mapStateToPropsForRedirect","compose","dispatch","addMessageActionCreator","Component","localeInfo","items_per_page","jump_to","jump_to_confirm","page","prev_page","next_page","prev_5","next_5","prev_3","next_3","Users","showTitle","current","onChange","e","onPageChanged","defaultCurrent","defaultPageSize","total","locale","leftContent","avatarBG","avatar","photos","small","avatarDefaultPhoto","buttons","unfollow","follow","disabled","some","onClick","rightContent","innerLeft","innerRight","country","city","Preloader","preloader","UsersContainer","this","getUsers","pageNumber","setCurrentPage","bind","React","resultCode","totalCount","items","Post","like","maxLengthCreator10","AddPostFormRedux","wrapperContent","wrapperButton","MyPosts","postsElements","p","wrapperMessenger","addPost","MyPostsContainer","Social","social","facebook","AiOutlineFacebook","vk","FaVk","twitter","FaTwitter","instagram","FaInstagram","youtube","FaYoutubeSquare","github","FaGithub","ProfileStatus","editMode","activateEditMode","setState","deactivateEditMode","updateStatus","onStatusChange","currentTarget","prevProps","prevState","console","log","onDoubleClick","onBlur","autoFocus","ProfileInfo","isEmptySocial","contacts","mainLink","website","preview","bgImage","person","photo","large","PhotoDefault","description","fullName","aboutMe","lookingForAJob","work","MdWork","lookingForAJobDescription","Profile","ProfileContainer","match","params","getUserProfile","getStatus","withRouter","Header","header","logo","loginBlock","HeaderContainer","getAuthUserData","setAuthUserData","LoginReduxForm","formGroup","formGroup_checkbox","checkboxText","Login","formData","App","exact","render","DialogsContainer","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a310d651.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Navbar_wrapper__3oknN\",\"nav\":\"Navbar_nav__3j_MG\",\"item\":\"Navbar_item__1OyJD\",\"activeLink\":\"Navbar_activeLink__2Ubgr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__3q4B5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__14jij\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__1Twb_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"siteBar\":\"SiteBar_siteBar__UVcXu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1U4Qr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"social\":\"Social_social__A0wT0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__ygJzY\",\"leftContent\":\"Users_leftContent__3imbX\",\"buttons\":\"Users_buttons__1TWgR\",\"unfollow\":\"Users_unfollow__3FA7I\",\"follow\":\"Users_follow__2fcw9\",\"avatarBG\":\"Users_avatarBG__1o7T-\",\"avatar\":\"Users_avatar__1n4J8\",\"user\":\"Users_user__3zAP9\",\"rightContent\":\"Users_rightContent__1TefX\",\"innerLeft\":\"Users_innerLeft__38_DD\",\"innerRight\":\"Users_innerRight__1zpr6\",\"name\":\"Users_name__29eea\",\"status\":\"Users_status__3wQOm\",\"city\":\"Users_city__2e9I0\",\"country\":\"Users_country__35-4c\",\"page\":\"Users_page__Pgi1K\",\"current\":\"Users_current__2iicU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ProfileInfo_wrapper__2TN9j\",\"person\":\"ProfileInfo_person__2W0sc\",\"status\":\"ProfileInfo_status__3wAsk\",\"preview\":\"ProfileInfo_preview__2NOY3\",\"description\":\"ProfileInfo_description__MfRma\",\"work\":\"ProfileInfo_work__KuhDm\",\"photo\":\"ProfileInfo_photo__16Miy\",\"name\":\"ProfileInfo_name__3ORPZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__9d_03\",\"listReset\":\"Dialogs_listReset__2DZjo\",\"dialogsItems\":\"Dialogs_dialogsItems__3xfpV\",\"active\":\"Dialogs_active__R-dH6\",\"messages\":\"Dialogs_messages__32clz\",\"messenger\":\"Dialogs_messenger__3HgeR\",\"submitWrapper\":\"Dialogs_submitWrapper__3N8VE\"};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import axios from \"axios\";\r\n\r\nconst baseURL = 'https://social-network.samuraijs.com/api/1.0/';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL,\r\n    headers: {\r\n        \"API-KEY\": \"e12dcb15-1200-4ce1-bb28-bb99ac0ccb98\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number = 1, pageSize: number = 5) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n\r\n    follow(userId: string) {\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => response.data);\r\n    },\r\n\r\n    unfollow(userId: string) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(response => response.data);\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    get() {\r\n        return instance.get('auth/me').then(response => response.data);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    get(userId: string) {\r\n        return instance.get(`profile/${userId}`).then(response => response.data);\r\n    },\r\n\r\n    getStatus(userId: string) {\r\n        return instance.get(`profile/status/${userId}`).then(response => response.data);\r\n    },\r\n\r\n    updateStatus(status: string) {\r\n        return instance.put('profile/status', {status}).then(response => response.data);\r\n    },\r\n}\r\n\r\n","import {v1} from \"uuid\";\r\nimport {profileAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\r\nconst SET_USER_PROFILE = \"SET-USER-PROFILE\";\r\nconst SET_STATUS = \"SET-STATUS\";\r\n\r\nexport type ActionsProfileType = AddPostType | UpdatePostType | SetUsersType |  SetStatusType;\r\n\r\ntype AddPostType = {\r\n    type: typeof ADD_POST\r\n    newPostText: string\r\n}\r\n\r\ntype UpdatePostType = {\r\n    type: typeof UPDATE_NEW_POST_TEXT\r\n    newPostText: string\r\n}\r\n\r\ntype SetUsersType = {\r\n    type: typeof SET_USER_PROFILE\r\n    profile: ProfileType\r\n}\r\n\r\ntype SetStatusType = {\r\n    type: typeof SET_STATUS\r\n    status: string\r\n}\r\n\r\ntype ContactsType = {\r\n    github: string\r\n    vk: string\r\n    facebook: string\r\n    instagram: string\r\n    twitter: string\r\n    website: string\r\n    youtube: string\r\n    mainLink: string\r\n}\r\n\r\ntype PhotosType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\n\r\nexport type ProfileType = {\r\n    \"aboutMe\": string\r\n    \"contacts\": ContactsType\r\n    \"lookingForAJob\": boolean\r\n    \"lookingForAJobDescription\": string\r\n    \"fullName\": string\r\n    \"userId\": number\r\n    \"photos\": PhotosType\r\n}\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: v1(), message: 'Hi, how are you?', likeCount: 3},\r\n        {id: v1(), message: 'How is your it-camasutra?', likeCount: 13},\r\n    ],\r\n\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n};\r\n\r\nexport type ProfilePageType = typeof initialState\r\n\r\nconst profileReducer = (state: ProfilePageType = initialState, action: ActionsProfileType): ProfilePageType => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: v1(),\r\n                message: action.newPostText,\r\n                likeCount: 0\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                posts: [newPost, ...state.posts],\r\n            };\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n\r\n        case SET_STATUS: {\r\n\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (newPostText: string): AddPostType => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (profile: ProfileType): SetUsersType => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status: string): SetStatusType => ({type: SET_STATUS, status});\r\nexport const getUserProfile = (userID: string) => (dispatch: Dispatch<ActionsProfileType>) => {\r\n    profileAPI.get(userID).then(data => dispatch(setUserProfile(data)))\r\n}\r\nexport const getStatus = (userID: string) => (dispatch: Dispatch<ActionsProfileType>) => {\r\n    profileAPI.getStatus(userID).then(data => dispatch(setStatus(data)));\r\n}\r\nexport const updateStatus = (status: string) => (dispatch: Dispatch<ActionsProfileType>) => {\r\n    profileAPI.updateStatus(status).then(data => {\r\n        if(data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    });\r\n}\r\n\r\nexport default profileReducer;","import {v1} from \"uuid\";\r\n\r\nconst ADD_MESSAGE = \"ADD-MESSAGE\";\r\n\r\nexport type ActionsDialogsType = ActionAddMessageType;\r\n\r\n\r\ntype ActionAddMessageType = {\r\n    type: typeof ADD_MESSAGE\r\n    newMessageBody: string\r\n}\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: v1(), name: 'Dimych'},\r\n        {id: v1(), name: 'Andrey'},\r\n        {id: v1(), name: 'Sveta'},\r\n        {id: v1(), name: 'Sasha'},\r\n        {id: v1(), name: 'Viktor'},\r\n        {id: v1(), name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: v1(), message: 'Hi!', user: 1},\r\n        {id: v1(), message: 'Hi!', user: 2},\r\n        {id: v1(), message: 'How is your it-camasutra?', user: 2},\r\n        {id: v1(), message: 'Perfectly', user: 1},\r\n        {id: v1(), message: 'It\\'s amazing', user: 2},\r\n        {id: v1(), message: 'Thanks', user: 1}\r\n    ],\r\n};\r\n\r\nexport type DialogsPageType = typeof initialState\r\n\r\nconst dialogsReducer = (state : DialogsPageType = initialState, action: ActionsDialogsType): DialogsPageType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {\r\n                    id: v1(),\r\n                    message: action.newMessageBody,\r\n                    user: 2\r\n                }],\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addMessageActionCreator = (newMessageBody: string): ActionAddMessageType => ({type: ADD_MESSAGE, newMessageBody});\r\n\r\nexport default dialogsReducer;","import {v1} from \"uuid\";\r\n\r\n\r\nlet initialState = {\r\n    friends: [\r\n        {id: v1(), name: 'Andrew'},\r\n        {id: v1(), name: 'Sasha'},\r\n        {id: v1(), name: 'Sveta'},\r\n    ]\r\n};\r\n\r\nexport type SiteBarType = typeof initialState\r\n\r\n\r\nconst sidebarReducer = (state: SiteBarType = initialState, action: {}): SiteBarType => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer","import {usersAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst FOLLOW = \"users/FOLLOW\";\r\nconst UNFOLLOW = \"users/UNFOLLOW\";\r\nconst SET_USERS = \"users/SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"users/SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"users/SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"users/TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"users/TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\n\r\ntype ActionFollowType = {\r\n    type: typeof FOLLOW\r\n    userID: string\r\n}\r\n\r\n\r\ntype ActionUnfollowType = {\r\n    type: typeof UNFOLLOW\r\n    userID: string\r\n}\r\n\r\ntype ActionSetUsersType = {\r\n    type: typeof SET_USERS\r\n    users: UserType[]\r\n}\r\n\r\ntype ActionSetCurrentPageType = {\r\n    type: typeof SET_CURRENT_PAGE\r\n    currentPage: number\r\n}\r\n\r\ntype ActionSetTotalUsersCountType = {\r\n    type: typeof SET_TOTAL_USERS_COUNT\r\n    totalUsersCount: number\r\n}\r\n\r\ntype ActionToggleIsFetchingType = {\r\n    type: typeof TOGGLE_IS_FETCHING\r\n    isFetching: boolean\r\n}\r\n\r\ntype ActionToggleIsFollowingProgressType = {\r\n    type: typeof TOGGLE_IS_FOLLOWING_PROGRESS\r\n    isFetching: boolean\r\n    userId: string\r\n}\r\n\r\ntype ActionsUsersType =\r\n    ActionFollowType\r\n    | ActionUnfollowType\r\n    | ActionSetUsersType\r\n    | ActionSetCurrentPageType\r\n    | ActionSetTotalUsersCountType\r\n    | ActionToggleIsFetchingType\r\n    | ActionToggleIsFollowingProgressType;\r\n\r\ntype LocationType = {\r\n    city: string\r\n    country: string\r\n}\r\n\r\nexport type UserType = {\r\n    id: string\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n    name: string\r\n    status: string\r\n    followed: boolean\r\n    location: LocationType\r\n}\r\n\r\nlet initialState = {\r\n    users: [] as UserType[],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as string[]\r\n}\r\n\r\nexport type UsersPageType = typeof initialState\r\n\r\nconst usersReducer = (state: UsersPageType = initialState, action: ActionsUsersType): UsersPageType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users\r\n                    .map(u => (u.id === action.userID)\r\n                        ? {...u, followed: true} : u)\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users\r\n                    .map(u => (u.id === action.userID)\r\n                        ? {...u, followed: false} : u)\r\n            }\r\n\r\n        case SET_USERS:\r\n            return {\r\n                ...state, users: action.users\r\n            }\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state, totalUsersCount: action.totalUsersCount\r\n            }\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state, followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userID: string): ActionFollowType => ({type: FOLLOW, userID});\r\nexport const unfollowSuccess = (userID: string): ActionUnfollowType => ({type: UNFOLLOW, userID});\r\nexport const setUsers = (users: UserType[]): ActionSetUsersType => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage: number): ActionSetCurrentPageType => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalCount: number): ActionSetTotalUsersCountType => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount: totalCount});\r\nexport const toggleIsFetching = (isFetching: boolean): ActionToggleIsFetchingType => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingInProgress = (isFetching: boolean, userId: string): ActionToggleIsFollowingProgressType => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\n\r\n// ThunkCreators\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number) => {\r\n\r\n    return (dispatch: Dispatch<ActionsUsersType>) => {\r\n        dispatch(toggleIsFetching(true));\r\n\r\n        usersAPI.getUsers(currentPage, pageSize)\r\n            .then((data) => {\r\n                dispatch(toggleIsFetching(false));\r\n                dispatch(setUsers(data.items));\r\n                dispatch(setTotalUsersCount(data.totalCount));\r\n            });\r\n    }\r\n}\r\n\r\nexport const follow = (userId: string) => {\r\n    return (dispatch: Dispatch<ActionsUsersType>) => {\r\n        dispatch(toggleFollowingInProgress(true, userId));\r\n        usersAPI.follow(userId)\r\n            .then((data) => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(followSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingInProgress(false, userId));\r\n            });\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId: string) => {\r\n    return (dispatch: Dispatch<ActionsUsersType>) => {\r\n        dispatch(toggleFollowingInProgress(true, userId));\r\n        usersAPI.unfollow(userId).then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(unfollowSuccess(userId));\r\n            }\r\n            dispatch(toggleFollowingInProgress(false, userId));\r\n        });\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import { authAPI } from \"../api/api\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nconst SET_USER_DATA = \"users/SET-USER-DATA\";\r\n\r\ntype ActionSetUserDataType = {\r\n    type: typeof SET_USER_DATA\r\n    data: {\r\n        id: string | null\r\n        email: string | null\r\n        login: string | null\r\n    }\r\n\r\n}\r\n\r\nexport type AuthStateType = {\r\n    id: string | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\n\r\n\r\nlet initialState: AuthStateType = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n    // isFetching: false\r\n};\r\n\r\n\r\nconst authReducer = (state: AuthStateType = initialState, action: ActionSetUserDataType): AuthStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {...state, ...action.data, isAuth: true}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (id: string, email: string, login: string) => ({\r\n    type: SET_USER_DATA,\r\n    data: {\r\n        id, email, login\r\n    }\r\n} as const);\r\n\r\n\r\nexport const getAuthUserData = () => (dispatch: Dispatch<ActionSetUserDataType>) => {\r\n    authAPI.get().then(response => {\r\n        if (response.resultCode === 0) {\r\n            let {id, login, email} = response.data;\r\n            dispatch(setAuthUserData(id, email, login));\r\n        }\r\n    });\r\n};\r\n\r\n\r\nexport default authReducer;","import {combineReducers, createStore, applyMiddleware} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    siteBar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n});\r\n\r\nexport type StateType = ReturnType<typeof reducers>\r\n\r\n\r\n\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\n// @ts-ignore\r\nwindow.store = store\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div className={s.news}>\r\n            <h1>News</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;\r\n","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div className={s.music}>\r\n            <h1>Music</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;\r\n","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div className={s.settings}>\r\n            <h1>Settings</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\nimport s from './FriendsItem.module.css';\r\n\r\nexport type FriendType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nconst FriendsItem: React.FC<FriendType> = (props) => {\r\n\r\n\r\n    return (\r\n        <li className={s.item}>\r\n            <div className={s.circle}></div>\r\n            {props.name}\r\n        </li>\r\n    )\r\n};\r\n\r\nexport {FriendsItem};","import React from 'react';\r\nimport s from './Friends.module.css';\r\nimport {FriendsItem} from \"./FriendsItem/FriendsItem\";\r\nimport {SiteBarType} from \"../../redux/sidebar-reducer\";\r\n\r\nconst Friends: React.FC<SiteBarType> = (props) => {\r\n    const friendsElements = props.friends.map(item => <FriendsItem key={item.id} id={item.id} name={item.name}/>)\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <h2 className={s.title}>Friends</h2>\r\n\r\n            <ul className={s.friendsList}>\r\n                {friendsElements}\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport {Friends};","import {SiteBar} from \"./SiteBar\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\nimport {FriendType} from \"../Friends/FriendsItem/FriendsItem\";\r\n\r\ntype MapStateToPropsType = {\r\n    friends: FriendType[]\r\n}\r\n\r\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\r\n    return {\r\n        friends: state.siteBar.friends\r\n    };\r\n};\r\n\r\n\r\nconst SiteBarContainer = connect(mapStateToProps, {})(SiteBar);\r\n\r\n\r\nexport default SiteBarContainer;\r\n","import React from 'react';\r\nimport s from './SiteBar.module.css';\r\nimport {Friends} from \"../Friends/Friends\";\r\nimport {FriendType} from \"../Friends/FriendsItem/FriendsItem\";\r\n\r\n\r\ntype PropsType = {\r\n    friends: FriendType[]\r\n}\r\nconst SiteBar: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div className={s.siteBar}>\r\n            <Friends friends={props.friends}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport {SiteBar};","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport SiteBarContainer from \"../SiteBar/SiteBarContainer\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <nav className={s.nav}>\r\n                <div className={s.item}>\r\n                    <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n                </div>\r\n\r\n                <div className={`${s.item} ${s.active}`}>\r\n                    <NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to='/login' activeClassName={s.activeLink}>Login</NavLink>\r\n                </div>\r\n            </nav>\r\n\r\n            <SiteBarContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './DialogItem.module.css';\r\n\r\nexport type DialogItemType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nconst DialogItem: React.FC<DialogItemType> = (props) => {\r\n\r\n    const path = `/dialogs/${props.id}`;\r\n\r\n    return (\r\n        <li className={s.dialogItem}>\r\n            <NavLink className={s.link} activeClassName={s.active} to={path}>\r\n                <img width=\"30px\" height=\"30px\"\r\n                     src=\"https://cva.ukzn.ac.za/wp-content/uploads/2019/07/profile-placeholder.png\"\r\n                     alt=\"avatar\"/>\r\n                {props.name}\r\n            </NavLink>\r\n        </li>\r\n    )\r\n};\r\n\r\n\r\nexport\r\n{\r\n    DialogItem\r\n}\r\n    ;\r\n","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\nexport type MessageType = {\r\n    id: string\r\n    message: string | undefined\r\n    user: number\r\n}\r\n\r\nconst Message: React.FC<MessageType> = (props) => {\r\n    let user = props.user === 1 ? s.user1 : s.user2;\r\n\r\n    return (\r\n        <li className={s.message + ' ' + user}>{props.message}</li>\r\n    )\r\n};\r\n\r\nexport {Message};\r\n","export const requiredField = (value: string) => {\r\n    if(value) return undefined;\r\n    return  \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n    if(value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return  undefined;\r\n}","import React from 'react';\r\nimport styles from './FormsControls.module.css';\r\nimport { WrappedFieldProps } from \"redux-form\";\r\n\r\nexport const FormControl: React.FC<WrappedFieldProps> = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={hasError ? `${styles.formControl} ${styles.error}` : styles.formControl}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Textarea = (props: WrappedFieldProps) => {\r\n    const {input, meta, ...restProps} = props;\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...input} {...restProps} />\r\n            <span>{hasError && meta.error}</span>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\ntype OwnPropsType = {\r\n    text: string\r\n}\r\n\r\nexport const Input = (props: WrappedFieldProps & OwnPropsType) => {\r\n    const {input, meta, ...restProps} = props;\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <FormControl {...props}>\r\n            <label>\r\n                <span>{props.text}</span>\r\n                <br />\r\n                <input {...input} {...restProps} />\r\n                <br />\r\n                <span>{hasError && meta.error}</span>\r\n            </label>\r\n        </FormControl>\r\n    )\r\n}\r\n","import { Field, InjectedFormProps, reduxForm } from \"redux-form\";\r\nimport React from \"react\";\r\nimport s from \"../Dialogs.module.css\";\r\nimport { maxLengthCreator, requiredField } from \"../../../utils/validators/validator\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nexport type FormDataType = {\r\n    newMessageBody: string\r\n}\r\n\r\nconst maxLength100 = maxLengthCreator(50)\r\nexport const AddMessageForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.messenger}>\r\n            <Field component={Textarea}\r\n                   placeholder={\"...Enter your message\"}\r\n                   name={\"newMessageBody\"}\r\n                   validate={[requiredField, maxLength100]}\r\n            />\r\n\r\n            <div className={s.submitWrapper}>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\nexport const AddMessageFormRedux = reduxForm<FormDataType>({form: \"dialogAddMessageForm\"})(AddMessageForm);","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport { DialogItem } from \"./DialogItem/DialogItem\";\r\nimport { Message } from \"./Message/Message\";\r\nimport { DialogsType } from \"./DialogsContainer\";\r\nimport { AddMessageFormRedux } from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs: React.FC<DialogsType> = (props) => {\r\n    const dialogsPage = props.dialogsPage;\r\n\r\n    const dialogsElements = dialogsPage.dialogs.map(d => <DialogItem key={d.id} id={d.id} name={d.name} />);\r\n    const messagesElements = dialogsPage.messages.map(m => <Message key={m.id} id={m.id} user={m.user}\r\n                                                                    message={m.message} />);\r\n\r\n    let addNewMessage = (values: { newMessageBody: string }) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={s.dialogs}>\r\n                <ul className={s.dialogsItems + ' ' + s.listReset}>\r\n                    {dialogsElements}\r\n                </ul>\r\n\r\n                <ul className={s.messages + ' ' + s.listReset}>\r\n                    {messagesElements}\r\n                </ul>\r\n            </div>\r\n\r\n            <AddMessageFormRedux onSubmit={addNewMessage} />\r\n        </>\r\n    )\r\n};\r\n\r\n\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\n\r\nlet mapStateToPropsForRedirect = (state: StateType) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\ntype mapStateToPropsForRedirectType = ReturnType<typeof mapStateToPropsForRedirect>;\r\n\r\nexport function withAuthRedirect<T>(Component: React.ComponentType<T>) {\r\n\r\n    function RedirectComponent(props: mapStateToPropsForRedirectType) {\r\n        const {isAuth, ...restProps} = props\r\n\r\n        if (!isAuth) return <Redirect to={\"/login\"}/>\r\n\r\n        return <Component {...restProps as T} />\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}","import { addMessageActionCreator, DialogsPageType } from \"../../redux/dialogs-reducer\";\r\nimport { StateType } from \"../../redux/redux-store\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose, Dispatch } from \"redux\";\r\nimport { withAuthRedirect } from \"../hoc/WithAuthRedirect\";\r\nimport React from \"react\";\r\n\r\ntype MapStateToPropsType = {\r\n    dialogsPage: DialogsPageType\r\n    isAuth: boolean\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    // updateNewMessageText: (text: string) => void\r\n    sendMessage: (newMessageBody: string) => void\r\n}\r\n\r\nexport type DialogsType = MapStateToPropsType & mapDispatchToPropsType;\r\n\r\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n    return {\r\n        // updateNewMessageText : (text: string) => {\r\n        //     dispatch(updateNewMessageTextCreator(text));\r\n        // },\r\n        sendMessage : (newMessageBody) => {\r\n            dispatch(addMessageActionCreator(newMessageBody))\r\n        },\r\n    };\r\n};\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect)(Dialogs)\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/avatar.2479805a.png\";","type localeInfoType = {\r\n    // Options.jsx\r\n    items_per_page: string\r\n    jump_to: string\r\n    jump_to_confirm: string\r\n    page: string\r\n\r\n    // Pagination.jsx\r\n    prev_page: string\r\n    next_page: string\r\n    prev_5: string\r\n    next_5: string\r\n    prev_3: string\r\n    next_3: string\r\n}\r\n\r\n\r\nconst localeInfo: localeInfoType = {\r\n    // Options.jsx\r\n    items_per_page: '/ page',\r\n    jump_to: 'Go to',\r\n    jump_to_confirm: 'confirm',\r\n    page: '',\r\n\r\n    // Pagination.jsx\r\n    prev_page: 'Previous Page',\r\n    next_page: 'Next Page',\r\n    prev_5: 'Previous 5 Pages',\r\n    next_5: 'Next 5 Pages',\r\n    prev_3: 'Previous 3 Pages',\r\n    next_3: 'Next 3 Pages',\r\n};\r\n\r\n\r\nexport default localeInfo;","import React from 'react';\r\nimport s from './Users.module.css'\r\nimport avatarDefaultPhoto from \"../../assets/images/avatar.png\";\r\nimport Pagination from 'rc-pagination';\r\nimport localeInfo from '../../locale/en_US'; // need to create in src folder\r\nimport { NavLink } from 'react-router-dom';\r\nimport {UserType} from \"../../redux/users-reducer\";\r\n\r\ntype PropsType = {\r\n    follow: (userID: string) => void\r\n    unfollow: (userID: string) => void\r\n    users: UserType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    followingInProgress: string[]\r\n}\r\n\r\nconst Users = (props: PropsType) => {\r\n    // let pageCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    // let pages = [];\r\n    // for (let i = 1; i <= pageCount; i++) {\r\n    //     pages.push(i);\r\n    // }\r\n\r\n    return (\r\n        <div className={s.users}>\r\n            <div className=\"pagination\">\r\n\r\n                {/*{pages.map((p, index) =>*/}\r\n                {/*    <span*/}\r\n                {/*        key={index}*/}\r\n                {/*        className={(props.currentPage === p) ? `${s.current} ${s.page}` : s.page}*/}\r\n                {/*        onClick={() => {props.onPageChanged(p)}}*/}\r\n                {/*    >*/}\r\n                {/*            {p}*/}\r\n                {/*        </span>)}*/}\r\n\r\n                {/* plugin rc-pagination */}\r\n                <Pagination\r\n                    showTitle={true}\r\n                    current={props.currentPage}\r\n                    className=\"ant-pagination\"\r\n                    onChange={(e) => {\r\n                        props.onPageChanged(e)\r\n                    }}\r\n                    defaultCurrent={props.currentPage}\r\n                    defaultPageSize={props.pageSize}\r\n                    total={props.totalUsersCount}\r\n                    locale={localeInfo}\r\n                />\r\n\r\n            </div>\r\n            {\r\n                props.users.map(u => {\r\n                    return (\r\n                        <div className={s.user} key={u.id}>\r\n                            <div className={s.leftContent}>\r\n                                <div className={s.avatarBG}>\r\n                                    <NavLink to={`./profile/${u.id}`}>\r\n                                        <img className={s.avatar}\r\n                                             src={u.photos.small !== null ? u.photos.small : avatarDefaultPhoto}\r\n                                             alt=\"avatar\"/>\r\n                                    </NavLink>\r\n                                </div>\r\n                                <div className={s.buttons}>\r\n                                    {\r\n                                        u.followed\r\n                                            ?\r\n                                            <button className={u.followed ? s.unfollow : s.follow}\r\n                                                    disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                                    onClick={() => {props.unfollow(u.id)}}\r\n                                            >Unfollow</button>\r\n                                            :\r\n                                            <button className={u.followed ? s.unfollow : s.follow}\r\n                                                    disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                                    onClick={() => {props.follow(u.id)}}\r\n                                            >Follow</button>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className={s.rightContent}>\r\n                                <div className={s.innerLeft}>\r\n                                    <div className={s.name}>{u.name}</div>\r\n                                    <div className={s.status}>{u.status}</div>\r\n                                </div>\r\n                                <div className={s.innerRight}>\r\n                                    <div className={s.country}>{'u.location.country'}</div>\r\n                                    <div className={s.city}>{'u.location.city'}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Users;","export default __webpack_public_path__ + \"static/media/spinner.6f870003.svg\";","import React from 'react';\r\nimport preloader from \"../../../assets/images/spinner.svg\";\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className=\"preloader\">\r\n            <img src={preloader} alt=\"preloader\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","import {connect} from \"react-redux\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\nimport {\r\n    follow,\r\n    getUsers,\r\n    setCurrentPage,\r\n    toggleFollowingInProgress,\r\n    unfollow,\r\n    UserType\r\n} from \"../../redux/users-reducer\";\r\n\r\nimport React from \"react\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\n\r\ntype UsersContainerPropsType = MapStateToPropsType & MapDispatchToProps\r\n\r\n\r\nclass UsersContainer extends React.Component<UsersContainerPropsType> {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged(pageNumber: number) {\r\n        this.props.setCurrentPage(pageNumber)\r\n\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> :\r\n                <Users\r\n                    users={this.props.users}\r\n                    follow={this.props.follow}\r\n                    unfollow={this.props.unfollow}\r\n                    pageSize={this.props.pageSize}\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged.bind(this)}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                    // toggleFollowingInProgress={this.props.toggleFollowingInProgress}\r\n\r\n                />}\r\n        </>\r\n    }\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n    users: UserType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: string[]\r\n}\r\n\r\ntype MapDispatchToProps = {\r\n    follow: (userID: string) => void\r\n    unfollow: (userID: string) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    toggleFollowingInProgress: (isFetching: boolean, userId: string) => void\r\n}\r\n\r\nconst mapStateToProps = (state: StateType) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n//     return {\r\n//         follow: (userID: string) => {\r\n//             dispatch(followAC(userID))\r\n//         },\r\n//\r\n//         unfollow: (userID: string) => {\r\n//             dispatch(unfollowAC(userID))\r\n//         },\r\n//\r\n//         setUsers: (users: UserType[]) => {\r\n//             dispatch(setUsersAC(users))\r\n//         },\r\n//\r\n//         setCurrentPage: (pageNumber: number) => {\r\n//             dispatch(setCurrentPageAC(pageNumber))\r\n//         },\r\n//\r\n//         setTotalUsersCount: (totalCount: number) => {\r\n//             dispatch(setTotalUsersCountAC(totalCount))\r\n//         },\r\n//\r\n//         toggleIsFetching: (isFetching: boolean) => {\r\n//             dispatch(setToggleFetchingAC(isFetching))\r\n//         },\r\n//     }\r\n// }\r\n\r\n\r\n//  connect<MapStateToPropsType, MapDispatchToProps, {}, StateType>(\r\n//     mapStateToProps, {follow, unfollow, setCurrentPage, getUsers, toggleFollowingInProgress}\r\n// )(UsersContainer);\r\n\r\nexport default compose<React.ComponentType>(\r\n    // withAuthRedirect,\r\n    connect<MapStateToPropsType, MapDispatchToProps, {}, StateType>(\r\n        mapStateToProps, {follow, unfollow, setCurrentPage, getUsers, toggleFollowingInProgress})\r\n)(UsersContainer);","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nexport type PostType = {\r\n    id: string\r\n    message: string | undefined\r\n    likeCount: number\r\n}\r\n\r\nconst Post: React.FC<PostType> = (props) => {\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://cva.ukzn.ac.za/wp-content/uploads/2019/07/profile-placeholder.png' alt={'avatar'}/>\r\n            <p>{props.message}</p>\r\n            <div>\r\n                <span className={s.like}>&#x2665;</span> {props.likeCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Field, InjectedFormProps, reduxForm } from \"redux-form\";\r\nimport s from \"../MyPosts.module.css\";\r\nimport { maxLengthCreator, requiredField } from \"../../../../utils/validators/validator\";\r\nimport { Textarea } from \"../../../common/FormsControls/FormsControls\";\r\n\r\nexport type PostFormDataType = {\r\n    newPostText: string\r\n}\r\nconst maxLengthCreator10 = maxLengthCreator(10);\r\n\r\nexport const MyPostsForm: React.FC<InjectedFormProps<PostFormDataType>> = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.wrapperContent}>\r\n            <Field component={Textarea}\r\n                   placeholder={\"...Enter your message\"}\r\n                   name={\"newPostText\"}\r\n                   validate={[requiredField, maxLengthCreator10]}\r\n            />\r\n\r\n            <div className={s.wrapperButton}>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport const AddPostFormRedux = reduxForm<PostFormDataType>({form: \"PostForm\"})(MyPostsForm)","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post, { PostType } from './Post/Post';\r\nimport { AddPostFormRedux } from \"./MyPostsForm/MyPostsForm\";\r\n\r\ntype MyPostsPropsType = {\r\n    addPost: (newPostText: string) => void\r\n    posts: PostType[]\r\n}\r\n\r\nconst MyPosts: React.FC<MyPostsPropsType> = (props) => {\r\n    const postsElements = props.posts.map(p => <Post key={p.id} id={p.id} message={p.message}\r\n                                                     likeCount={p.likeCount} />)\r\n\r\n\r\n    let addPostText = (values: { newPostText: string }) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.wrapperMessenger}>\r\n                <h3>My posts</h3>\r\n\r\n                <AddPostFormRedux onSubmit={addPostText} />\r\n            </div>\r\n\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MyPosts;\r\n","import { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { StateType } from \"../../../redux/redux-store\";\r\nimport { connect } from \"react-redux\";\r\nimport { PostType } from \"./Post/Post\";\r\nimport { Dispatch } from \"redux\";\r\n\r\ntype MapStateToPropsType = {\r\n    posts: PostType[]\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    addPost: (text: string) => void\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n    return {\r\n        addPost : (text: string) => {\r\n            dispatch(addPostActionCreator(text));\r\n        },\r\n    };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n\r\n","import React from 'react';\r\nimport {AiOutlineFacebook} from \"@react-icons/all-files/ai/AiOutlineFacebook\";\r\nimport {FaVk} from \"@react-icons/all-files/fa/FaVk\";\r\nimport {FaTwitter} from \"@react-icons/all-files/fa/FaTwitter\";\r\nimport {FaInstagram} from \"@react-icons/all-files/fa/FaInstagram\";\r\nimport {FaYoutubeSquare} from \"@react-icons/all-files/fa/FaYoutubeSquare\";\r\nimport {FaGithub} from \"@react-icons/all-files/fa/FaGithub\";\r\nimport s from './Social.module.css'\r\n\r\ntype PropsType = {\r\n    facebook: string\r\n    vk: string\r\n    twitter: string\r\n    instagram: string\r\n    youtube: string\r\n    github: string\r\n}\r\n\r\nconst Social = (props: PropsType) => {\r\n\r\n    return (\r\n        <ul className={s.social}>\r\n            {props.facebook ? <li><AiOutlineFacebook/>{props.facebook}</li> : null}\r\n            {props.vk ? <li><FaVk/>{props.vk}</li> : null}\r\n            {props.twitter ? <li><FaTwitter/>{props.twitter}</li> : null}\r\n            {props.instagram ? <li><FaInstagram/>{props.instagram}</li> : null}\r\n            {props.youtube ? <li><FaYoutubeSquare/>{props.youtube}</li> : null}\r\n            {props.github ? <li><FaGithub/>{props.github}</li> : null}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Social;\r\n","export default __webpack_public_path__ + \"static/media/profile-image.ed4049d6.jpg\";","import React, {ChangeEvent, Component} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\ntype PropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nclass ProfileStatus extends Component<PropsType> {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status,\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true,\r\n        })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false,\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({\r\n            status: e.currentTarget.value,\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<PropsType>, prevState: Readonly<{}>) {\r\n        if(prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status,\r\n            })\r\n        }\r\n        console.log('componentDidUpdate')\r\n    }\r\n\r\n    render() {\r\n        console.log('render')\r\n        return (\r\n            <div className={s.status}>\r\n                {!this.state.editMode &&\r\n                <div onDoubleClick={this.activateEditMode}>\r\n                    <b>status: </b><span>{this.props.status || ' -empty-'}</span>\r\n                </div>\r\n                }\r\n\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input\r\n                        onChange={this.onStatusChange}\r\n                        onBlur={this.deactivateEditMode}\r\n                        autoFocus\r\n                        value={this.state.status}\r\n                    />\r\n                </div>\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport PhotoDefault from \"../../../assets/images/avatar.png\";\r\nimport {MdWork} from \"@react-icons/all-files/md/MdWork\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport Social from \"./Social/Social\";\r\nimport bgImage from \"../../../assets/images/profile-image.jpg\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport {MapPropsType} from \"../ProfileContainer\";\r\n\r\ntype PropsType = MapPropsType & {\r\n    updateStatus: (status: string) => void\r\n};\r\n\r\nconst ProfileInfo = (props: PropsType) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    let isEmptySocial = (!props.profile.contacts.facebook\r\n        && !props.profile.contacts.vk\r\n        && !props.profile.contacts.mainLink\r\n        && !props.profile.contacts.github\r\n        && !props.profile.contacts.twitter\r\n        && !props.profile.contacts.instagram\r\n        && !props.profile.contacts.website)\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.preview}>\r\n                <img src={bgImage} alt={'background'}/>\r\n            </div>\r\n\r\n            <div className={s.wrapper}>\r\n                <div className={s.person}>\r\n                    <img className={s.photo} src={props.profile.photos.large || PhotoDefault} width=\"300\" alt=\"ava\"/>\r\n                    <div className={s.description}>\r\n                        {<h3>About me:</h3>}\r\n                        <b className={s.name}>{props.profile.fullName}</b>\r\n                        <p>{!props.profile.aboutMe ? '- No description -' : props.profile.aboutMe}</p>\r\n                        {isEmptySocial ? null : <h3>Contacts:</h3>}\r\n\r\n                        <Social\r\n                            facebook={props.profile.contacts.facebook}\r\n                            vk={props.profile.contacts.vk}\r\n                            twitter={props.profile.contacts.twitter}\r\n                            instagram={props.profile.contacts.instagram}\r\n                            youtube={props.profile.contacts.youtube}\r\n                            github={props.profile.contacts.github}\r\n                        />\r\n\r\n                        {props.profile.contacts.mainLink ? <p><b>mainLink - </b> {props.profile.contacts.mainLink}</p> : null}\r\n                        {props.profile.contacts.website ? <p><b>website - </b> {props.profile.contacts.website}</p> : null}\r\n                        {props.profile.lookingForAJob ? <p className={s.work}><MdWork/>{props.profile.lookingForAJobDescription}</p> : null}\r\n                    </div>\r\n                </div>\r\n\r\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileStateType} from \"./ProfileContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props: ProfileStateType) => {\r\n    return (\r\n        <div className={s.profile}>\r\n\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nexport type ProfileStateType = MapPropsType & mapDispatchToPropsType\r\n\r\n\r\ntype PathParamsType = {\r\n    userId: string,\r\n}\r\n\r\ntype PropsType = RouteComponentProps<PathParamsType> & ProfileStateType\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n    componentDidMount() {\r\n\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = '18407';\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile\r\n                {...this.props}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    getUserProfile: (userID: string) => void\r\n    getStatus: (userID: string) => void\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nlet mapStateToProps = (state: StateType) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n});\r\n\r\nexport type MapPropsType = ReturnType<typeof mapStateToProps>\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n","export default __webpack_public_path__ + \"static/media/logo.d941bb34.svg\";","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Header.module.css';\r\nimport {HeaderContainerPropsType} from \"./HeaderContainer\";\r\nimport logo from \"../../assets/images/logo.svg\";\r\n\r\n\r\nconst Header = (props: HeaderContainerPropsType) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src={logo} alt={'logo'}/>\r\n            <div className={s.loginBlock}>\r\n                {\r\n                    props.isAuth ?\r\n                        props.login\r\n                        : <NavLink to={'/login'}>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUserData} from \"../../redux/auth-reducer\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\n\r\nexport type HeaderContainerPropsType = mapStateType & mapDispatchType\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerPropsType> {\r\n    componentDidMount() {\r\n        this.props.getAuthUserData();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\ntype mapStateType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\n\r\ntype mapDispatchType = {\r\n    getAuthUserData: () => void\r\n}\r\n\r\nconst mapStateToProps = (state: StateType): mapStateType => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {getAuthUserData})(HeaderContainer);\r\n","import React from 'react';\r\nimport s from './Login.module.css';\r\nimport { Field, InjectedFormProps, reduxForm } from \"redux-form\";\r\nimport { requiredField } from \"../../utils/validators/validator\";\r\nimport { Input } from \"../common/FormsControls/FormsControls\";\r\n\r\ntype FormDataType = {\r\n    checkbox: boolean\r\n    password: string\r\n    name: string\r\n}\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field\r\n                text={'Name'}\r\n                name={'name'}\r\n                component={Input}\r\n                validate={[requiredField]}\r\n            />\r\n\r\n            <Field\r\n                type={'password'}\r\n                text={'Password'}\r\n                name={'password'}\r\n                component={Input}\r\n                validate={[requiredField]}\r\n            />\r\n\r\n            <div className={`${s.formGroup} ${s.formGroup_checkbox}`}>\r\n                <label>\r\n                    <Field name={'checkbox'} component={'input'} type='checkbox' />\r\n                    <span className={s.checkboxText}>remember me</span>\r\n                </label>\r\n            </div>\r\n\r\n            <div className={s.formGroup}>\r\n                <button type=\"submit\">submit</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType>({form: 'Login'})(LoginForm)\r\n\r\nconst Login = () => {\r\n    const onSubmit = (formData: FormDataType) => {\r\n        console.log(formData)\r\n    }\r\n    return (\r\n        <div className={s.login}>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {Redirect, Route} from \"react-router-dom\";\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Setting/Settings\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\n\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <div className='app-wrapper'>\r\n            <HeaderContainer/>\r\n            <Navbar />\r\n\r\n            <div className=\"app-wrapper-content\">\r\n                <Route path={'/'} exact render={() => <Redirect to={'/profile'}/>}/>\r\n                <Route path={'/dialogs'} component={DialogsContainer} render={() => <DialogsContainer />}\r\n                />\r\n                <Route path={'/profile/:userId?'} component={ProfileContainer} render={() => <ProfileContainer/>}/>\r\n                <Route path={'/news'} component={News} render={() => <News/>}/>\r\n                <Route path={'/music'} component={Music} render={() => <Music/>}/>\r\n                <Route path={'/settings'} component={Settings} render={() => <Settings/>}/>\r\n                <Route path={'/users'} component={UsersContainer} render={() => <UsersContainer/>}/>\r\n                <Route path={'/login'} component={Login} render={() => <Login/>}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './redux/redux-store';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App/>\r\n            </HashRouter>\r\n        </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MyPosts_wrapper__3pZ18\",\"wrapperMessenger\":\"MyPosts_wrapperMessenger__2cJyv\",\"wrapperContent\":\"MyPosts_wrapperContent__3L0-j\",\"wrapperButton\":\"MyPosts_wrapperButton__1QS50\",\"posts\":\"MyPosts_posts__3GeRT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__20SqU\",\"formGroup\":\"Login_formGroup__3GsaD\",\"formGroup_checkbox\":\"Login_formGroup_checkbox__2OoCz\",\"errorInput\":\"Login_errorInput__14XaB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Friends_wrapper__1ATQ7\",\"title\":\"Friends_title__18mMj\",\"friendsList\":\"Friends_friendsList__200-J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"DialogItem_dialogItem__3VzTr\",\"link\":\"DialogItem_link__2xWDI\",\"active\":\"DialogItem_active__bUNsx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1TnnS\",\"user1\":\"Message_user1__S8wZx\",\"user2\":\"Message_user2__2h3_T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl___Itib\",\"error\":\"FormsControls_error__13d8D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendsItem_item__2fAi-\",\"circle\":\"FriendsItem_circle__1Hy3A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2ZpOe\",\"like\":\"Post_like__29_NC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1tXis\",\"loginBlock\":\"Header_loginBlock__Xhj6l\"};"],"sourceRoot":""}