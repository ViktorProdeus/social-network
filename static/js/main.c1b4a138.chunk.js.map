{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Friends/Friends.module.css","components/Friends/FriendsItem/FriendsItem.module.css","components/Header/Header.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.module.css","components/News/News.module.css","components/Music/Music.module.css","components/Setting/Settings.module.css","components/SiteBar/SiteBar.module.css","reportWebVitals.ts","redux/profile-reducer.ts","redux/dialogs-reducer.ts","redux/sidebar-reducer.ts","redux/state.ts","components/Header/Header.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Setting/Settings.tsx","components/Friends/FriendsItem/FriendsItem.tsx","components/Friends/Friends.tsx","components/SiteBar/SiteBar.tsx","components/Navbar/Navbar.tsx","App.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","profileReducer","state","action","type","newPost","id","v1","message","newPostText","likeCount","posts","push","undefined","dialogsReducer","newMessage","newMessageText","user","messages","sidebarReducer","store","_state","profilePage","dialogsPage","dialogs","name","siteBar","friends","_callSubscriber","console","log","getState","this","subscribe","observer","dispatch","Header","className","s","header","src","alt","Post","props","item","MyPosts","postsElements","map","p","newPostElement","useRef","wrapper","ref","onChange","current","text","updateNewPostTextCreator","value","onClick","ProfileInfo","preview","Profile","profile","DialogItem","path","dialogItem","link","activeClassName","active","to","width","height","Message","user1","user2","Dialogs","dialogsElements","d","messagesElements","m","newMessageElement","dialogsItems","listReset","messenger","textareaWrapper","placeholder","updateNewMessageTextCreator","submitWrapper","News","news","Music","music","Settings","settings","FriendsItem","circle","Friends","friendsElements","title","friendsList","SiteBar","Navbar","nav","activeLink","App","render","bind","rerenderEntireTree","ReactDOM","StrictMode","document","getElementById"],"mappings":"6HACAA,EAAOC,QAAU,CAAC,QAAU,wBAAwB,IAAM,oBAAoB,KAAO,qBAAqB,WAAa,6B,oBCAvHD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,UAAY,2BAA2B,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,UAAY,2BAA2B,gBAAkB,iCAAiC,cAAgB,iC,kBCAzTD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,yBAAyB,OAAS,6B,gBCAvGD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,uBAAuB,MAAQ,yB,kBCA5FD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,gBCA7DD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,QAAU,+B,kBCAnED,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,YAAc,+B,gBCA/DD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,OAAS,8B,qCCA5DD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,KAAO,qB,iBCAzBD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,SAAW,6B,gBCA7BD,EAAOC,QAAU,CAAC,QAAU,2B,0ECabC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCwBCQ,EA9BQ,SAACC,EAAwBC,GAC5C,OAAQA,EAAOC,MACX,IAAK,WACD,IAAIC,EAAoB,CACpBC,GAAIC,cACJC,QAASN,EAAMO,YACfC,UAAW,GAKf,OAFAR,EAAMS,MAAMC,KAAKP,GACjBH,EAAMO,YAAc,GACbP,EAEX,IAAK,uBAID,YAH2BW,IAAvBV,EAAOM,cACPP,EAAMO,YAAcN,EAAOM,aAExBP,EAEX,QACI,OAAOA,ICUJY,EA9BQ,SAACZ,EAAwBC,GAC5C,OAAQA,EAAOC,MACX,IAAK,cACD,IAAIW,EAA0B,CAC1BT,GAAIC,cACJC,QAASN,EAAMc,eACfC,KAAM,GAKV,OAFAf,EAAMgB,SAASN,KAAKG,GACpBb,EAAMc,eAAiB,GAChBd,EAEX,IAAK,qBAID,YAH8BW,IAA1BV,EAAOa,iBACPd,EAAMc,eAAiBb,EAAOa,gBAE3Bd,EAEX,QACI,OAAOA,IChBJiB,EALQ,SAACjB,EAAoBC,GAExC,OAAOD,GCuJIkB,EAnFQ,CACnBC,OAAQ,CACJC,YAAa,CACTX,MAAO,CACH,CAACL,GAAIC,cAAMC,QAAS,mBAAoBE,UAAW,GACnD,CAACJ,GAAIC,cAAMC,QAAS,4BAA6BE,UAAW,KAEhED,YAAa,IAGjBc,YAAa,CACTC,QAAS,CACL,CAAClB,GAAIC,cAAMkB,KAAM,UACjB,CAACnB,GAAIC,cAAMkB,KAAM,UACjB,CAACnB,GAAIC,cAAMkB,KAAM,SACjB,CAACnB,GAAIC,cAAMkB,KAAM,SACjB,CAACnB,GAAIC,cAAMkB,KAAM,UACjB,CAACnB,GAAIC,cAAMkB,KAAM,WAErBP,SAAU,CACN,CAACZ,GAAIC,cAAMC,QAAS,MAAOS,KAAM,GACjC,CAACX,GAAIC,cAAMC,QAAS,MAAOS,KAAM,GACjC,CAACX,GAAIC,cAAMC,QAAS,4BAA6BS,KAAM,GACvD,CAACX,GAAIC,cAAMC,QAAS,YAAaS,KAAM,GACvC,CAACX,GAAIC,cAAMC,QAAS,eAAiBS,KAAM,GAC3C,CAACX,GAAIC,cAAMC,QAAS,SAAUS,KAAM,IAExCD,eAAgB,IAEpBU,QAAS,CACLC,QAAS,CACL,CAACrB,GAAIC,cAAMkB,KAAM,UACjB,CAACnB,GAAIC,cAAMkB,KAAM,SACjB,CAACnB,GAAIC,cAAMkB,KAAM,YAI7BG,gBArCmB,WAsCfC,QAAQC,IAAI,sBAGhBC,SAzCmB,WA0Cf,OAAOC,KAAKX,QAEhBY,UA5CmB,SA4CTC,GACNF,KAAKJ,gBAAkBM,GAG3BC,SAhDmB,SAgDVhC,GACL6B,KAAKX,OAAOC,YAAcrB,EAAe+B,KAAKX,OAAOC,YAAanB,GAClE6B,KAAKX,OAAOE,YAAcT,EAAekB,KAAKX,OAAOE,YAAapB,GAClE6B,KAAKX,OAAOK,QAAUP,EAAea,KAAKX,OAAOK,QAASvB,GAC1D6B,KAAKJ,gBAAgBI,KAAKX,U,iECjHnBe,EARA,WACX,OACI,wBAAQC,UAAWC,IAAEC,OAArB,SACI,qBAAKC,IAAI,0EAA0EC,IAAK,Y,mDCWrFC,EAbkB,SAACC,GAE9B,OACI,sBAAKN,UAAWC,IAAEM,KAAlB,UACI,qBAAKJ,IAAI,4EAA4EC,IAAK,WACzFE,EAAMnC,QACP,gCACI,0CADJ,IAC2BmC,EAAMjC,iBCoC9BmC,EAzCwB,SAACF,GACpC,IAAMG,EAAgBH,EAAMhC,MAAMoC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAiB1C,GAAI0C,EAAE1C,GAAIE,QAASwC,EAAExC,QAChCE,UAAWsC,EAAEtC,WADRsC,EAAE1C,OAElD2C,EAAuDC,iBAA4B,MAczF,OACI,sBAAKb,UAAWC,IAAEa,QAAlB,UACI,0CACA,gCACI,8BACI,0BACIC,IAAKH,EACLI,SAfD,WACf,GAAIJ,EAAeK,QAAS,CAAC,IAAD,EAEpBnD,ENUwB,SAACoD,GAAD,MAA+B,CACnEnD,KAAM,uBACNK,YAAa8C,GMZQC,CADL,UAAGP,EAAeK,eAAlB,aAAG,EAAwBG,OAEnCd,EAAMR,SAAShC,KAYHsD,MAAOd,EAAMlC,gBAIrB,8BACI,wBAAQiD,QAzBV,WACVf,EAAMR,SNeyC,CAAC/B,KAAM,cMS1C,2BAIR,qBAAKiC,UAAWC,IAAE3B,MAAlB,SACKmC,Q,iBCxBFa,EAdK,WAChB,OACI,gCACI,qBAAKtB,UAAWC,IAAEsB,QAAlB,SACI,qBAAKpB,IAAI,wEAAwEC,IAAK,iBAG1F,qBAAKJ,UAAWC,IAAEa,QAAlB,mCCUGU,EAdwB,SAAClB,GACpC,OACI,sBAAKN,UAAWC,IAAEwB,QAAlB,UACI,cAAC,EAAD,IAEA,cAAC,EAAD,CACInD,MAAOgC,EAAMhC,MACbwB,SAAUQ,EAAMR,SAChB1B,YAAakC,EAAMlC,kB,wCCR7BsD,EAAuC,SAACpB,GAE1C,IAAMqB,EAAI,mBAAerB,EAAMrC,IAE/B,OACI,oBAAI+B,UAAWC,IAAE2B,WAAjB,SACI,eAAC,IAAD,CAAS5B,UAAWC,IAAE4B,KAAMC,gBAAiB7B,IAAE8B,OAAQC,GAAIL,EAA3D,UACI,qBAAKM,MAAM,OAAOC,OAAO,OACpB/B,IAAI,4EACJC,IAAI,WACRE,EAAMlB,W,iBCZjB+C,EAAiC,SAAC7B,GACpC,IAAI1B,EAAsB,IAAf0B,EAAM1B,KAAaqB,IAAEmC,MAAQnC,IAAEoC,MAE1C,OACI,oBAAIrC,UAAWC,IAAE9B,QAAU,IAAMS,EAAjC,SAAwC0B,EAAMnC,WC+CvCmE,EAhDwB,SAAChC,GACpC,IAAMiC,EAAkBjC,EAAMpB,YAAYC,QAAQuB,KAAI,SAAA8B,GAAC,OAAI,cAAC,EAAD,CAAuBvE,GAAIuE,EAAEvE,GAAImB,KAAMoD,EAAEpD,MAAxBoD,EAAEvE,OACxEwE,EAAmBnC,EAAMpB,YAAYL,SAAS6B,KAAI,SAAAgC,GAAC,OAAI,cAAC,EAAD,CAAoBzE,GAAIyE,EAAEzE,GAAIW,KAAM8D,EAAE9D,KAC7BT,QAASuE,EAAEvE,SADNuE,EAAEzE,OAEzE0E,EAAoB9B,iBAA4B,MAcpD,OACI,qCACI,sBAAKb,UAAWC,IAAEd,QAAlB,UACI,oBAAIa,UAAWC,IAAE2C,aAAe,IAAM3C,IAAE4C,UAAxC,SACKN,IAGL,oBAAIvC,UAAWC,IAAEpB,SAAW,IAAMoB,IAAE4C,UAApC,SACKJ,OAIT,sBAAKzC,UAAWC,IAAE6C,UAAlB,UACI,qBAAK9C,UAAWC,IAAE8C,gBAAlB,SACI,0BACIC,YAAa,qBACbjC,IAAK4B,EACLvB,MAAOd,EAAM3B,eACbqC,SA1BD,WACf,GAAI2B,EAAkB1B,QAAS,CAAC,IAAD,EAEvBnD,EVQ2B,SAACoD,GAAD,MAA+B,CACtEnD,KAAM,qBACNY,eAAgBuC,GUVK+B,CADL,UAAGN,EAAkB1B,eAArB,aAAG,EAA2BG,OAEtCd,EAAMR,SAAShC,SA0BX,qBAAKkC,UAAWC,IAAEiD,cAAlB,SACI,wBAAQ7B,QAnCP,WACbf,EAAMR,SVa4C,CAAC/B,KAAM,iBUqB7C,2B,wBCrCLoF,EARF,WACT,OACI,qBAAKnD,UAAWC,IAAEmD,KAAlB,mB,iBCMOC,EARD,WACV,OACI,qBAAKrD,UAAWC,IAAEqD,MAAlB,oB,iBCMOC,EARE,WACb,OACI,qBAAKvD,UAAWC,IAAEuD,SAAlB,uB,uECDFC,GAAoC,SAACnD,GAGvC,OACI,qBAAIN,UAAWC,KAAEM,KAAjB,UACI,qBAAKP,UAAWC,KAAEyD,SACjBpD,EAAMlB,SCLbuE,GAAiC,SAACrD,GACpC,IAAMsD,EAAkBtD,EAAMhB,QAAQoB,KAAI,SAAAH,GAAI,OAAI,cAAC,GAAD,CAA2BtC,GAAIsC,EAAKtC,GAAImB,KAAMmB,EAAKnB,MAAjCmB,EAAKtC,OAEzE,OACI,qCACI,oBAAI+B,UAAWC,KAAE4D,MAAjB,qBAEA,oBAAI7D,UAAWC,KAAE6D,YAAjB,SACKF,QCPXG,GAAiC,SAACzD,GACpC,OACI,qBAAKN,UAAWC,IAAEZ,QAAlB,SACI,cAAC,GAAD,CAASC,QAASgB,EAAMhB,aC2BrB0E,GA9BuB,SAAC1D,GACnC,OACI,sBAAKN,UAAWC,IAAEa,QAAlB,UACI,sBAAKd,UAAWC,IAAEgE,IAAlB,UACI,qBAAKjE,UAAWC,IAAEM,KAAlB,SACI,cAAC,IAAD,CAASyB,GAAG,WAAWF,gBAAiB7B,IAAEiE,WAA1C,uBAGJ,qBAAKlE,UAAS,UAAKC,IAAEM,KAAP,YAAeN,IAAE8B,QAA/B,SACI,cAAC,IAAD,CAASC,GAAG,WAAWF,gBAAiB7B,IAAEiE,WAA1C,wBAGJ,qBAAKlE,UAAWC,IAAEM,KAAlB,SACI,cAAC,IAAD,CAASyB,GAAG,QAAQF,gBAAiB7B,IAAEiE,WAAvC,oBAGJ,qBAAKlE,UAAWC,IAAEM,KAAlB,SACI,cAAC,IAAD,CAASyB,GAAG,SAASF,gBAAiB7B,IAAEiE,WAAxC,qBAGJ,qBAAKlE,UAAWC,IAAEM,KAAlB,SACI,cAAC,IAAD,CAASyB,GAAG,YAAYF,gBAAiB7B,IAAEiE,WAA3C,2BAIR,cAAC,GAAD,CAAS5E,QAASgB,EAAMhB,cCUrB6E,GA5BgB,SAAC7D,GAC5B,IAAMzC,EAAQyC,EAAMvB,MAAMW,WAE1B,OACI,sBAAKM,UAAU,cAAf,UACI,cAAC,EAAD,IACA,cAAC,GAAD,CAAQV,QAASzB,EAAMwB,QAAQC,UAE/B,sBAAKU,UAAU,sBAAf,UACI,cAAC,IAAD,CAAO2B,KAAM,WAAYyC,OAAQ,kBAAM,cAAC,EAAD,CACnClF,YAAarB,EAAMqB,YACnBP,eAAgBd,EAAMqB,YAAYP,eAClCmB,SAAUQ,EAAMvB,MAAMe,SAASuE,KAAK/D,EAAMvB,YAG9C,cAAC,IAAD,CAAO4C,KAAM,WAAYyC,OAAQ,kBAAM,cAAC,EAAD,CACnC9F,MAAOT,EAAMoB,YAAYX,MACzBF,YAAaP,EAAMoB,YAAYb,YAC/B0B,SAAUQ,EAAMvB,MAAMe,SAASuE,KAAK/D,EAAMvB,YAE9C,cAAC,IAAD,CAAO4C,KAAM,QAASyC,OAAQ,kBAAM,cAAC,EAAD,OACpC,cAAC,IAAD,CAAOzC,KAAM,SAAUyC,OAAQ,kBAAM,cAAC,EAAD,OACrC,cAAC,IAAD,CAAOzC,KAAM,YAAayC,OAAQ,kBAAM,cAAC,EAAD,cC1BpDE,GAAsB,WACtBC,IAASH,OACL,cAAC,IAAMI,WAAP,UACI,cAAC,IAAD,UACI,cAAC,GAAD,CACIzF,MAAOA,QAInB0F,SAASC,eAAe,UAIhCJ,KAEAvF,EAAMa,UAAU0E,IAMhBnH,M","file":"static/js/main.c1b4a138.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Navbar_wrapper__3oknN\",\"nav\":\"Navbar_nav__3j_MG\",\"item\":\"Navbar_item__1OyJD\",\"activeLink\":\"Navbar_activeLink__2Ubgr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__9d_03\",\"listReset\":\"Dialogs_listReset__2DZjo\",\"dialogsItems\":\"Dialogs_dialogsItems__3xfpV\",\"active\":\"Dialogs_active__R-dH6\",\"messages\":\"Dialogs_messages__32clz\",\"messenger\":\"Dialogs_messenger__3HgeR\",\"textareaWrapper\":\"Dialogs_textareaWrapper__18KeY\",\"submitWrapper\":\"Dialogs_submitWrapper__3N8VE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"DialogItem_dialogItem__3VzTr\",\"link\":\"DialogItem_link__2xWDI\",\"active\":\"DialogItem_active__bUNsx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1TnnS\",\"user1\":\"Message_user1__S8wZx\",\"user2\":\"Message_user2__2h3_T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MyPosts_wrapper__3pZ18\",\"posts\":\"MyPosts_posts__3GeRT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ProfileInfo_wrapper__2TN9j\",\"preview\":\"ProfileInfo_preview__2NOY3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Friends_title__18mMj\",\"friendsList\":\"Friends_friendsList__200-J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendsItem_item__2fAi-\",\"circle\":\"FriendsItem_circle__1Hy3A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1tXis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1U4Qr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2ZpOe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__3q4B5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__14jij\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__1Twb_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"siteBar\":\"SiteBar_siteBar__UVcXu\"};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {v1} from \"uuid\";\r\nimport {ActionType, PostType, ProfilePageType} from \"./state\";\r\n\r\nconst profileReducer = (state: ProfilePageType, action: ActionType) => {\r\n    switch (action.type) {\r\n        case \"ADD-POST\":\r\n            let newPost: PostType = {\r\n                id: v1(),\r\n                message: state.newPostText,\r\n                likeCount: 0\r\n            };\r\n\r\n            state.posts.push(newPost);\r\n            state.newPostText = '';\r\n            return state;\r\n\r\n        case \"UPDATE-NEW-POST-TEXT\":\r\n            if (action.newPostText !== undefined) {\r\n                state.newPostText = action.newPostText;\r\n            }\r\n            return state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (): ActionType => ({type: 'ADD-POST'});\r\nexport const updateNewPostTextCreator = (text: string): ActionType => ({\r\n    type: 'UPDATE-NEW-POST-TEXT',\r\n    newPostText: text\r\n});\r\n\r\nexport default profileReducer;","import {v1} from \"uuid\";\r\nimport {ActionType, DialogsPageType, MessageType} from \"./state\";\r\n\r\nconst dialogsReducer = (state: DialogsPageType, action: ActionType) => {\r\n    switch (action.type) {\r\n        case \"ADD-MESSAGE\":\r\n            let newMessage: MessageType = {\r\n                id: v1(),\r\n                message: state.newMessageText,\r\n                user: 2\r\n            };\r\n\r\n            state.messages.push(newMessage);\r\n            state.newMessageText = '';\r\n            return state;\r\n\r\n        case \"UPDATE-NEW-MESSAGE\":\r\n            if (action.newMessageText !== undefined) {\r\n                state.newMessageText = action.newMessageText;\r\n            }\r\n            return state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addMessageActionCreator = (): ActionType => ({type: 'ADD-MESSAGE'});\r\nexport const updateNewMessageTextCreator = (text: string): ActionType => ({\r\n    type: 'UPDATE-NEW-MESSAGE',\r\n    newMessageText: text\r\n});\r\n\r\nexport default dialogsReducer;","import {ActionType, SiteBarType} from \"./state\";\r\n\r\nconst sidebarReducer = (state: SiteBarType, action: ActionType) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer","import {v1} from \"uuid\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\n\r\n// state item type\r\nexport type PostType = {\r\n    id: string\r\n    message: string\r\n    likeCount: number\r\n}\r\n\r\nexport type DialogItemType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nexport type MessageType = {\r\n    id: string\r\n    message: string\r\n    user: number\r\n}\r\n\r\nexport type FriendType = {\r\n    id: string\r\n    name: string\r\n}\r\n// -- end --\r\n\r\n\r\n// state page type\r\nexport type ProfilePageType = {\r\n    posts: PostType[]\r\n    newPostText: string\r\n}\r\n\r\nexport type DialogsPageType = {\r\n    dialogs: DialogItemType[]\r\n    messages: MessageType[]\r\n    newMessageText: string\r\n}\r\n\r\nexport type SiteBarType = {\r\n    friends: FriendType[]\r\n}\r\n// -- end --\r\n\r\n\r\n// state type\r\nexport type StateType = {\r\n    profilePage: ProfilePageType\r\n    dialogsPage: DialogsPageType\r\n    siteBar: SiteBarType\r\n}\r\n\r\nexport type ActionType = {\r\n    type: 'ADD-POST' | 'UPDATE-NEW-POST-TEXT' | 'ADD-MESSAGE' | 'UPDATE-NEW-MESSAGE'\r\n    newPostText?: string\r\n    newMessageText?: string\r\n}\r\n\r\n// store type\r\nexport type StoreType = {\r\n    _state: StateType\r\n    getState: () => StateType\r\n    _callSubscriber: (state: StateType) => void\r\n    subscribe: (observer: (state: StateType) => void) => void\r\n    dispatch: (action: ActionType) => void\r\n}\r\n// -- end --\r\n\r\n// store\r\nlet store: StoreType = {\r\n    _state: {\r\n        profilePage: {\r\n            posts: [\r\n                {id: v1(), message: 'Hi, how are you?', likeCount: 3},\r\n                {id: v1(), message: 'How is your it-camasutra?', likeCount: 13},\r\n            ],\r\n            newPostText: ''\r\n\r\n        },\r\n        dialogsPage: {\r\n            dialogs: [\r\n                {id: v1(), name: 'Dimych'},\r\n                {id: v1(), name: 'Andrey'},\r\n                {id: v1(), name: 'Sveta'},\r\n                {id: v1(), name: 'Sasha'},\r\n                {id: v1(), name: 'Viktor'},\r\n                {id: v1(), name: 'Valera'}\r\n            ],\r\n            messages: [\r\n                {id: v1(), message: 'Hi!', user: 1},\r\n                {id: v1(), message: 'Hi!', user: 2},\r\n                {id: v1(), message: 'How is your it-camasutra?', user: 2},\r\n                {id: v1(), message: 'Perfectly', user: 1},\r\n                {id: v1(), message: 'It\\'s amazing', user: 2},\r\n                {id: v1(), message: 'Thanks', user: 1}\r\n            ],\r\n            newMessageText: ''\r\n        },\r\n        siteBar: {\r\n            friends: [\r\n                {id: v1(), name: 'Andrew'},\r\n                {id: v1(), name: 'Sasha'},\r\n                {id: v1(), name: 'Sveta'},\r\n            ]\r\n        }\r\n    },\r\n    _callSubscriber() {\r\n        console.log('state was changed');\r\n    },\r\n\r\n    getState() {\r\n        return this._state;\r\n    },\r\n    subscribe(observer: (state: StateType) => void) {\r\n        this._callSubscriber = observer;\r\n    },\r\n\r\n    dispatch(action) {\r\n        this._state.profilePage = profileReducer(this._state.profilePage, action);\r\n        this._state.dialogsPage = dialogsReducer(this._state.dialogsPage, action);\r\n        this._state.siteBar = sidebarReducer(this._state.siteBar, action);\r\n        this._callSubscriber(this._state);\r\n    }\r\n};\r\n// -- end --\r\n\r\n\r\n// React components type\r\nexport type AppType = {\r\n    store: StoreType\r\n} // App\r\n\r\nexport type ProfileType = {\r\n    posts: PostType[]\r\n    newPostText: string\r\n    dispatch: (action: ActionType) => void\r\n} // Profile\r\n\r\nexport type DialogsType = {\r\n    dialogsPage: DialogsPageType\r\n    newMessageText: string\r\n    dispatch: (action: ActionType) => void\r\n} // Dialogs\r\n\r\nexport type MyPostsType = {\r\n    posts: PostType[]\r\n    newPostText: string\r\n    dispatch: (action: ActionType) => void\r\n} // MyPosts\r\n// -- end --\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src='https://www.meme-arsenal.com/memes/e207dd3d241976dcbca5fefcd1bfdc70.jpg' alt={'logo'}/>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport {PostType} from \"../../../../redux/state\";\r\n\r\nconst Post: React.FC<PostType> = (props) => {\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://cva.ukzn.ac.za/wp-content/uploads/2019/07/profile-placeholder.png' alt={'avatar'}/>\r\n            {props.message}\r\n            <div>\r\n                <span>&#x2665;</span> {props.likeCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;\r\n","import React, {useRef} from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {MyPostsType} from \"../../../redux/state\";\r\nimport {addPostActionCreator, updateNewPostTextCreator} from \"../../../redux/profile-reducer\";\r\n\r\nconst MyPosts: React.FC<MyPostsType> = (props) => {\r\n    const postsElements = props.posts.map(p => <Post key={p.id} id={p.id} message={p.message}\r\n                                                     likeCount={p.likeCount}/>);\r\n    const newPostElement: React.RefObject<HTMLTextAreaElement> = useRef<HTMLTextAreaElement>(null);\r\n\r\n    let addPost = () => {\r\n        props.dispatch(addPostActionCreator());\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        if (newPostElement.current) {\r\n            let text = newPostElement.current?.value;\r\n            let action = updateNewPostTextCreator(text)\r\n            props.dispatch(action);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea\r\n                        ref={newPostElement}\r\n                        onChange={onPostChange}\r\n                        value={props.newPostText}\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    <button onClick={addPost}>Add post</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <div>\r\n            <div className={s.preview}>\r\n                <img src='https://playprint.ru/images/catalog/categories/category-marvel-bg.jpg' alt={'background'}/>\r\n            </div>\r\n\r\n            <div className={s.wrapper}>\r\n                ava + description\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {ProfileType} from \"../../redux/state\";\r\n\r\nconst Profile: React.FC<ProfileType> = (props) => {\r\n    return (\r\n        <div className={s.profile}>\r\n            <ProfileInfo/>\r\n\r\n            <MyPosts\r\n                posts={props.posts}\r\n                dispatch={props.dispatch}\r\n                newPostText={props.newPostText}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './DialogItem.module.css';\r\nimport {DialogItemType} from \"../../../redux/state\";\r\n\r\n\r\nconst DialogItem: React.FC<DialogItemType> = (props) => {\r\n\r\n    const path = `/dialogs/${props.id}`;\r\n\r\n    return (\r\n        <li className={s.dialogItem}>\r\n            <NavLink className={s.link} activeClassName={s.active} to={path}>\r\n                <img width=\"30px\" height=\"30px\"\r\n                     src=\"https://cva.ukzn.ac.za/wp-content/uploads/2019/07/profile-placeholder.png\"\r\n                     alt=\"avatar\"/>\r\n                {props.name}\r\n            </NavLink>\r\n        </li>\r\n    )\r\n};\r\n\r\n\r\nexport\r\n{\r\n    DialogItem\r\n}\r\n    ;\r\n","import React from 'react';\r\nimport s from './Message.module.css';\r\nimport {MessageType} from \"../../../redux/state\";\r\n\r\nconst Message: React.FC<MessageType> = (props) => {\r\n    let user = props.user === 1 ? s.user1 : s.user2;\r\n\r\n    return (\r\n        <li className={s.message + ' ' + user}>{props.message}</li>\r\n    )\r\n};\r\n\r\nexport {Message};\r\n","import React, {useRef} from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {DialogsType} from \"../../redux/state\";\r\nimport {addMessageActionCreator, updateNewMessageTextCreator} from \"../../redux/dialogs-reducer\";\r\n\r\nconst Dialogs: React.FC<DialogsType> = (props) => {\r\n    const dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem key={d.id} id={d.id} name={d.name}/>);\r\n    const messagesElements = props.dialogsPage.messages.map(m => <Message key={m.id} id={m.id} user={m.user}\r\n                                                                          message={m.message}/>);\r\n    let newMessageElement = useRef<HTMLTextAreaElement>(null);\r\n\r\n    let addMessage = () => {\r\n        props.dispatch(addMessageActionCreator());\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        if (newMessageElement.current) {\r\n            let text = newMessageElement.current?.value;\r\n            let action = updateNewMessageTextCreator(text)\r\n            props.dispatch(action);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className={s.dialogs}>\r\n                <ul className={s.dialogsItems + ' ' + s.listReset}>\r\n                    {dialogsElements}\r\n                </ul>\r\n\r\n                <ul className={s.messages + ' ' + s.listReset}>\r\n                    {messagesElements}\r\n                </ul>\r\n            </div>\r\n\r\n            <div className={s.messenger}>\r\n                <div className={s.textareaWrapper}>\r\n                    <textarea\r\n                        placeholder={'Enter your message'}\r\n                        ref={newMessageElement}\r\n                        value={props.newMessageText}\r\n                        onChange={onPostChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.submitWrapper}>\r\n                    <button onClick={addMessage}>Send</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div className={s.news}>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;\r\n","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div className={s.music}>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;\r\n","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div className={s.settings}>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\nimport s from './FriendsItem.module.css';\r\nimport {FriendType} from \"../../../redux/state\";\r\n\r\nconst FriendsItem: React.FC<FriendType> = (props) => {\r\n\r\n\r\n    return (\r\n        <li className={s.item}>\r\n            <div className={s.circle}></div>\r\n            {props.name}\r\n        </li>\r\n    )\r\n};\r\n\r\nexport {FriendsItem};","import React from 'react';\r\nimport s from './Friends.module.css';\r\nimport {FriendsItem} from \"./FriendsItem/FriendsItem\";\r\nimport {SiteBarType} from \"../../redux/state\";\r\n\r\nconst Friends: React.FC<SiteBarType> = (props) => {\r\n    const friendsElements = props.friends.map(item => <FriendsItem key={item.id} id={item.id} name={item.name}/>)\r\n\r\n    return (\r\n        <>\r\n            <h2 className={s.title}>Friends</h2>\r\n\r\n            <ul className={s.friendsList}>\r\n                {friendsElements}\r\n            </ul>\r\n        </>\r\n    )\r\n};\r\n\r\nexport {Friends};","import React from 'react';\r\nimport s from './SiteBar.module.css';\r\nimport {Friends} from \"../Friends/Friends\";\r\nimport {SiteBarType} from \"../../redux/state\";\r\n\r\n\r\nconst SiteBar: React.FC<SiteBarType> = (props) => {\r\n    return (\r\n        <div className={s.siteBar}>\r\n            <Friends friends={props.friends}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport {SiteBar};","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {SiteBar} from \"../SiteBar/SiteBar\";\r\nimport {SiteBarType} from \"../../redux/state\";\r\n\r\nconst Navbar: React.FC<SiteBarType> = (props) => {\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <nav className={s.nav}>\r\n                <div className={s.item}>\r\n                    <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n                </div>\r\n\r\n                <div className={`${s.item} ${s.active}`}>\r\n                    <NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink>\r\n                </div>\r\n            </nav>\r\n\r\n            <SiteBar friends={props.friends}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header/Header';\r\nimport Profile from './components/Profile/Profile';\r\nimport Dialogs from \"./components/Dialogs/Dialogs\";\r\nimport {Route} from \"react-router-dom\";\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Setting/Settings\";\r\nimport {AppType} from \"./redux/state\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\n\r\n\r\nconst App: React.FC<AppType> = (props) => {\r\n    const state = props.store.getState();\r\n\r\n    return (\r\n        <div className='app-wrapper'>\r\n            <Header/>\r\n            <Navbar friends={state.siteBar.friends}/>\r\n\r\n            <div className=\"app-wrapper-content\">\r\n                <Route path={'/dialogs'} render={() => <Dialogs\r\n                    dialogsPage={state.dialogsPage}\r\n                    newMessageText={state.dialogsPage.newMessageText}\r\n                    dispatch={props.store.dispatch.bind(props.store)}\r\n                />}\r\n                />\r\n                <Route path={'/profile'} render={() => <Profile\r\n                    posts={state.profilePage.posts}\r\n                    newPostText={state.profilePage.newPostText}\r\n                    dispatch={props.store.dispatch.bind(props.store)}\r\n                />}/>\r\n                <Route path={'/news'} render={() => <News/>}/>\r\n                <Route path={'/music'} render={() => <Music/>}/>\r\n                <Route path={'/settings'} render={() => <Settings/>}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './redux/state';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nlet rerenderEntireTree = (() => {\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <HashRouter>\r\n                <App\r\n                    store={store}\r\n                />\r\n            </HashRouter>\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    );\r\n});\r\n\r\nrerenderEntireTree();\r\n\r\nstore.subscribe(rerenderEntireTree);\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}