{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Friends/Friends.module.css","components/Friends/FriendsItem/FriendsItem.module.css","components/Header/Header.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.module.css","components/News/News.module.css","components/Music/Music.module.css","components/Setting/Settings.module.css","components/SiteBar/SiteBar.module.css","reportWebVitals.ts","redux/state.ts","components/Header/Header.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Setting/Settings.tsx","components/Friends/FriendsItem/FriendsItem.tsx","components/Friends/Friends.tsx","components/SiteBar/SiteBar.tsx","components/Navbar/Navbar.tsx","App.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","_state","profilePage","posts","id","v1","message","likeCount","newPostText","dialogsPage","dialogs","name","messages","user","newMessageText","siteBar","friends","_callSubscriber","console","log","getState","this","subscribe","observer","dispatch","action","type","newPost","push","undefined","newMessage","window","Header","className","s","header","src","alt","Post","props","item","MyPosts","postsElements","map","p","newPostElement","useRef","wrapper","ref","onChange","current","text","updateNewPostTextCreator","value","onClick","ProfileInfo","preview","Profile","profile","DialogItem","path","dialogItem","link","activeClassName","active","to","width","height","Message","user1","user2","Dialogs","dialogsElements","d","messagesElements","m","newMessageElement","dialogsItems","listReset","messenger","textareaWrapper","placeholder","updateNewMessageTextCreator","submitWrapper","News","news","Music","music","Settings","settings","FriendsItem","circle","Friends","friendsElements","title","friendsList","SiteBar","Navbar","nav","activeLink","App","state","render","bind","rerenderEntireTree","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56c1c5a9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Navbar_wrapper__3oknN\",\"nav\":\"Navbar_nav__3j_MG\",\"item\":\"Navbar_item__1OyJD\",\"activeLink\":\"Navbar_activeLink__2Ubgr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__9d_03\",\"listReset\":\"Dialogs_listReset__2DZjo\",\"dialogsItems\":\"Dialogs_dialogsItems__3xfpV\",\"active\":\"Dialogs_active__R-dH6\",\"messages\":\"Dialogs_messages__32clz\",\"messenger\":\"Dialogs_messenger__3HgeR\",\"textareaWrapper\":\"Dialogs_textareaWrapper__18KeY\",\"submitWrapper\":\"Dialogs_submitWrapper__3N8VE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"DialogItem_dialogItem__3VzTr\",\"link\":\"DialogItem_link__2xWDI\",\"active\":\"DialogItem_active__bUNsx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1TnnS\",\"user1\":\"Message_user1__S8wZx\",\"user2\":\"Message_user2__2h3_T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MyPosts_wrapper__3pZ18\",\"posts\":\"MyPosts_posts__3GeRT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ProfileInfo_wrapper__2TN9j\",\"preview\":\"ProfileInfo_preview__2NOY3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Friends_title__18mMj\",\"friendsList\":\"Friends_friendsList__200-J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendsItem_item__2fAi-\",\"circle\":\"FriendsItem_circle__1Hy3A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1tXis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1U4Qr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2ZpOe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__3q4B5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__14jij\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__1Twb_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"siteBar\":\"SiteBar_siteBar__UVcXu\"};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {v1} from \"uuid\";\r\n\r\n// state item type\r\nexport type PostType = {\r\n    id: string\r\n    message: string\r\n    likeCount: number\r\n}\r\n\r\nexport type DialogItemType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nexport type MessageType = {\r\n    id: string\r\n    message: string\r\n    user: number\r\n}\r\n\r\nexport type FriendType = {\r\n    id: string\r\n    name: string\r\n}\r\n// -- end --\r\n\r\n\r\n// state page type\r\nexport type ProfilePageType = {\r\n    posts: PostType[]\r\n    newPostText: string\r\n}\r\n\r\nexport type DialogsPageType = {\r\n    dialogs: DialogItemType[]\r\n    messages: MessageType[]\r\n    newMessageText: string\r\n}\r\n\r\nexport type SiteBarPageType = {\r\n    friends: FriendType[]\r\n}\r\n// -- end --\r\n\r\n\r\n// state type\r\nexport type StateType = {\r\n    profilePage: ProfilePageType\r\n    dialogsPage: DialogsPageType\r\n    siteBar: SiteBarPageType\r\n}\r\n\r\nexport type ActionType = {\r\n    type: 'ADD-POST' | 'UPDATE-NEW-POST-TEXT' | 'ADD-MESSAGE' | 'UPDATE-NEW-MESSAGE'\r\n    newPostText?: string\r\n    newMessageText?: string\r\n}\r\n\r\n// store type\r\nexport type StoreType = {\r\n    _state: StateType\r\n    getState: () => StateType\r\n    _callSubscriber: (state: StateType) => void\r\n    subscribe: (observer: (state: StateType) => void) => void\r\n    dispatch: (action: ActionType) => void\r\n}\r\n// -- end --\r\n\r\n// store\r\nlet store: StoreType = {\r\n    _state: {\r\n        profilePage: {\r\n            posts: [\r\n                {id: v1(), message: 'Hi, how are you?', likeCount: 3},\r\n                {id: v1(), message: 'How is your it-camasutra?', likeCount: 13},\r\n            ],\r\n            newPostText: ''\r\n\r\n        },\r\n        dialogsPage: {\r\n            dialogs: [\r\n                {id: v1(), name: 'Dimych'},\r\n                {id: v1(), name: 'Andrey'},\r\n                {id: v1(), name: 'Sveta'},\r\n                {id: v1(), name: 'Sasha'},\r\n                {id: v1(), name: 'Viktor'},\r\n                {id: v1(), name: 'Valera'}\r\n            ],\r\n            messages: [\r\n                {id: v1(), message: 'Hi!', user: 1},\r\n                {id: v1(), message: 'Hi!', user: 2},\r\n                {id: v1(), message: 'How is your it-camasutra?', user: 2},\r\n                {id: v1(), message: 'Perfectly', user: 1},\r\n                {id: v1(), message: 'It\\'s amazing', user: 2},\r\n                {id: v1(), message: 'Thanks', user: 1}\r\n            ],\r\n            newMessageText: ''\r\n        },\r\n        siteBar: {\r\n            friends: [\r\n                {id: v1(), name: 'Andrew'},\r\n                {id: v1(), name: 'Sasha'},\r\n                {id: v1(), name: 'Sveta'},\r\n            ]\r\n        }\r\n    },\r\n    _callSubscriber() {\r\n        console.log('state was changed');\r\n    },\r\n\r\n    getState() {\r\n        return this._state;\r\n    },\r\n    subscribe(observer: (state: StateType) => void) {\r\n        this._callSubscriber = observer;\r\n    },\r\n\r\n    dispatch(action) {\r\n        if (action.type === 'ADD-POST') {\r\n            let newPost: PostType = {\r\n                id: v1(),\r\n                message: this._state.profilePage.newPostText,\r\n                likeCount: 0\r\n            };\r\n\r\n            this._state.profilePage.posts.push(newPost);\r\n            this._state.profilePage.newPostText = '';\r\n            this._callSubscriber(this._state);\r\n        } else if (action.type === 'UPDATE-NEW-POST-TEXT') {\r\n            if (action.newPostText !== undefined) {\r\n                this._state.profilePage.newPostText = action.newPostText;\r\n            }\r\n            this._callSubscriber(this._state);\r\n        } else if (action.type === 'ADD-MESSAGE') {\r\n            let newMessage: MessageType = {\r\n                id: v1(),\r\n                message: this._state.dialogsPage.newMessageText,\r\n                user: 2\r\n            };\r\n\r\n            this._state.dialogsPage.messages.push(newMessage);\r\n            this._state.dialogsPage.newMessageText = '';\r\n            this._callSubscriber(this._state);\r\n        } else if (action.type === 'UPDATE-NEW-MESSAGE') {\r\n            if (action.newMessageText !== undefined) {\r\n                this._state.dialogsPage.newMessageText = action.newMessageText;\r\n            }\r\n            this._callSubscriber(this._state);\r\n        }\r\n    }\r\n};\r\n// -- end --\r\n\r\n\r\n// action creators\r\nexport const addPostActionCreator = (): ActionType  => ({type: 'ADD-POST'});\r\nexport const updateNewPostTextCreator = (text: string): ActionType  => ({type: 'UPDATE-NEW-POST-TEXT', newPostText: text});\r\nexport const addMessageActionCreator = (): ActionType  => ({type: 'ADD-MESSAGE'});\r\nexport const updateNewMessageTextCreator = (text: string): ActionType  => ({type: 'UPDATE-NEW-MESSAGE', newMessageText: text});\r\n// -- end --\r\n\r\n\r\n// React components type\r\nexport type AppType = {\r\n    store: StoreType\r\n} // App\r\n\r\nexport type ProfileType = {\r\n    posts: PostType[]\r\n    newPostText: string\r\n    dispatch: (action: ActionType) => void\r\n} // Profile\r\n\r\nexport type DialogsType = {\r\n    dialogsPage: DialogsPageType\r\n    newMessageText: string\r\n    dispatch: (action: ActionType) => void\r\n} // Dialogs\r\n\r\nexport type MyPostsType = {\r\n    posts: PostType[]\r\n    newPostText: string\r\n    dispatch: (action: ActionType) => void\r\n} // MyPosts\r\n// -- end --\r\n\r\n\r\nexport default store;\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src='https://www.meme-arsenal.com/memes/e207dd3d241976dcbca5fefcd1bfdc70.jpg' alt={'logo'}/>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport {PostType} from \"../../../../redux/state\";\r\n\r\nconst Post: React.FC<PostType> = (props) => {\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://cva.ukzn.ac.za/wp-content/uploads/2019/07/profile-placeholder.png' alt={'avatar'}/>\r\n            {props.message}\r\n            <div>\r\n                <span>&#x2665;</span> {props.likeCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;\r\n","import React, {useRef} from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {addPostActionCreator, MyPostsType, updateNewPostTextCreator} from \"../../../redux/state\";\r\n\r\nconst MyPosts: React.FC<MyPostsType> = (props) => {\r\n    const postsElements = props.posts.map(p => <Post key={p.id} id={p.id} message={p.message}\r\n                                                     likeCount={p.likeCount}/>);\r\n    const newPostElement: React.RefObject<HTMLTextAreaElement> = useRef<HTMLTextAreaElement>(null);\r\n\r\n    let addPost = () => {\r\n        props.dispatch(addPostActionCreator());\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        if (newPostElement.current) {\r\n            let text = newPostElement.current?.value;\r\n            let action = updateNewPostTextCreator(text)\r\n            props.dispatch(action);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea\r\n                        ref={newPostElement}\r\n                        onChange={onPostChange}\r\n                        value={props.newPostText}\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    <button onClick={addPost}>Add post</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileInfo = () => {\r\n  return (\r\n    <div>\r\n      <div className={s.preview}>\r\n        <img src='https://playprint.ru/images/catalog/categories/category-marvel-bg.jpg' alt={'background'}/>\r\n      </div>\r\n\r\n      <div className={s.wrapper}>\r\n        ava + description\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {ProfileType} from \"../../redux/state\";\r\n\r\nconst Profile: React.FC<ProfileType> = (props) => {\r\n    return (\r\n        <div className={s.profile}>\r\n            <ProfileInfo/>\r\n\r\n            <MyPosts\r\n                posts={props.posts}\r\n                dispatch={props.dispatch}\r\n                // addPostCB={props.addPostCB}\r\n                newPostText={props.newPostText}\r\n                // updateNewPostText={props.updateNewPostText}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './DialogItem.module.css';\r\nimport {DialogItemType} from \"../../../redux/state\";\r\n\r\n\r\nconst DialogItem: React.FC<DialogItemType> = (props) => {\r\n\r\n    const path = `/dialogs/${props.id}`;\r\n\r\n    return (\r\n        <li className={s.dialogItem}>\r\n            <NavLink className={s.link} activeClassName={s.active} to={path}>\r\n                <img width=\"30px\" height=\"30px\" src=\"https://cva.ukzn.ac.za/wp-content/uploads/2019/07/profile-placeholder.png\"\r\n                     alt=\"avatar\" />\r\n                    {props.name}\r\n            </NavLink>\r\n        </li>\r\n)\r\n};\r\n\r\n\r\nexport\r\n    {\r\n        DialogItem\r\n    }\r\n;\r\n","import React from 'react';\r\nimport s from './Message.module.css';\r\nimport {MessageType} from \"../../../redux/state\";\r\n\r\nconst Message: React.FC<MessageType> = (props) => {\r\n    let user = props.user === 1? s.user1 : s.user2;\r\n\r\n    return (\r\n        <li className={s.message + ' ' + user}>{props.message}</li>\r\n    )\r\n};\r\n\r\nexport {Message};\r\n","import React, {useRef} from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {addMessageActionCreator, DialogsType, updateNewMessageTextCreator} from \"../../redux/state\";\r\n\r\nconst Dialogs: React.FC<DialogsType> = (props) => {\r\n    const dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem key={d.id} id={d.id} name={d.name}/>);\r\n    const messagesElements = props.dialogsPage.messages.map(m => <Message key={m.id} id={m.id} user={m.user}\r\n                                                                          message={m.message}/>);\r\n    let newMessageElement = useRef<HTMLTextAreaElement>(null);\r\n\r\n    let addMessage = () => {\r\n        props.dispatch(addMessageActionCreator());\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        if (newMessageElement.current) {\r\n            let text = newMessageElement.current?.value;\r\n            let action = updateNewMessageTextCreator(text)\r\n            props.dispatch(action);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className={s.dialogs}>\r\n                <ul className={s.dialogsItems + ' ' + s.listReset}>\r\n                    {dialogsElements}\r\n                </ul>\r\n\r\n                <ul className={s.messages + ' ' + s.listReset}>\r\n                    {messagesElements}\r\n                </ul>\r\n            </div>\r\n\r\n            <div className={s.messenger}>\r\n                <div className={s.textareaWrapper}>\r\n                    <textarea\r\n                        placeholder={'Enter your message'}\r\n                        ref={newMessageElement}\r\n                        value={props.newMessageText}\r\n                        onChange={onPostChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.submitWrapper}>\r\n                    <button onClick={addMessage}>Send</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div className={s.news}>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;\r\n","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div className={s.music}>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;\r\n","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div className={s.settings}>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\nimport s from './FriendsItem.module.css';\r\nimport {FriendType} from \"../../../redux/state\";\r\n\r\nconst FriendsItem: React.FC<FriendType> = (props ) => {\r\n\r\n\r\n    return (\r\n        <li className={s.item}>\r\n            <div className={s.circle}></div>\r\n            {props.name}\r\n        </li>\r\n    )\r\n};\r\n\r\nexport {FriendsItem};","import React from 'react';\r\nimport s from './Friends.module.css';\r\nimport {FriendsItem} from \"./FriendsItem/FriendsItem\";\r\nimport {SiteBarPageType} from \"../../redux/state\";\r\n\r\nconst Friends: React.FC<SiteBarPageType>  = (props) => {\r\n    const friendsElements = props.friends.map(item => <FriendsItem key={item.id} id={item.id} name={item.name} />)\r\n\r\n    return (\r\n        <>\r\n            <h2 className={s.title}>Friends</h2>\r\n\r\n            <ul className={s.friendsList}>\r\n                {friendsElements}\r\n            </ul>\r\n        </>\r\n    )\r\n};\r\n\r\nexport {Friends};","import React from 'react';\r\nimport s from './SiteBar.module.css';\r\nimport {Friends} from \"../Friends/Friends\";\r\nimport {SiteBarPageType} from \"../../redux/state\";\r\n\r\n\r\nconst SiteBar: React.FC<SiteBarPageType> = (props ) => {\r\n    return (\r\n        <div className={s.siteBar}>\r\n            <Friends friends={props.friends}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport {SiteBar};","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {SiteBar} from \"../SiteBar/SiteBar\";\r\nimport {SiteBarPageType} from \"../../redux/state\";\r\n\r\nconst Navbar: React.FC<SiteBarPageType> = (props) => {\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <nav className={s.nav}>\r\n                <div className={s.item}>\r\n                    <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n                </div>\r\n\r\n                <div className={`${s.item} ${s.active}`}>\r\n                    <NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink>\r\n                </div>\r\n            </nav>\r\n\r\n            <SiteBar friends={props.friends} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header/Header';\r\nimport Profile from './components/Profile/Profile';\r\nimport Dialogs from \"./components/Dialogs/Dialogs\";\r\nimport {Route} from \"react-router-dom\";\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Setting/Settings\";\r\nimport {AppType} from \"./redux/state\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\n\r\n\r\nconst App: React.FC<AppType> = (props) => {\r\n    const state = props.store.getState();\r\n\r\n    return (\r\n        <div className='app-wrapper'>\r\n            <Header/>\r\n            <Navbar friends={state.siteBar.friends}/>\r\n\r\n            <div className=\"app-wrapper-content\">\r\n                <Route path={'/dialogs'} render={() => <Dialogs\r\n                    dialogsPage={state.dialogsPage}\r\n                    newMessageText={state.dialogsPage.newMessageText}\r\n                    dispatch={props.store.dispatch.bind(props.store)}\r\n                />}\r\n                />\r\n                <Route path={'/profile'} render={() => <Profile\r\n                    posts={state.profilePage.posts}\r\n                    newPostText={state.profilePage.newPostText}\r\n                    dispatch={props.store.dispatch.bind(props.store)}\r\n                />}/>\r\n                <Route path={'/news'} render={() => <News/>}/>\r\n                <Route path={'/music'} render={() => <Music/>}/>\r\n                <Route path={'/settings'} render={() => <Settings/>}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './redux/state';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nlet rerenderEntireTree = (() => {\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <HashRouter>\r\n                <App\r\n                    store={store}\r\n               />\r\n            </HashRouter>\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    );\r\n});\r\n\r\nrerenderEntireTree();\r\n\r\nstore.subscribe(rerenderEntireTree);\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}