{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/AddMessageForm/AddMessageForm.tsx","components/Dialogs/Dialogs.tsx","components/hoc/WithAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialogItem","link","activeClassName","active","to","width","height","src","alt","name","Message","user","user1","user2","message","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","messenger","Field","component","Textarea","placeholder","validate","requiredField","submitWrapper","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogsItems","listReset","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","dispatch","addMessageActionCreator","Component","restProps"],"mappings":"6HACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,UAAY,2BAA2B,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,UAAY,2BAA2B,cAAgB,iC,oBCAtQD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,yBAAyB,OAAS,6B,oBCAvGD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,uBAAuB,MAAQ,yB,+GCQtFC,EAAuC,SAACC,GAE1C,IAAMC,EAAI,mBAAeD,EAAME,IAE/B,OACI,oBAAIC,UAAWC,IAAEC,WAAjB,SACI,eAAC,IAAD,CAASF,UAAWC,IAAEE,KAAMC,gBAAiBH,IAAEI,OAAQC,GAAIR,EAA3D,UACI,qBAAKS,MAAM,OAAOC,OAAO,OACpBC,IAAI,4EACJC,IAAI,WACRb,EAAMc,W,kBCVjBC,EAAiC,SAACf,GACpC,IAAIgB,EAAsB,IAAfhB,EAAMgB,KAAaZ,IAAEa,MAAQb,IAAEc,MAE1C,OACI,oBAAIf,UAAWC,IAAEe,QAAU,IAAMH,EAAjC,SAAwChB,EAAMmB,W,iCCHhDC,EAAeC,YAAiB,IAgBzBC,EAAsBC,YAAwB,CAACC,KAAM,wBAA/BD,EAfsC,SAACvB,GACtE,OACI,uBAAMyB,SAAUzB,EAAM0B,aAAcvB,UAAWC,IAAEuB,UAAjD,UACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,YAAa,wBACbjB,KAAM,iBACNkB,SAAU,CAACC,IAAeb,KAGjC,qBAAKjB,UAAWC,IAAE8B,cAAlB,SACI,kDCiBDC,EA/BwB,SAACnC,GACpC,IAAMoC,EAAcpC,EAAMoC,YAEpBC,EAAkBD,EAAYE,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAuBtC,GAAIsC,EAAEtC,GAAIY,KAAM0B,EAAE1B,MAAxB0B,EAAEtC,OAClEuC,EAAmBL,EAAYM,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAoBzC,GAAIyC,EAAEzC,GAAIc,KAAM2B,EAAE3B,KAC7BG,QAASwB,EAAExB,SADNwB,EAAEzC,OASvE,OACI,qCACI,sBAAKC,UAAWC,IAAEkC,QAAlB,UACI,oBAAInC,UAAWC,IAAEwC,aAAe,IAAMxC,IAAEyC,UAAxC,SACKR,IAGL,oBAAIlC,UAAWC,IAAEsC,SAAW,IAAMtC,IAAEyC,UAApC,SACKJ,OAIT,cAACnB,EAAD,CAAqBG,SAlBT,SAACqB,GACjB9C,EAAM+C,YAAYD,EAAOE,gBACzBF,EAAOE,eAAiB,U,oDCX5BC,EAA6B,SAACC,GAAD,MAAuB,CACpDC,OAAQD,EAAME,KAAKD,SC2BRE,sBACXC,aAfoB,SAACJ,GACrB,MAAO,CACHd,YAAac,EAAMd,gBAIA,SAACmB,GACxB,MAAO,CACHR,YAAc,SAACC,GACXO,EAASC,YAAwBR,UDjBtC,SAA6BS,GAUhC,OAAOH,YAAQL,EAARK,EARP,SAA2BtD,GACvB,IAAOmD,EAAwBnD,EAAxBmD,OAAWO,EAAlB,YAA+B1D,EAA/B,GAEA,OAAKmD,EAEE,cAACM,EAAD,eAAeC,IAFF,cAAC,IAAD,CAAUjD,GAAI,gBCiB3B4C,CAEOlB","file":"static/js/4.df642774.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__9d_03\",\"listReset\":\"Dialogs_listReset__2DZjo\",\"dialogsItems\":\"Dialogs_dialogsItems__3xfpV\",\"active\":\"Dialogs_active__R-dH6\",\"messages\":\"Dialogs_messages__32clz\",\"messenger\":\"Dialogs_messenger__3HgeR\",\"submitWrapper\":\"Dialogs_submitWrapper__3N8VE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"DialogItem_dialogItem__3VzTr\",\"link\":\"DialogItem_link__2xWDI\",\"active\":\"DialogItem_active__bUNsx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1TnnS\",\"user1\":\"Message_user1__S8wZx\",\"user2\":\"Message_user2__2h3_T\"};","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './DialogItem.module.css';\r\n\r\nexport type DialogItemType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nconst DialogItem: React.FC<DialogItemType> = (props) => {\r\n\r\n    const path = `/dialogs/${props.id}`;\r\n\r\n    return (\r\n        <li className={s.dialogItem}>\r\n            <NavLink className={s.link} activeClassName={s.active} to={path}>\r\n                <img width=\"30px\" height=\"30px\"\r\n                     src=\"https://cva.ukzn.ac.za/wp-content/uploads/2019/07/profile-placeholder.png\"\r\n                     alt=\"avatar\"/>\r\n                {props.name}\r\n            </NavLink>\r\n        </li>\r\n    )\r\n};\r\n\r\n\r\nexport\r\n{\r\n    DialogItem\r\n}\r\n    ;\r\n","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\nexport type MessageType = {\r\n    id: string\r\n    message: string | undefined\r\n    user: number\r\n}\r\n\r\nconst Message: React.FC<MessageType> = (props) => {\r\n    let user = props.user === 1 ? s.user1 : s.user2;\r\n\r\n    return (\r\n        <li className={s.message + ' ' + user}>{props.message}</li>\r\n    )\r\n};\r\n\r\nexport {Message};\r\n","import { Field, InjectedFormProps, reduxForm } from \"redux-form\";\r\nimport React from \"react\";\r\nimport s from \"../Dialogs.module.css\";\r\nimport { maxLengthCreator, requiredField } from \"../../../utils/validators/validator\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nexport type FormDataType = {\r\n    newMessageBody: string\r\n}\r\n\r\nconst maxLength100 = maxLengthCreator(50)\r\nexport const AddMessageForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.messenger}>\r\n            <Field component={Textarea}\r\n                   placeholder={\"...Enter your message\"}\r\n                   name={\"newMessageBody\"}\r\n                   validate={[requiredField, maxLength100]}\r\n            />\r\n\r\n            <div className={s.submitWrapper}>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\nexport const AddMessageFormRedux = reduxForm<FormDataType>({form: \"dialogAddMessageForm\"})(AddMessageForm);","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport { DialogItem } from \"./DialogItem/DialogItem\";\r\nimport { Message } from \"./Message/Message\";\r\nimport { DialogsType } from \"./DialogsContainer\";\r\nimport { AddMessageFormRedux } from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs: React.FC<DialogsType> = (props) => {\r\n    const dialogsPage = props.dialogsPage;\r\n\r\n    const dialogsElements = dialogsPage.dialogs.map(d => <DialogItem key={d.id} id={d.id} name={d.name} />);\r\n    const messagesElements = dialogsPage.messages.map(m => <Message key={m.id} id={m.id} user={m.user}\r\n                                                                    message={m.message} />);\r\n\r\n    let addNewMessage = (values: { newMessageBody: string }) => {\r\n        props.sendMessage(values.newMessageBody);\r\n        values.newMessageBody = '';\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={s.dialogs}>\r\n                <ul className={s.dialogsItems + ' ' + s.listReset}>\r\n                    {dialogsElements}\r\n                </ul>\r\n\r\n                <ul className={s.messages + ' ' + s.listReset}>\r\n                    {messagesElements}\r\n                </ul>\r\n            </div>\r\n\r\n            <AddMessageFormRedux onSubmit={addNewMessage} />\r\n        </>\r\n    )\r\n};\r\n\r\n\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\n\r\nlet mapStateToPropsForRedirect = (state: StateType) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\ntype mapStateToPropsForRedirectType = ReturnType<typeof mapStateToPropsForRedirect>;\r\n\r\nexport function withAuthRedirect<T>(Component: React.ComponentType<T>) {\r\n\r\n    function RedirectComponent(props: mapStateToPropsForRedirectType) {\r\n        const {isAuth, ...restProps} = props\r\n\r\n        if (!isAuth) return <Redirect to={\"/login\"}/>\r\n\r\n        return <Component {...restProps as T} />\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}","import { addMessageActionCreator, DialogsPageType } from \"../../redux/dialogs-reducer\";\r\nimport { StateType } from \"../../redux/redux-store\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose, Dispatch } from \"redux\";\r\nimport { withAuthRedirect } from \"../hoc/WithAuthRedirect\";\r\nimport React from \"react\";\r\n\r\ntype MapStateToPropsType = {\r\n    dialogsPage: DialogsPageType\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    // updateNewMessageText: (text: string) => void\r\n    sendMessage: (newMessageBody: string) => void\r\n}\r\n\r\nexport type DialogsType = MapStateToPropsType & mapDispatchToPropsType;\r\n\r\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n    return {\r\n        sendMessage : (newMessageBody) => {\r\n            dispatch(addMessageActionCreator(newMessageBody))\r\n        },\r\n    };\r\n};\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect)(Dialogs)\r\n\r\n\r\n"],"sourceRoot":""}