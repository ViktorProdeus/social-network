{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Friends/Friends.module.css","components/Friends/FriendsItem/FriendsItem.module.css","components/Header/Header.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.module.css","components/News/News.module.css","components/Music/Music.module.css","components/Setting/Settings.module.css","components/SiteBar/SiteBar.module.css","components/Users/Users.module.css","components/Navbar/Navbar.module.css","reportWebVitals.ts","redux/profile-reducer.ts","redux/dialogs-reducer.ts","redux/sidebar-reducer.ts","redux/users-reducer.ts","redux/redux-store.ts","components/Header/Header.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Setting/Settings.tsx","components/Friends/FriendsItem/FriendsItem.tsx","components/Friends/Friends.tsx","components/SiteBar/SiteBarContainer.tsx","components/SiteBar/SiteBar.tsx","components/Navbar/Navbar.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","assets/images/avatar.png","components/Users/Users.tsx","components/Users/UsersContainer.tsx","App.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ADD_POST","UPDATE_NEW_POST_TEXT","initialState","posts","id","v1","message","likeCount","newPostText","profileReducer","state","action","type","newPost","ADD_MESSAGE","UPDATE_NEW_MESSAGE","dialogs","name","messages","user","newMessageText","dialogsReducer","friends","sidebarReducer","FOLLOW","UNFOLLOW","SET_USERS","users","usersReducer","map","u","userID","followed","reducers","combineReducers","profilePage","dialogsPage","siteBar","usersPage","store","createStore","window","Header","className","s","header","src","alt","ProfileInfo","preview","wrapper","Post","props","item","MyPosts","postsElements","p","newPostElement","useRef","ref","onChange","current","text","value","updateNewPostText","onClick","addPost","MyPostsContainer","connect","dispatch","updateNewPostTextCreator","Profile","profile","News","news","Music","music","Settings","settings","FriendsItem","circle","Friends","friendsElements","title","friendsList","SiteBarContainer","Navbar","nav","to","activeClassName","activeLink","active","DialogItem","path","dialogItem","link","width","height","Message","user1","user2","Dialogs","dialogsElements","d","messagesElements","m","newMessageElement","dialogsItems","listReset","messenger","textareaWrapper","placeholder","updateNewMessageText","submitWrapper","sendMessage","DialogsContainer","updateNewMessageTextCreator","Users","axios","get","response","setUsers","data","items","this","leftContent","avatarBG","avatar","photos","small","avatarDefaultPhoto","buttons","unfollow","follow","rightContent","innerLeft","status","innerRight","country","city","React","Component","followAC","unfollowAC","setUsersAC","App","render","UsersContainer","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53f1942a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__9d_03\",\"listReset\":\"Dialogs_listReset__2DZjo\",\"dialogsItems\":\"Dialogs_dialogsItems__3xfpV\",\"active\":\"Dialogs_active__R-dH6\",\"messages\":\"Dialogs_messages__32clz\",\"messenger\":\"Dialogs_messenger__3HgeR\",\"textareaWrapper\":\"Dialogs_textareaWrapper__18KeY\",\"submitWrapper\":\"Dialogs_submitWrapper__3N8VE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"DialogItem_dialogItem__3VzTr\",\"link\":\"DialogItem_link__2xWDI\",\"active\":\"DialogItem_active__bUNsx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1TnnS\",\"user1\":\"Message_user1__S8wZx\",\"user2\":\"Message_user2__2h3_T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ProfileInfo_wrapper__2TN9j\",\"preview\":\"ProfileInfo_preview__2NOY3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MyPosts_wrapper__3pZ18\",\"posts\":\"MyPosts_posts__3GeRT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Friends_title__18mMj\",\"friendsList\":\"Friends_friendsList__200-J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendsItem_item__2fAi-\",\"circle\":\"FriendsItem_circle__1Hy3A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1tXis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1U4Qr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2ZpOe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__3q4B5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__14jij\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__1Twb_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"siteBar\":\"SiteBar_siteBar__UVcXu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__ygJzY\",\"leftContent\":\"Users_leftContent__3imbX\",\"buttons\":\"Users_buttons__1TWgR\",\"follow\":\"Users_follow__2fcw9\",\"unfollow\":\"Users_unfollow__3FA7I\",\"avatarBG\":\"Users_avatarBG__1o7T-\",\"avatar\":\"Users_avatar__1n4J8\",\"user\":\"Users_user__3zAP9\",\"rightContent\":\"Users_rightContent__1TefX\",\"innerLeft\":\"Users_innerLeft__38_DD\",\"innerRight\":\"Users_innerRight__1zpr6\",\"name\":\"Users_name__29eea\",\"status\":\"Users_status__3wQOm\",\"city\":\"Users_city__2e9I0\",\"country\":\"Users_country__35-4c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Navbar_wrapper__3oknN\",\"nav\":\"Navbar_nav__3j_MG\",\"item\":\"Navbar_item__1OyJD\",\"activeLink\":\"Navbar_activeLink__2Ubgr\"};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {v1} from \"uuid\";\r\nimport {PostType} from \"../components/Profile/MyPosts/Post/Post\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\r\n\r\nexport type ActionProfileType = {\r\n    type: \"ADD-POST\" | \"UPDATE-NEW-POST-TEXT\"\r\n    newPostText?: string | undefined\r\n}\r\n\r\nexport type ProfilePageType = {\r\n    posts: PostType[]\r\n    newPostText: string | undefined\r\n}\r\n\r\nlet initialState: ProfilePageType = {\r\n    posts: [\r\n        {id: v1(), message: 'Hi, how are you?', likeCount: 3},\r\n        {id: v1(), message: 'How is your it-camasutra?', likeCount: 13},\r\n    ],\r\n    newPostText: ''\r\n\r\n};\r\nconst profileReducer = (state = initialState, action: ActionProfileType) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: v1(),\r\n                message: state.newPostText,\r\n                likeCount: 0\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n\r\n        case UPDATE_NEW_POST_TEXT: {\r\n\r\n            return {\r\n                ...state,\r\n                newPostText: action.newPostText\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (): ActionProfileType => ({type: ADD_POST});\r\nexport const updateNewPostTextCreator = (text: string): ActionProfileType => ({\r\n    type: UPDATE_NEW_POST_TEXT,\r\n    newPostText: text\r\n});\r\n\r\nexport default profileReducer;","import {v1} from \"uuid\";\r\nimport {MessageType} from \"../components/Dialogs/Message/Message\";\r\nimport {DialogItemType} from \"../components/Dialogs/DialogItem/DialogItem\";\r\n\r\nconst ADD_MESSAGE = \"ADD-MESSAGE\";\r\nconst UPDATE_NEW_MESSAGE = \"UPDATE-NEW-MESSAGE\";\r\n\r\nexport type ActionDialogsType = {\r\n    type: \"ADD-MESSAGE\" | \"UPDATE-NEW-MESSAGE\"\r\n    newMessageText: string\r\n}\r\n\r\nexport type DialogsPageType = {\r\n    dialogs: DialogItemType[]\r\n    messages: MessageType[]\r\n    newMessageText: string | undefined\r\n}\r\n\r\nlet initialState: DialogsPageType = {\r\n    dialogs: [\r\n        {id: v1(), name: 'Dimych'},\r\n        {id: v1(), name: 'Andrey'},\r\n        {id: v1(), name: 'Sveta'},\r\n        {id: v1(), name: 'Sasha'},\r\n        {id: v1(), name: 'Viktor'},\r\n        {id: v1(), name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: v1(), message: 'Hi!', user: 1},\r\n        {id: v1(), message: 'Hi!', user: 2},\r\n        {id: v1(), message: 'How is your it-camasutra?', user: 2},\r\n        {id: v1(), message: 'Perfectly', user: 1},\r\n        {id: v1(), message: 'It\\'s amazing', user: 2},\r\n        {id: v1(), message: 'Thanks', user: 1}\r\n    ],\r\n    newMessageText: ''\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action: ActionDialogsType) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {\r\n                    id: v1(),\r\n                    message: state.newMessageText,\r\n                    user: 2\r\n                }],\r\n                newMessageText: ''\r\n            };\r\n\r\n        case UPDATE_NEW_MESSAGE:\r\n\r\n            return {...state, newMessageText: action.newMessageText};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addMessageActionCreator = () => ({type: ADD_MESSAGE});\r\nexport const updateNewMessageTextCreator = (text: string) => ({\r\n    type: UPDATE_NEW_MESSAGE,\r\n    newMessageText: text\r\n});\r\n\r\nexport default dialogsReducer;","import {v1} from \"uuid\";\r\nimport {FriendType} from \"../components/Friends/FriendsItem/FriendsItem\";\r\n\r\nexport type SiteBarType = {\r\n    friends: FriendType[]\r\n}\r\n\r\nlet initialState: SiteBarType = {\r\n    friends: [\r\n        {id: v1(), name: 'Andrew'},\r\n        {id: v1(), name: 'Sasha'},\r\n        {id: v1(), name: 'Sveta'},\r\n    ]\r\n};\r\n\r\nconst sidebarReducer = (state = initialState, action: {}) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer","const FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\n\r\nexport type ActionUsersType = {\r\n    type: \"FOLLOW\" | \"UNFOLLOW\" | \"SET_USERS\"\r\n    users: UserType[]\r\n    userID?: string\r\n}\r\n\r\nexport type LocationType = {\r\n    city: string\r\n    country: string\r\n}\r\n\r\nexport type UserType = {\r\n    id: string\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n    name: string\r\n    status: string\r\n    followed: boolean\r\n    location: LocationType\r\n}\r\nexport type UsersPageType = {\r\n    users: UserType[]\r\n}\r\n\r\nlet initialState: UsersPageType = {\r\n    users: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action: ActionUsersType) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n\r\n        case SET_USERS:\r\n            return {\r\n                ...state, users: [...action.users]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followAC = (userID: string) => ({type: FOLLOW, userID});\r\nexport const unfollowAC = (userID: string) => ({type: UNFOLLOW, userID});\r\nexport const setUsersAC = (users: UserType[]) => ({type: SET_USERS, users});\r\n\r\nexport default usersReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport profileReducer, {ProfilePageType} from \"./profile-reducer\";\r\nimport dialogsReducer, {DialogsPageType} from \"./dialogs-reducer\";\r\nimport sidebarReducer, {SiteBarType} from \"./sidebar-reducer\";\r\nimport usersReducer, {UsersPageType} from \"./users-reducer\";\r\n\r\nexport type StateType = {\r\n    profilePage: ProfilePageType\r\n    dialogsPage: DialogsPageType\r\n    siteBar: SiteBarType\r\n    usersPage: UsersPageType\r\n}\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    siteBar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\n// @ts-ignore\r\nwindow.store = store\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src='https://www.meme-arsenal.com/memes/e207dd3d241976dcbca5fefcd1bfdc70.jpg' alt={'logo'}/>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <div>\r\n            <div className={s.preview}>\r\n                <img src='https://playprint.ru/images/catalog/categories/category-marvel-bg.jpg' alt={'background'}/>\r\n            </div>\r\n\r\n            <div className={s.wrapper}>\r\n                ava + description\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nexport type PostType = {\r\n    id: string\r\n    message: string | undefined\r\n    likeCount: number\r\n}\r\n\r\nconst Post: React.FC<PostType> = (props) => {\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://cva.ukzn.ac.za/wp-content/uploads/2019/07/profile-placeholder.png' alt={'avatar'}/>\r\n            {props.message}\r\n            <div>\r\n                <span>&#x2665;</span> {props.likeCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;\r\n","import React, {useRef} from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post, {PostType} from './Post/Post';\r\n\r\ntype MyPostsPropsType = {\r\n    updateNewPostText: (text: string) => void\r\n    addPost: () => void\r\n    posts: PostType[]\r\n    newPostText: string | undefined\r\n}\r\n\r\nconst MyPosts: React.FC<MyPostsPropsType> = (props) => {\r\n    const postsElements = props.posts.map(p => <Post key={p.id} id={p.id} message={p.message}\r\n                                                     likeCount={p.likeCount}/>);\r\n    const newPostElement: React.RefObject<HTMLTextAreaElement> = useRef<HTMLTextAreaElement>(null);\r\n\r\n    let onAddPost = () => {\r\n        props.addPost();\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        if (newPostElement.current) {\r\n            let text = newPostElement.current?.value;\r\n            props.updateNewPostText(text)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea\r\n                        ref={newPostElement}\r\n                        onChange={onPostChange}\r\n                        value={props.newPostText}\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    <button onClick={onAddPost}>Add post</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MyPosts;\r\n","import {addPostActionCreator, updateNewPostTextCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {StateType} from \"../../../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport {PostType} from \"./Post/Post\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype MapStateToPropsType = {\r\n    posts: PostType[]\r\n    newPostText: string | undefined\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    updateNewPostText: (text: string) => void\r\n    addPost: () => void\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n    return {\r\n        updateNewPostText : (text: string) => {\r\n            dispatch(updateNewPostTextCreator(text));\r\n        },\r\n        addPost : () => {\r\n            dispatch(addPostActionCreator());\r\n        },\r\n    };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n\r\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <div className={s.profile}>\r\n            <ProfileInfo/>\r\n\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div className={s.news}>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;\r\n","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div className={s.music}>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;\r\n","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div className={s.settings}>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\nimport s from './FriendsItem.module.css';\r\n\r\nexport type FriendType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nconst FriendsItem: React.FC<FriendType> = (props) => {\r\n\r\n\r\n    return (\r\n        <li className={s.item}>\r\n            <div className={s.circle}></div>\r\n            {props.name}\r\n        </li>\r\n    )\r\n};\r\n\r\nexport {FriendsItem};","import React from 'react';\r\nimport s from './Friends.module.css';\r\nimport {FriendsItem} from \"./FriendsItem/FriendsItem\";\r\nimport {SiteBarType} from \"../../redux/sidebar-reducer\";\r\n\r\nconst Friends: React.FC<SiteBarType> = (props) => {\r\n    const friendsElements = props.friends.map(item => <FriendsItem key={item.id} id={item.id} name={item.name}/>)\r\n\r\n    return (\r\n        <>\r\n            <h2 className={s.title}>Friends</h2>\r\n\r\n            <ul className={s.friendsList}>\r\n                {friendsElements}\r\n            </ul>\r\n        </>\r\n    )\r\n};\r\n\r\nexport {Friends};","import {SiteBar} from \"./SiteBar\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\nimport {FriendType} from \"../Friends/FriendsItem/FriendsItem\";\r\n\r\ntype MapStateToPropsType = {\r\n    friends: FriendType[]\r\n}\r\n\r\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\r\n    return {\r\n        friends: state.siteBar.friends\r\n    };\r\n};\r\n\r\n\r\nconst SiteBarContainer = connect(mapStateToProps, {})(SiteBar);\r\n\r\n\r\nexport default SiteBarContainer;\r\n","import React from 'react';\r\nimport s from './SiteBar.module.css';\r\nimport {Friends} from \"../Friends/Friends\";\r\nimport {FriendType} from \"../Friends/FriendsItem/FriendsItem\";\r\n\r\n\r\ntype PropsType = {\r\n    friends: FriendType[]\r\n}\r\nconst SiteBar: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div className={s.siteBar}>\r\n            <Friends friends={props.friends}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport {SiteBar};","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport SiteBarContainer from \"../SiteBar/SiteBarContainer\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <nav className={s.nav}>\r\n                <div className={s.item}>\r\n                    <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n                </div>\r\n\r\n                <div className={`${s.item} ${s.active}`}>\r\n                    <NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink>\r\n                </div>\r\n            </nav>\r\n\r\n            <SiteBarContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './DialogItem.module.css';\r\n\r\nexport type DialogItemType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nconst DialogItem: React.FC<DialogItemType> = (props) => {\r\n\r\n    const path = `/dialogs/${props.id}`;\r\n\r\n    return (\r\n        <li className={s.dialogItem}>\r\n            <NavLink className={s.link} activeClassName={s.active} to={path}>\r\n                <img width=\"30px\" height=\"30px\"\r\n                     src=\"https://cva.ukzn.ac.za/wp-content/uploads/2019/07/profile-placeholder.png\"\r\n                     alt=\"avatar\"/>\r\n                {props.name}\r\n            </NavLink>\r\n        </li>\r\n    )\r\n};\r\n\r\n\r\nexport\r\n{\r\n    DialogItem\r\n}\r\n    ;\r\n","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\nexport type MessageType = {\r\n    id: string\r\n    message: string | undefined\r\n    user: number\r\n}\r\n\r\nconst Message: React.FC<MessageType> = (props) => {\r\n    let user = props.user === 1 ? s.user1 : s.user2;\r\n\r\n    return (\r\n        <li className={s.message + ' ' + user}>{props.message}</li>\r\n    )\r\n};\r\n\r\nexport {Message};\r\n","import React, {useRef} from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {DialogsPageType} from \"../../redux/dialogs-reducer\";\r\n\r\n\r\nexport type DialogsType = {\r\n    updateNewMessageText: (text: string) => void\r\n    sendMessage: () => void\r\n    dialogsPage: DialogsPageType\r\n\r\n}\r\n\r\nconst Dialogs: React.FC<DialogsType> = (props) => {\r\n    const dialogsPage = props.dialogsPage;\r\n\r\n    const dialogsElements = dialogsPage.dialogs.map(d => <DialogItem key={d.id} id={d.id} name={d.name}/>);\r\n    const messagesElements = dialogsPage.messages.map(m => <Message key={m.id} id={m.id} user={m.user}\r\n                                                                    message={m.message}/>);\r\n    let newMessageElement = useRef<HTMLTextAreaElement>(null);\r\n\r\n    let addMessage = () => {\r\n        props.sendMessage();\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        if (newMessageElement.current) {\r\n            let text = newMessageElement.current?.value;\r\n            props.updateNewMessageText(text)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className={s.dialogs}>\r\n                <ul className={s.dialogsItems + ' ' + s.listReset}>\r\n                    {dialogsElements}\r\n                </ul>\r\n\r\n                <ul className={s.messages + ' ' + s.listReset}>\r\n                    {messagesElements}\r\n                </ul>\r\n            </div>\r\n\r\n            <div className={s.messenger}>\r\n                <div className={s.textareaWrapper}>\r\n                    <textarea\r\n                        placeholder={'...Enter your message'}\r\n                        ref={newMessageElement}\r\n                        value={dialogsPage.newMessageText}\r\n                        onChange={onPostChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.submitWrapper}>\r\n                    <button onClick={addMessage}>Send</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Dialogs;\r\n","import {addMessageActionCreator, DialogsPageType, updateNewMessageTextCreator} from \"../../redux/dialogs-reducer\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype MapStateToPropsType = {\r\n    dialogsPage: DialogsPageType\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    updateNewMessageText: (text: string) => void\r\n    sendMessage: () => void\r\n}\r\n\r\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n    return {\r\n        updateNewMessageText : (text: string) => {\r\n            dispatch(updateNewMessageTextCreator(text));\r\n        },\r\n        sendMessage : () => {\r\n            dispatch(addMessageActionCreator())\r\n        },\r\n    };\r\n};\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer;\r\n","export default __webpack_public_path__ + \"static/media/avatar.2479805a.png\";","import React from 'react';\r\nimport {UserType} from \"../../redux/users-reducer\";\r\nimport s from './Users.module.css'\r\nimport avatarDefaultPhoto from \"../../assets/images/avatar.png\"\r\nimport axios from \"axios\";\r\n\r\ntype PropsType = {\r\n    follow: (userID: string) => void\r\n    unfollow: (userID: string) => void\r\n    setUsers: (users: UserType[]) => void\r\n    users: UserType[]\r\n}\r\n\r\nclass Users extends React.Component<PropsType, {}> {\r\n    componentDidMount() {\r\n        axios.get('https://social-network.samuraijs.com/api/1.0/users').then(response => {\r\n            this.props.setUsers(response.data.items)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={s.users}>\r\n                {\r\n                    this.props.users.map(u => {\r\n                        return (\r\n                            <div className={s.user} key={u.id}>\r\n                                <div className={s.leftContent}>\r\n                                    <div className={s.avatarBG}>\r\n                                        <img className={s.avatar}\r\n                                             src={u.photos.small !== null ? u.photos.small : avatarDefaultPhoto}\r\n                                             alt=\"avatar\"/>\r\n                                    </div>\r\n                                    <div className={s.buttons}>\r\n                                        {\r\n                                            u.followed\r\n                                                ?\r\n                                                <button className={u.followed ? s.unfollow : s.follow} onClick={() => {\r\n                                                    this.props.unfollow(u.id)\r\n                                                }}>Unfollow</button>\r\n                                                :\r\n                                                <button className={u.followed ? s.unfollow : s.follow} onClick={() => {\r\n                                                    this.props.follow(u.id)\r\n                                                }}>Follow</button>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <div className={s.rightContent}>\r\n                                    <div className={s.innerLeft}>\r\n                                        <div className={s.name}>{u.name}</div>\r\n                                        <div className={s.status}>{u.status}</div>\r\n                                    </div>\r\n                                    <div className={s.innerRight}>\r\n                                        <div className={s.country}>{'u.location.country'}</div>\r\n                                        <div className={s.city}>{'u.location.city'}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Users;","import Users from \"./Users\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\nimport {followAC, setUsersAC, unfollowAC, UserType} from \"../../redux/users-reducer\";\r\nimport { Dispatch } from \"redux\";\r\n\r\n\r\n\r\nconst mapStateToProps = (state: StateType): MapStateToPropsType  => {\r\n    return {\r\n        users: state.usersPage.users\r\n    }\r\n}\r\ntype MapStateToPropsType = {\r\n    users: UserType[]\r\n}\r\ntype mapDispatchToPropsType = {\r\n    follow: (userID: string)=> void\r\n    unfollow: (userID: string)=> void\r\n    setUsers: (users: UserType[])=> void\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch ): mapDispatchToPropsType => {\r\n    return {\r\n        follow: (userID: string) => {\r\n            dispatch(followAC(userID))\r\n        },\r\n\r\n        unfollow: (userID: string) => {\r\n            dispatch(unfollowAC(userID))\r\n        },\r\n\r\n        setUsers: (users: UserType[]) => {\r\n            dispatch(setUsersAC(users))\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect<MapStateToPropsType, mapDispatchToPropsType, {},StateType>(mapStateToProps, mapDispatchToProps)(Users);","import React from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header/Header';\r\nimport Profile from './components/Profile/Profile';\r\nimport {Route} from \"react-router-dom\";\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Setting/Settings\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\n\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <div className='app-wrapper'>\r\n            <Header/>\r\n            <Navbar />\r\n\r\n            <div className=\"app-wrapper-content\">\r\n                <Route path={'/dialogs'} render={() => <DialogsContainer />}\r\n                />\r\n                <Route path={'/profile'} render={() => <Profile/>}/>\r\n                <Route path={'/news'} render={() => <News/>}/>\r\n                <Route path={'/music'} render={() => <Music/>}/>\r\n                <Route path={'/settings'} render={() => <Settings/>}/>\r\n                <Route path={'/users'} render={() => <UsersContainer/>}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './redux/redux-store';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <HashRouter>\r\n                <Provider store={store}>\r\n                    <App/>\r\n                </Provider>\r\n            </HashRouter>\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    );\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}