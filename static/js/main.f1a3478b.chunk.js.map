{"version":3,"sources":["assets/images/avatar.png","components/Users/Users.module.css","redux/dialogs-reducer.ts","components/News/News.module.css","components/Music/Music.module.css","components/Setting/Settings.module.css","components/SiteBar/SiteBar.module.css","components/Navbar/Navbar.module.css","api/api.ts","components/Login/Login.module.css","reportWebVitals.ts","components/News/News.tsx","components/Music/Music.tsx","components/Setting/Settings.tsx","components/Friends/FriendsItem/FriendsItem.tsx","components/Friends/Friends.tsx","components/SiteBar/SiteBarContainer.tsx","components/SiteBar/SiteBar.tsx","components/Navbar/Navbar.tsx","utils/helpers/object-helpers.ts","redux/users-reducer.ts","components/Users/User.tsx","locale/en_US.tsx","components/Users/Users.tsx","redux/users-selectors.ts","components/Users/UsersContainer.tsx","assets/images/logo.svg","components/Header/Header.tsx","redux/auth-reducer.ts","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","redux/app-reducer.ts","redux/sidebar-reducer.ts","redux/redux-store.ts","components/hoc/withSuspense.tsx","App.tsx","index.tsx","components/common/FormsControls/FormsControls.tsx","utils/validators/validator.ts","assets/images/spinner.svg","components/common/Preloader/Preloader.tsx","components/Friends/Friends.module.css","components/Header/Header.module.css","components/common/FormsControls/FormsControls.module.css","components/Friends/FriendsItem/FriendsItem.module.css","redux/profile-reducer.ts"],"names":["module","exports","ADD_MESSAGE","initialState","dialogs","id","v1","name","messages","message","user","addMessageActionCreator","newMessageBody","type","dialogsReducer","state","action","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","authAPI","login","email","password","rememberMe","captcha","logout","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","securityAPI","getCaptchaUrl","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","News","className","s","news","Music","music","Settings","settings","FriendsItem","props","item","circle","Friends","friendsElements","friends","map","wrapper","title","friendsList","SiteBarContainer","connect","siteBar","Navbar","nav","to","activeClassName","activeLink","active","updateObjectInArray","items","itemId","objPropName","newObjProps","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","userID","followed","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingInProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","filter","User","leftContent","avatarBG","avatar","src","photos","small","avatarDefaultPhoto","alt","buttons","disabled","some","onClick","rightContent","innerLeft","innerRight","country","city","localeInfo","items_per_page","jump_to","jump_to_confirm","page","prev_page","next_page","prev_5","next_5","prev_3","next_3","Users","showTitle","current","onChange","e","onPageChanged","defaultCurrent","defaultPageSize","total","locale","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","this","Preloader","React","Component","compose","bind","totalCount","Header","header","logo","loginBlock","isAuth","FiLogOut","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","url","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","requiredField","Input","formGroup","formGroup_checkbox","checkbox","Field","component","checkboxText","formSummaryError","length","stopSubmit","_error","inner","SET_INITIALIZED_SUCCESS","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","app","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","WrappedComponent","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","SuspendedDialogs","SuspendedProfile","App","initializeApp","path","exact","render","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","ReactDOM","document","getElementById","FormControl","input","meta","hasError","touched","styles","formControl","children","Textarea","restProps","text","validators","validate","value","maxLengthCreator","maxLength","preloader","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","posts","likeCount","addPostActionCreator","newPostText","setStatus","getUserProfile","file","getState","reject","newPost","p","postId"],"mappings":"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","file":"static/js/main.f1a3478b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avatar.2479805a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__ygJzY\",\"leftContent\":\"Users_leftContent__3imbX\",\"buttons\":\"Users_buttons__1TWgR\",\"unfollow\":\"Users_unfollow__3FA7I\",\"follow\":\"Users_follow__2fcw9\",\"avatarBG\":\"Users_avatarBG__1o7T-\",\"avatar\":\"Users_avatar__1n4J8\",\"user\":\"Users_user__3zAP9\",\"rightContent\":\"Users_rightContent__1TefX\",\"innerLeft\":\"Users_innerLeft__38_DD\",\"innerRight\":\"Users_innerRight__1zpr6\",\"name\":\"Users_name__29eea\",\"status\":\"Users_status__3wQOm\",\"city\":\"Users_city__2e9I0\",\"country\":\"Users_country__35-4c\",\"page\":\"Users_page__Pgi1K\",\"current\":\"Users_current__2iicU\"};","import {v1} from \"uuid\";\r\n\r\nconst ADD_MESSAGE = \"ADD-MESSAGE\";\r\n\r\nexport type ActionsDialogsType = ActionAddMessageType;\r\n\r\n\r\ntype ActionAddMessageType = {\r\n    type: typeof ADD_MESSAGE\r\n    newMessageBody: string\r\n}\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: v1(), name: 'Dimych'},\r\n        {id: v1(), name: 'Andrey'},\r\n        {id: v1(), name: 'Sveta'},\r\n        {id: v1(), name: 'Sasha'},\r\n        {id: v1(), name: 'Viktor'},\r\n        {id: v1(), name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: v1(), message: 'Hi!', user: 1},\r\n        {id: v1(), message: 'Hi!', user: 2},\r\n        {id: v1(), message: 'How is your it-camasutra?', user: 2},\r\n        {id: v1(), message: 'Perfectly', user: 1},\r\n        {id: v1(), message: 'It\\'s amazing', user: 2},\r\n        {id: v1(), message: 'Thanks', user: 1}\r\n    ],\r\n};\r\n\r\nexport type DialogsPageType = typeof initialState\r\n\r\nconst dialogsReducer = (state : DialogsPageType = initialState, action: ActionsDialogsType): DialogsPageType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {\r\n                    id: v1(),\r\n                    message: action.newMessageBody,\r\n                    user: 2\r\n                }],\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addMessageActionCreator = (newMessageBody: string): ActionAddMessageType => ({type: ADD_MESSAGE, newMessageBody});\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__3q4B5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__14jij\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__1Twb_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"siteBar\":\"SiteBar_siteBar__UVcXu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Navbar_wrapper__3oknN\",\"nav\":\"Navbar_nav__3j_MG\",\"item\":\"Navbar_item__1OyJD\",\"activeLink\":\"Navbar_activeLink__2Ubgr\"};","import axios from \"axios\";\r\nimport { ProfileType } from \"../redux/profile-reducer\";\r\n\r\nconst baseURL = 'https://social-network.samuraijs.com/api/1.0/';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL,\r\n    headers: {\r\n        \"API-KEY\": \"e12dcb15-1200-4ce1-bb28-bb99ac0ccb98\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number = 1, pageSize: number = 5) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n\r\n    follow(userId: string) {\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => response.data);\r\n    },\r\n\r\n    unfollow(userId: string) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(response => response.data);\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    get() {\r\n        return instance.get<GetResponse>('auth/me').then(response => response.data);\r\n    },\r\n\r\n    login(email: string, password: string, rememberMe: boolean = false, captcha: string | null = null) {\r\n        return instance.post('auth/login', {email, password, rememberMe, captcha})\r\n            .then(response => response.data);\r\n    },\r\n\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n            .then(response => response.data);\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    get(userId: string | null) {\r\n        return instance.get(`profile/${userId}`).then(response => response.data);\r\n    },\r\n\r\n    getStatus(userId: string) {\r\n        return instance.get(`profile/status/${userId}`).then(response => response.data);\r\n    },\r\n\r\n    updateStatus(status: string) {\r\n        return instance.put('profile/status', {status}).then(response => response.data);\r\n    },\r\n\r\n    savePhoto(photoFile: string) {\r\n        const formData = new FormData();\r\n        formData.append('image', photoFile);\r\n        return instance.put('profile/photo', formData, {headers: {'Content-Type': 'multipart/form-data'}});\r\n    },\r\n\r\n    saveProfile(profile: ProfileType) {\r\n        return instance.put('profile', profile);\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get('security/get-captcha-url');\r\n    }\r\n}\r\n\r\ntype GetResponse = {\r\n    data: {\r\n        email: string\r\n        id: string\r\n        login: string\r\n    }\r\n    fieldsErrors: string[]\r\n    messages: string[]\r\n    resultCode: number\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__20SqU\",\"inner\":\"Login_inner__eyIyF\",\"formGroup\":\"Login_formGroup__3GsaD\",\"formGroup_checkbox\":\"Login_formGroup_checkbox__2OoCz\",\"errorInput\":\"Login_errorInput__14XaB\",\"formSummaryError\":\"Login_formSummaryError__1ac4r\"};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div className={s.news}>\r\n            <h1>News</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;\r\n","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div className={s.music}>\r\n            <h1>Music</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;\r\n","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div className={s.settings}>\r\n            <h1>Settings</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\nimport s from './FriendsItem.module.css';\r\n\r\nexport type FriendType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nconst FriendsItem: React.FC<FriendType> = (props) => {\r\n\r\n\r\n    return (\r\n        <li className={s.item}>\r\n            <div className={s.circle}></div>\r\n            {props.name}\r\n        </li>\r\n    )\r\n};\r\n\r\nexport {FriendsItem};","import React from 'react';\r\nimport s from './Friends.module.css';\r\nimport {FriendsItem} from \"./FriendsItem/FriendsItem\";\r\nimport {SiteBarType} from \"../../redux/sidebar-reducer\";\r\n\r\nconst Friends: React.FC<SiteBarType> = (props) => {\r\n    const friendsElements = props.friends.map(item => <FriendsItem key={item.id} id={item.id} name={item.name}/>)\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <h2 className={s.title}>Friends</h2>\r\n\r\n            <ul className={s.friendsList}>\r\n                {friendsElements}\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport {Friends};","import {SiteBar} from \"./SiteBar\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\nimport {FriendType} from \"../Friends/FriendsItem/FriendsItem\";\r\n\r\ntype MapStateToPropsType = {\r\n    friends: FriendType[]\r\n}\r\n\r\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\r\n    return {\r\n        friends: state.siteBar.friends\r\n    };\r\n};\r\n\r\n\r\nconst SiteBarContainer = connect(mapStateToProps, {})(SiteBar);\r\n\r\n\r\nexport default SiteBarContainer;\r\n","import React from 'react';\r\nimport s from './SiteBar.module.css';\r\nimport {Friends} from \"../Friends/Friends\";\r\nimport {FriendType} from \"../Friends/FriendsItem/FriendsItem\";\r\n\r\n\r\ntype PropsType = {\r\n    friends: FriendType[]\r\n}\r\nconst SiteBar: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div className={s.siteBar}>\r\n            <Friends friends={props.friends}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport {SiteBar};","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport SiteBarContainer from \"../SiteBar/SiteBarContainer\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <nav className={s.nav}>\r\n                <div className={s.item}>\r\n                    <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n                </div>\r\n\r\n                <div className={`${s.item} ${s.active}`}>\r\n                    <NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to='/login' activeClassName={s.activeLink}>Login</NavLink>\r\n                </div>\r\n            </nav>\r\n\r\n            <SiteBarContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import { UserType } from \"../../redux/users-reducer\";\r\n\r\nexport const updateObjectInArray = (items: UserType[], itemId: string, objPropName: keyof UserType, newObjProps: { followed: boolean }) => {\r\n    return items.map(u => {\r\n\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import { usersAPI } from \"../api/api\";\r\nimport { Dispatch } from \"redux\";\r\nimport { updateObjectInArray } from \"../utils/helpers/object-helpers\";\r\n\r\nconst FOLLOW = \"users/FOLLOW\";\r\nconst UNFOLLOW = \"users/UNFOLLOW\";\r\nconst SET_USERS = \"users/SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"users/SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"users/SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"users/TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"users/TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\n\r\ntype ActionFollowType = {\r\n    type: typeof FOLLOW\r\n    followed: boolean\r\n    userID: string\r\n}\r\n\r\n\r\ntype ActionUnfollowType = {\r\n    type: typeof UNFOLLOW\r\n    followed: boolean\r\n    userID: string\r\n}\r\n\r\ntype ActionSetUsersType = {\r\n    type: typeof SET_USERS\r\n    users: UserType[]\r\n}\r\n\r\ntype ActionSetCurrentPageType = {\r\n    type: typeof SET_CURRENT_PAGE\r\n    currentPage: number\r\n}\r\n\r\ntype ActionSetTotalUsersCountType = {\r\n    type: typeof SET_TOTAL_USERS_COUNT\r\n    totalUsersCount: number\r\n}\r\n\r\ntype ActionToggleIsFetchingType = {\r\n    type: typeof TOGGLE_IS_FETCHING\r\n    isFetching: boolean\r\n}\r\n\r\ntype ActionToggleIsFollowingProgressType = {\r\n    type: typeof TOGGLE_IS_FOLLOWING_PROGRESS\r\n    isFetching: boolean\r\n    userId: string\r\n}\r\n\r\ntype ActionsUsersType =\r\n    ActionFollowType\r\n    | ActionUnfollowType\r\n    | ActionSetUsersType\r\n    | ActionSetCurrentPageType\r\n    | ActionSetTotalUsersCountType\r\n    | ActionToggleIsFetchingType\r\n    | ActionToggleIsFollowingProgressType;\r\n\r\ntype LocationType = {\r\n    city: string\r\n    country: string\r\n}\r\n\r\nexport type UserType = {\r\n    id: string\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n    name: string\r\n    status: string\r\n    followed: boolean\r\n    location: LocationType\r\n}\r\n\r\nlet initialState = {\r\n    users: [] as UserType[],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as string[],\r\n}\r\n\r\nexport type UsersPageType = typeof initialState\r\n\r\nconst usersReducer = (state: UsersPageType = initialState, action: ActionsUsersType): UsersPageType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                //refactoring\r\n                users: updateObjectInArray(state.users, action.userID,\"id\", {followed: action.followed})\r\n                // * without refactoring *\r\n                    // state.users\r\n                    // .map(u => (u.id === action.userID)\r\n                    //     ? {...u, followed: action.followed} : u)\r\n            }\r\n\r\n        case SET_USERS:\r\n            return {\r\n                ...state, users: action.users\r\n            }\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state, totalUsersCount: action.totalUsersCount\r\n            }\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state, followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userID: string): ActionFollowType => ({\r\n    type: FOLLOW,\r\n    followed: true,\r\n    userID\r\n});\r\nexport const unfollowSuccess = (userID: string): ActionUnfollowType => ({\r\n    type: UNFOLLOW,\r\n    followed: false,\r\n    userID\r\n});\r\nexport const setUsers = (users: UserType[]): ActionSetUsersType => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage: number): ActionSetCurrentPageType => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage\r\n});\r\nexport const setTotalUsersCount = (totalCount: number): ActionSetTotalUsersCountType => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    totalUsersCount: totalCount\r\n});\r\nexport const toggleIsFetching = (isFetching: boolean): ActionToggleIsFetchingType => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n});\r\nexport const toggleFollowingInProgress = (isFetching: boolean, userId: string): ActionToggleIsFollowingProgressType => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\n\r\n// ThunkCreators\r\n\r\nexport const requestUsers = (page: number, pageSize: number) => {\r\n\r\n    return async (dispatch: Dispatch<ActionsUsersType>) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        const data = await usersAPI.getUsers(page, pageSize);\r\n\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch: Dispatch<ActionsUsersType>, userId: string, apiMethod:(userId: string) => Promise<any>, actionCreator: (userID: string) => ActionFollowType | ActionUnfollowType) => {\r\n    dispatch(toggleFollowingInProgress(true, userId));\r\n    const data = await apiMethod(userId);\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingInProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId: string) => {\r\n    const apiMethod = usersAPI.follow.bind(usersAPI);\r\n    const actionCreator = followSuccess;\r\n\r\n    return async (dispatch: Dispatch<ActionsUsersType>) => {\r\n        await followUnfollowFlow(dispatch, userId, apiMethod, actionCreator)\r\n    }\r\n    // (dispatch: Dispatch<ActionsUsersType>) => {\r\n    //     dispatch(toggleFollowingInProgress(true, userId));\r\n    //     const data = await apiMethod(userId);\r\n    //\r\n    //     if (data.resultCode === 0) {\r\n    //         dispatch(actionCreator(userId));\r\n    //     }\r\n    //     dispatch(toggleFollowingInProgress(false, userId));\r\n    // }\r\n}\r\n\r\nexport const unfollow = (userId: string) => {\r\n    const apiMethod = usersAPI.unfollow.bind(usersAPI);\r\n    const actionCreator = unfollowSuccess;\r\n\r\n    return async (dispatch: Dispatch<ActionsUsersType>) => {\r\n        await followUnfollowFlow(dispatch, userId, apiMethod, actionCreator)\r\n    }\r\n\r\n    //     dispatch(toggleFollowingInProgress(true, userId));\r\n    //     const data = await apiMethod(userId);\r\n    //\r\n    //     if (data.resultCode === 0) {\r\n    //         dispatch(actionCreator(userId));\r\n    //     }\r\n    //     dispatch(toggleFollowingInProgress(false, userId));\r\n    // }\r\n}\r\n\r\nexport default usersReducer;","import React from 'react';\r\nimport s from './Users.module.css'\r\nimport avatarDefaultPhoto from \"../../assets/images/avatar.png\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { UserType } from \"../../redux/users-reducer\";\r\n\r\ntype PropsType = {\r\n    follow: (userID: string) => void\r\n    unfollow: (userID: string) => void\r\n    user: UserType\r\n    followingInProgress: string[]\r\n}\r\n\r\nconst User = (props: PropsType) => {\r\n    const {user, followingInProgress, follow, unfollow} = props;\r\n    const u = user;\r\n\r\n    return (\r\n        <div className={s.user} key={u.id}>\r\n            <div className={s.leftContent}>\r\n                <div className={s.avatarBG}>\r\n                    <NavLink to={`./profile/${u.id}`}>\r\n                        <img className={s.avatar}\r\n                             src={u.photos.small !== null ? u.photos.small : avatarDefaultPhoto}\r\n                             alt=\"avatar\" />\r\n                    </NavLink>\r\n                </div>\r\n                <div className={s.buttons}>\r\n                    {\r\n                        u.followed\r\n                            ?\r\n                            <button className={u.followed ? s.unfollow : s.follow}\r\n                                    disabled={followingInProgress.some(id => id === u.id)}\r\n                                    onClick={() => {\r\n                                        unfollow(u.id)\r\n                                    }}\r\n                            >Unfollow</button>\r\n                            :\r\n                            <button className={u.followed ? s.unfollow : s.follow}\r\n                                    disabled={followingInProgress.some(id => id === u.id)}\r\n                                    onClick={() => {\r\n                                        follow(u.id)\r\n                                    }}\r\n                            >Follow</button>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className={s.rightContent}>\r\n                <div className={s.innerLeft}>\r\n                    <div className={s.name}>{u.name}</div>\r\n                    <div className={s.status}>{u.status}</div>\r\n                </div>\r\n                <div className={s.innerRight}>\r\n                    <div className={s.country}>{'u.location.country'}</div>\r\n                    <div className={s.city}>{'u.location.city'}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default User;","type localeInfoType = {\r\n    // Options.jsx\r\n    items_per_page: string\r\n    jump_to: string\r\n    jump_to_confirm: string\r\n    page: string\r\n\r\n    // Pagination.jsx\r\n    prev_page: string\r\n    next_page: string\r\n    prev_5: string\r\n    next_5: string\r\n    prev_3: string\r\n    next_3: string\r\n}\r\n\r\n\r\nconst localeInfo: localeInfoType = {\r\n    // Options.jsx\r\n    items_per_page: '/ page',\r\n    jump_to: 'Go to',\r\n    jump_to_confirm: 'confirm',\r\n    page: '',\r\n\r\n    // Pagination.jsx\r\n    prev_page: 'Previous Page',\r\n    next_page: 'Next Page',\r\n    prev_5: 'Previous 5 Pages',\r\n    next_5: 'Next 5 Pages',\r\n    prev_3: 'Previous 3 Pages',\r\n    next_3: 'Next 3 Pages',\r\n};\r\n\r\n\r\nexport default localeInfo;","import React from 'react';\r\nimport s from './Users.module.css'\r\nimport { UserType } from \"../../redux/users-reducer\";\r\n// import Paginator from \"../Paginator/Paginator\";\r\nimport User from \"./User\";\r\nimport Pagination from 'rc-pagination';\r\nimport localeInfo from \"../../locale/en_US\";\r\n\r\ntype PropsType = {\r\n    follow: (userID: string) => void\r\n    unfollow: (userID: string) => void\r\n    users: UserType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    followingInProgress: string[]\r\n}\r\n\r\nconst Users = (props: PropsType) => {\r\n    const {\r\n        follow,\r\n        unfollow,\r\n        users,\r\n        followingInProgress,\r\n        // pageSize,\r\n        // totalUsersCount,\r\n        // currentPage,\r\n        // onPageChanged,\r\n    } = props;\r\n\r\n    return (\r\n        <div className={s.users}>\r\n            <div className=\"pagination\">\r\n\r\n                {/*<Paginator*/}\r\n                {/*    pageSize={pageSize}*/}\r\n                {/*    totalItemsCount={totalUsersCount}*/}\r\n                {/*    currentPage={currentPage}*/}\r\n                {/*    onPageChanged={onPageChanged}*/}\r\n                {/*/>*/}\r\n\r\n                {/*plugin rc-pagination*/}\r\n                <Pagination\r\n                    showTitle={true}\r\n                    current={props.currentPage}\r\n                    className=\"ant-pagination\"\r\n                    onChange={(e) => {\r\n                        props.onPageChanged(e)\r\n                    }}\r\n                    defaultCurrent={props.currentPage}\r\n                    defaultPageSize={props.pageSize}\r\n                    total={props.totalUsersCount}\r\n                    locale={localeInfo}\r\n                />\r\n\r\n            </div>\r\n            {\r\n                users.map(u => {\r\n                    return (\r\n                        <User\r\n                            key={u.id}\r\n                            user={u}\r\n                            followingInProgress={followingInProgress}\r\n                            follow={follow}\r\n                            unfollow={unfollow}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import { StateType } from \"./redux-store\";\r\nimport { createSelector } from \"reselect\";\r\n\r\nconst getUsersSelector = (state: StateType) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n        return users.filter(u => true);\r\n    })\r\n\r\nexport const getPageSize = (state: StateType) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state: StateType) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state: StateType) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state: StateType) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state: StateType) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport { StateType } from \"../../redux/redux-store\";\r\nimport {\r\n    follow,\r\n    requestUsers,\r\n    setCurrentPage,\r\n    toggleFollowingInProgress,\r\n    unfollow,\r\n    UserType\r\n} from \"../../redux/users-reducer\";\r\n\r\nimport React from \"react\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport { compose } from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\ntype UsersContainerPropsType = MapStateToPropsType & MapDispatchToProps\r\n\r\n\r\nclass UsersContainer extends React.Component<UsersContainerPropsType> {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const {pageSize} = this.props;\r\n        setCurrentPage(pageNumber);\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {\r\n                this.props.isFetching && <Preloader />\r\n            }\r\n\r\n            <Users\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                pageSize={this.props.pageSize}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n    users: UserType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: string[]\r\n}\r\n\r\ntype MapDispatchToProps = {\r\n    follow: (userID: string) => void\r\n    unfollow: (userID: string) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    toggleFollowingInProgress: (isFetching: boolean, userId: string) => void\r\n}\r\n\r\nconst mapStateToProps = (state: StateType) => {\r\n\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect<MapStateToPropsType, MapDispatchToProps, {}, StateType>(\r\n        mapStateToProps, {follow, unfollow, setCurrentPage, getUsers: requestUsers, toggleFollowingInProgress})\r\n)(UsersContainer);","export default __webpack_public_path__ + \"static/media/logo.d941bb34.svg\";","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Header.module.css';\r\nimport {HeaderContainerPropsType} from \"./HeaderContainer\";\r\nimport logo from \"../../assets/images/logo.svg\";\r\nimport { FiLogOut } from \"@react-icons/all-files/fi/FiLogOut\";\r\n\r\n\r\nconst Header = (props: HeaderContainerPropsType) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src={logo} alt={'logo'}/>\r\n            <div className={s.loginBlock}>\r\n                {\r\n                    props.isAuth\r\n                        ?\r\n                        <div className={s.login}>{props.login} <FiLogOut onClick={props.logout}/></div>\r\n                        : <NavLink to={'/login'}>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import { authAPI, securityAPI } from \"../api/api\";\r\nimport { Dispatch } from \"redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { StateType } from \"./redux-store\";\r\nimport { stopSubmit } from \"redux-form\";\r\nimport { FormAction } from \"redux-form/lib/actions\";\r\n\r\nconst SET_USER_DATA = \"users/SET-USER-DATA\";\r\nconst GET_CAPTCHA_URL_SUCCESS = 'auth/GET-CAPTCHA-URL-SUCCESS';\r\n\r\nexport type AuthStateType = {\r\n    id: string | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n    captchaUrl: string | null\r\n}\r\n\r\n\r\nlet initialState: AuthStateType = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null,\r\n    // isFetching: false\r\n};\r\n\r\n\r\nconst authReducer = (state: AuthStateType = initialState, action: ActionsType): AuthStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (id: string | null, email: string | null, login: string | null, isAuth: boolean) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {\r\n        id, email, login, isAuth\r\n    }\r\n} as const);\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl: string) => (\r\n    {\r\n        type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}\r\n    } as const);\r\n\r\ntype ActionSetUserDataType = ReturnType<typeof setAuthUserData> | ReturnType<typeof getCaptchaUrlSuccess>\r\n\r\nexport const getAuthUserData = () => async (dispatch: Dispatch<ActionsType>) => {\r\n    const response = await authAPI.get();\r\n\r\n    if (response.resultCode === 0) {\r\n        let {id, login, email} = response.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n\r\n};\r\n\r\ntype GetAuthUserDataThunkType = ThunkDispatch<StateType, unknown, ActionsType | FormAction>\r\n\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string) => async (dispatch: GetAuthUserDataThunkType) => {\r\n    const response = await authAPI.login(email, password, rememberMe, captcha);\r\n\r\n    if (response.resultCode === 0) {\r\n        await dispatch(getAuthUserData());\r\n    } else {\r\n        if (response.resultCode === 10) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n\r\n        let message = response.messages.length > 0 ? response.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"Login\", {_error: message}));\r\n    }\r\n};\r\n\r\nexport const getCaptchaUrl = () => async (dispatch: Dispatch<ActionsType>) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n}\r\n\r\nexport const logout = () => async (dispatch: Dispatch<ActionsType>) => {\r\n    const response = await authAPI.logout();\r\n\r\n    if (response.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n};\r\n\r\nexport type ActionsType = ActionSetUserDataType\r\n\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../redux/auth-reducer\";\r\nimport { StateType } from \"../../redux/redux-store\";\r\n\r\nexport type HeaderContainerPropsType = mapStateType & mapDispatchType\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerPropsType> {\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\ntype mapStateType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\n\r\ntype mapDispatchType = {\r\n    logout:  () => void\r\n}\r\n\r\nconst mapStateToProps = (state: StateType): mapStateType => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);\r\n","import React from 'react';\r\nimport s from './Login.module.css';\r\nimport { Field, InjectedFormProps, reduxForm } from \"redux-form\";\r\nimport { requiredField } from \"../../utils/validators/validator\";\r\nimport { createField, Input } from \"../common/FormsControls/FormsControls\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../redux/auth-reducer\";\r\nimport { StateType } from \"../../redux/redux-store\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\ntype FormDataType = {\r\n    captchaUrl: string\r\n    rememberMe: boolean\r\n    password: string\r\n    email: string\r\n}\r\n\r\ntype LoginFormOwnProps = {\r\n    captchaUrl: string | null\r\n}\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<FormDataType, LoginFormOwnProps> & LoginFormOwnProps> = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"text\", \"Email\", \"email\", [requiredField], Input)}\r\n            {createField(\"password\", \"password\", \"password\", [requiredField], Input)}\r\n\r\n            {captchaUrl && <img src={captchaUrl} alt=\"captcha\" />}\r\n            {captchaUrl && createField(\"text\",\"Symbols from image\", \"captcha\", [requiredField], Input)}\r\n\r\n            <div className={`${s.formGroup} ${s.formGroup_checkbox}`}>\r\n                <label className={s.checkbox}>\r\n                    <Field name={'rememberMe'} component={'input'} type='checkbox' />\r\n                    <span className={s.checkboxText}>remember me</span>\r\n                </label>\r\n            </div>\r\n\r\n            <div className={s.formSummaryError}>\r\n                {error}\r\n            </div>\r\n\r\n            <div className={s.formGroup}>\r\n                <button type=\"submit\">submit</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType, LoginFormOwnProps>({form: 'Login'})(LoginForm);\r\n\r\nconst Login: React.FC<mapDispatchToPropsType & mapStateToPropsType> = ({isAuth, login, captchaUrl} ) => {\r\n    const onSubmit = (formData: FormDataType) => {\r\n        login(formData.email, formData.password, formData.rememberMe, formData.captchaUrl);\r\n    }\r\n\r\n    if(isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return (\r\n        <div className={s.login}>\r\n            <h1>Login</h1>\r\n            <div className={s.inner}>\r\n                <LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl}/>\r\n                <div>\r\n                    <p>To login, enter test e-mails and password:</p>\r\n                    <p>Email: <span>free@samuraijs.com</span></p>\r\n                    <p>Password: <span>free</span></p>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: StateType) => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaUrl: state.auth.captchaUrl,\r\n})\r\n\r\ntype mapStateToPropsType = ReturnType<typeof mapStateToProps>\r\n\r\ntype mapDispatchToPropsType = {\r\n    login: (email: string, password: string, rememberMe: boolean, captcha: string) => void\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {login}) (Login);\r\n","import { ThunkDispatch } from \"redux-thunk\";\r\nimport { StateType } from \"./redux-store\";\r\nimport { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst SET_INITIALIZED_SUCCESS = \"app/SET-INITIALIZED-SUCCESS\";\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n};\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\nconst appReducer = (state: initialStateType = initialState, action: ActionsType): initialStateType => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializesSuccess = () => ({\r\n    type: SET_INITIALIZED_SUCCESS,\r\n} as const);\r\n\r\ntype InitializesSuccessType = ReturnType<typeof initializesSuccess>\r\n\r\ntype InitializeAppThunkType = ThunkDispatch<StateType, unknown, ActionsType>\r\n\r\nexport const initializeApp = () => async (dispatch: InitializeAppThunkType) => {\r\n    const promise = dispatch(getAuthUserData());\r\n\r\n    await Promise.all([promise])\r\n    dispatch(initializesSuccess());\r\n};\r\n\r\n\r\nexport type ActionsType = InitializesSuccessType\r\n\r\n\r\nexport default appReducer;","import {v1} from \"uuid\";\r\n\r\n\r\nlet initialState = {\r\n    friends: [\r\n        {id: v1(), name: 'Andrew'},\r\n        {id: v1(), name: 'Sasha'},\r\n        {id: v1(), name: 'Sveta'},\r\n    ]\r\n};\r\n\r\nexport type SiteBarType = typeof initialState\r\n\r\n\r\nconst sidebarReducer = (state: SiteBarType = initialState, action: {}): SiteBarType => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer","import { combineReducers, createStore, applyMiddleware, compose, Action } from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport appReducer from \"./app-reducer\";\r\nimport thunkMiddleware, { ThunkAction } from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    siteBar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer,\r\n});\r\n\r\nexport type StateType = ReturnType<typeof reducers>\r\n\r\nexport type InferActionsTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never\r\nexport type BaseThunkType<A extends Action = Action, R = Promise<void>> = ThunkAction<R, StateType, unknown, A>\r\n\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers,  composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n// @ts-ignore\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from \"react\";\r\n\r\nexport function withSuspense<WCP>(WrappedComponent: React.ComponentType<WCP>) {\r\n    return (props: WCP) => {\r\n        return <React.Suspense fallback={<div>loading...</div>} >\r\n            <WrappedComponent {...props} />\r\n        </React.Suspense>\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { HashRouter, Redirect, Route, withRouter } from \"react-router-dom\";\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Setting/Settings\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\n\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\n\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport { connect, Provider } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { initializeApp } from \"./redux/app-reducer\";\r\nimport store, { StateType } from \"./redux/redux-store\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport { withSuspense } from \"./components/hoc/withSuspense\";\r\n\r\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"));\r\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"));\r\n\r\nconst SuspendedDialogs = withSuspense(DialogsContainer);\r\nconst SuspendedProfile = withSuspense(ProfileContainer);\r\n\r\n\r\nclass App extends React.Component<MapStateToPropsType & mapDispatchToPropsType> {\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader />\r\n        }\r\n\r\n        return (\r\n            <div className='app-wrapper'>\r\n\r\n                <HeaderContainer />\r\n                <Navbar />\r\n\r\n                <div className=\"app-wrapper-content\">\r\n                    <Route path={'/'} exact render={() => <Redirect to={'/profile'} />} />\r\n                    <Route path={'/dialogs'} render={() => <SuspendedDialogs/>} />\r\n                    <Route path={'/profile/:userId?'} render={() => <SuspendedProfile />} />\r\n                    <Route path={'/news'} render={() => <News />} />\r\n                    <Route path={'/music'} render={() => <Music />} />\r\n                    <Route path={'/settings'} render={() => <Settings />} />\r\n                    <Route path={'/users'} render={() => <UsersContainer />} />\r\n                    <Route path={'/login'} render={() => <Login />} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: StateType) => ({\r\n    initialized: state.app.initialized,\r\n})\r\n\r\ntype MapStateToPropsType = ReturnType<typeof mapStateToProps>\r\n\r\ntype mapDispatchToPropsType = {\r\n    initializeApp: () => void\r\n}\r\n\r\nconst AppContainer = compose<React.ComponentType>(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\nconst SamuraiJSApp = () => {\r\n    return <HashRouter>\r\n        <Provider store={store}>\r\n            <AppContainer />\r\n        </Provider>\r\n    </HashRouter>\r\n}\r\n\r\nexport default SamuraiJSApp;","import './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SamuraiJSApp from './App';\r\n\r\nReactDOM.render(<SamuraiJSApp />, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import React, { FC } from 'react';\r\nimport styles from './FormsControls.module.css';\r\nimport { Field, WrappedFieldProps } from \"redux-form\";\r\nimport { RequiredFieldType } from \"../../../utils/validators/validator\";\r\n\r\nexport const FormControl: React.FC<WrappedFieldProps> = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={hasError ? `${styles.formControl} ${styles.error}` : styles.formControl}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Textarea = (props: WrappedFieldProps) => {\r\n    const {input, meta, ...restProps} = props;\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...input} {...restProps} />\r\n            <span>{hasError && meta.error}</span>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\ntype OwnPropsType = {\r\n    text: string\r\n}\r\n\r\nexport const Input: React.FC<WrappedFieldProps & OwnPropsType> = (props) => {\r\n    const {input, meta: {touched, error}, text, ...restProps} = props;\r\n    const hasError = touched && error;\r\n\r\n    return (\r\n        <FormControl {...props}>\r\n            <label>\r\n                <span>{text}</span>\r\n                <br />\r\n                <input {...input} {...restProps} />\r\n                <br />\r\n                <span>{hasError && error}</span>\r\n            </label>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport const createField = (type: 'text' | 'password', text: string, name: string, validators: RequiredFieldType[], component: FC<WrappedFieldProps & OwnPropsType>) => (\r\n    <>\r\n        <Field\r\n            type={type}\r\n            text={text}\r\n            name={name}\r\n            component={component}\r\n            validate={validators}\r\n        />\r\n    </>\r\n)","export const requiredField = (value: string) => {\r\n    if(value) return undefined;\r\n    return  \"Field is required\";\r\n}\r\n\r\nexport type RequiredFieldType = typeof requiredField\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n    if(value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return  undefined;\r\n}","export default __webpack_public_path__ + \"static/media/spinner.6f870003.svg\";","import React from 'react';\r\nimport preloader from \"../../../assets/images/spinner.svg\";\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className=\"preloader\">\r\n            <img src={preloader} alt=\"preloader\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Friends_wrapper__1ATQ7\",\"title\":\"Friends_title__18mMj\",\"friendsList\":\"Friends_friendsList__200-J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1tXis\",\"loginBlock\":\"Header_loginBlock__Xhj6l\",\"login\":\"Header_login__3uVYG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl___Itib\",\"error\":\"FormsControls_error__13d8D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendsItem_item__2fAi-\",\"circle\":\"FriendsItem_circle__1Hy3A\"};","import { v1 } from \"uuid\";\r\nimport { profileAPI } from \"../api/api\";\r\nimport { Dispatch } from \"redux\";\r\nimport { stopSubmit } from \"redux-form\";\r\nimport { FormAction } from \"redux-form/lib/actions\";\r\nimport { BaseThunkType, InferActionsTypes } from \"./redux-store\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\r\nconst SET_USER_PROFILE = \"SET-USER-PROFILE\";\r\nconst SET_STATUS = \"SET-STATUS\";\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE-PHOTO-SUCCESS';\r\n\r\nexport type ActionsProfileType = AddPostType\r\n    | UpdatePostType\r\n    | SetUsersType\r\n    | DeletePostType\r\n    | SavePhotoType\r\n    | SetStatusType;\r\n\r\ntype AddPostType = {\r\n    type: typeof ADD_POST\r\n    newPostText: string\r\n}\r\n\r\ntype UpdatePostType = {\r\n    type: typeof UPDATE_NEW_POST_TEXT\r\n    newPostText: string\r\n}\r\n\r\ntype SetUsersType = {\r\n    type: typeof SET_USER_PROFILE\r\n    profile: ProfileType\r\n}\r\n\r\ntype SetStatusType = {\r\n    type: typeof SET_STATUS\r\n    status: string\r\n}\r\n\r\ntype DeletePostType = {\r\n    type: typeof DELETE_POST\r\n    postId: string\r\n}\r\n\r\ntype SavePhotoType = {\r\n    type: typeof SAVE_PHOTO_SUCCESS\r\n    photos: PhotosType\r\n}\r\n\r\ntype ContactsType = {\r\n    github: string\r\n    vk: string\r\n    facebook: string\r\n    instagram: string\r\n    twitter: string\r\n    website: string\r\n    youtube: string\r\n    mainLink: string\r\n}\r\n\r\ntype PhotosType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\n\r\nexport type ProfileType = {\r\n    aboutMe: string\r\n    contacts: ContactsType\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    userId: string\r\n    photos: PhotosType\r\n}\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: v1(), message: 'Hi, how are you?', likeCount: 3},\r\n        {id: v1(), message: 'How is your it-camasutra?', likeCount: 13},\r\n    ],\r\n\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n};\r\n\r\nexport type ProfilePageType = typeof initialState\r\n\r\nconst profileReducer = (state: ProfilePageType = initialState, action: ActionsProfileType): ProfilePageType => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: v1(),\r\n                message: action.newPostText,\r\n                likeCount: 0\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                posts: [newPost, ...state.posts],\r\n            };\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {...state,\r\n                profile: {\r\n                    ...state.profile,\r\n                    photos: action.photos\r\n                } as ProfileType\r\n            }\r\n\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\r\n\r\n        case SET_STATUS: {\r\n\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (newPostText: string): AddPostType => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (profile: ProfileType): SetUsersType => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status: string): SetStatusType => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId: string) => ({type: DELETE_POST, postId} as const)\r\nexport const savePhotoSuccess = (photos: PhotosType) => ({type: SAVE_PHOTO_SUCCESS, photos} as const)\r\n\r\nexport const getUserProfile = (userID: string | null) => async (dispatch: Dispatch<ActionsProfileType>) => {\r\n    const data = await profileAPI.get(userID);\r\n    dispatch(setUserProfile(data));\r\n}\r\nexport const getStatus = (userID: string) => async (dispatch: Dispatch<ActionsProfileType>) => {\r\n    const data = await profileAPI.getStatus(userID);\r\n    dispatch(setStatus(data));\r\n}\r\nexport const updateStatus = (status: string) => async (dispatch: Dispatch<ActionsProfileType>) => {\r\n    const data = await profileAPI.updateStatus(status);\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\nexport const savePhoto = (file: string) => async (dispatch: Dispatch<ActionsProfileType>) => {\r\n    const response = await profileAPI.savePhoto(file);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n\r\n}\r\n\r\nexport const saveProfile = (profile: ProfileType): ThunkType => async (dispatch, getState) => {\r\n    const response = await profileAPI.saveProfile(profile);\r\n\r\n    const userId = getState().auth.id;\r\n\r\n    if (response.data.resultCode === 0) {\r\n        await dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0] }));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\ntype ActionsType = InferActionsTypes<ActionsProfileType>\r\ntype ThunkType = BaseThunkType<ActionsType | FormAction>\r\n\r\nexport default profileReducer;"],"sourceRoot":""}